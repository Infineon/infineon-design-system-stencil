/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface IfxAlert {
        "color": 'primary' | 'secondary' | 'success' | 'danger' | 'warning';
        "icon": string;
        "overflowing": boolean;
    }
    interface IfxButton {
        "color": 'primary' | 'secondary' | 'success' | 'danger' | 'warning';
        "disabled": boolean;
        "href": string;
        "iconOnly": boolean;
        "iconPosition": 'left' | 'right';
        "label": string;
        "setFocus": () => Promise<void>;
        "size": 's' | 'm';
        "target": string;
        "variant": 'solid' | 'outline' | 'outline-text';
    }
    interface IfxCard {
        "button": boolean;
        "headline": string;
        "list": boolean;
        "skyline": boolean;
        "subtitle": string;
        "text": string;
    }
    interface IfxDropdown {
        "disabled": boolean;
        "filter": boolean;
        "icon": boolean;
        "label": string;
        "search": boolean;
        "size": 's' | 'm';
    }
    interface IfxDropdownItem {
        "checkable": boolean;
        "disabled": boolean;
        "icon": boolean;
        "label": string;
        "size": 's' | 'm';
    }
    interface IfxDropdownMenu {
        "disabled": boolean;
        "filter": boolean;
        "icon": boolean;
        "label": string;
        "search": boolean;
        "size": 's' | 'm';
    }
    interface IfxFilterInput {
        "disabled": boolean;
        "filter": boolean;
        "icon": boolean;
        "label": string;
        "search": boolean;
        "size": 's' | 'm';
    }
    interface IfxSearchInput {
        "disabled": boolean;
        "filter": boolean;
        "icon": boolean;
        "label": string;
        "search": boolean;
        "size": 's' | 'm';
    }
    interface InfineonIconStencil {
        "icon": any;
        "ifxIcon": any;
    }
}
declare global {
    interface HTMLIfxAlertElement extends Components.IfxAlert, HTMLStencilElement {
    }
    var HTMLIfxAlertElement: {
        prototype: HTMLIfxAlertElement;
        new (): HTMLIfxAlertElement;
    };
    interface HTMLIfxButtonElement extends Components.IfxButton, HTMLStencilElement {
    }
    var HTMLIfxButtonElement: {
        prototype: HTMLIfxButtonElement;
        new (): HTMLIfxButtonElement;
    };
    interface HTMLIfxCardElement extends Components.IfxCard, HTMLStencilElement {
    }
    var HTMLIfxCardElement: {
        prototype: HTMLIfxCardElement;
        new (): HTMLIfxCardElement;
    };
    interface HTMLIfxDropdownElement extends Components.IfxDropdown, HTMLStencilElement {
    }
    var HTMLIfxDropdownElement: {
        prototype: HTMLIfxDropdownElement;
        new (): HTMLIfxDropdownElement;
    };
    interface HTMLIfxDropdownItemElement extends Components.IfxDropdownItem, HTMLStencilElement {
    }
    var HTMLIfxDropdownItemElement: {
        prototype: HTMLIfxDropdownItemElement;
        new (): HTMLIfxDropdownItemElement;
    };
    interface HTMLIfxDropdownMenuElement extends Components.IfxDropdownMenu, HTMLStencilElement {
    }
    var HTMLIfxDropdownMenuElement: {
        prototype: HTMLIfxDropdownMenuElement;
        new (): HTMLIfxDropdownMenuElement;
    };
    interface HTMLIfxFilterInputElement extends Components.IfxFilterInput, HTMLStencilElement {
    }
    var HTMLIfxFilterInputElement: {
        prototype: HTMLIfxFilterInputElement;
        new (): HTMLIfxFilterInputElement;
    };
    interface HTMLIfxSearchInputElement extends Components.IfxSearchInput, HTMLStencilElement {
    }
    var HTMLIfxSearchInputElement: {
        prototype: HTMLIfxSearchInputElement;
        new (): HTMLIfxSearchInputElement;
    };
    interface HTMLInfineonIconStencilElement extends Components.InfineonIconStencil, HTMLStencilElement {
    }
    var HTMLInfineonIconStencilElement: {
        prototype: HTMLInfineonIconStencilElement;
        new (): HTMLInfineonIconStencilElement;
    };
    interface HTMLElementTagNameMap {
        "ifx-alert": HTMLIfxAlertElement;
        "ifx-button": HTMLIfxButtonElement;
        "ifx-card": HTMLIfxCardElement;
        "ifx-dropdown": HTMLIfxDropdownElement;
        "ifx-dropdown-item": HTMLIfxDropdownItemElement;
        "ifx-dropdown-menu": HTMLIfxDropdownMenuElement;
        "ifx-filter-input": HTMLIfxFilterInputElement;
        "ifx-search-input": HTMLIfxSearchInputElement;
        "infineon-icon-stencil": HTMLInfineonIconStencilElement;
    }
}
declare namespace LocalJSX {
    interface IfxAlert {
        "color"?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning';
        "icon"?: string;
        "overflowing"?: boolean;
    }
    interface IfxButton {
        "color"?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning';
        "disabled"?: boolean;
        "href"?: string;
        "iconOnly"?: boolean;
        "iconPosition"?: 'left' | 'right';
        "label"?: string;
        "size"?: 's' | 'm';
        "target"?: string;
        "variant"?: 'solid' | 'outline' | 'outline-text';
    }
    interface IfxCard {
        "button"?: boolean;
        "headline"?: string;
        "list"?: boolean;
        "skyline"?: boolean;
        "subtitle"?: string;
        "text"?: string;
    }
    interface IfxDropdown {
        "disabled"?: boolean;
        "filter"?: boolean;
        "icon"?: boolean;
        "label"?: string;
        "search"?: boolean;
        "size"?: 's' | 'm';
    }
    interface IfxDropdownItem {
        "checkable"?: boolean;
        "disabled"?: boolean;
        "icon"?: boolean;
        "label"?: string;
        "size"?: 's' | 'm';
    }
    interface IfxDropdownMenu {
        "disabled"?: boolean;
        "filter"?: boolean;
        "icon"?: boolean;
        "label"?: string;
        "search"?: boolean;
        "size"?: 's' | 'm';
    }
    interface IfxFilterInput {
        "disabled"?: boolean;
        "filter"?: boolean;
        "icon"?: boolean;
        "label"?: string;
        "search"?: boolean;
        "size"?: 's' | 'm';
    }
    interface IfxSearchInput {
        "disabled"?: boolean;
        "filter"?: boolean;
        "icon"?: boolean;
        "label"?: string;
        "search"?: boolean;
        "size"?: 's' | 'm';
    }
    interface InfineonIconStencil {
        "icon"?: any;
        "ifxIcon"?: any;
    }
    interface IntrinsicElements {
        "ifx-alert": IfxAlert;
        "ifx-button": IfxButton;
        "ifx-card": IfxCard;
        "ifx-dropdown": IfxDropdown;
        "ifx-dropdown-item": IfxDropdownItem;
        "ifx-dropdown-menu": IfxDropdownMenu;
        "ifx-filter-input": IfxFilterInput;
        "ifx-search-input": IfxSearchInput;
        "infineon-icon-stencil": InfineonIconStencil;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ifx-alert": LocalJSX.IfxAlert & JSXBase.HTMLAttributes<HTMLIfxAlertElement>;
            "ifx-button": LocalJSX.IfxButton & JSXBase.HTMLAttributes<HTMLIfxButtonElement>;
            "ifx-card": LocalJSX.IfxCard & JSXBase.HTMLAttributes<HTMLIfxCardElement>;
            "ifx-dropdown": LocalJSX.IfxDropdown & JSXBase.HTMLAttributes<HTMLIfxDropdownElement>;
            "ifx-dropdown-item": LocalJSX.IfxDropdownItem & JSXBase.HTMLAttributes<HTMLIfxDropdownItemElement>;
            "ifx-dropdown-menu": LocalJSX.IfxDropdownMenu & JSXBase.HTMLAttributes<HTMLIfxDropdownMenuElement>;
            "ifx-filter-input": LocalJSX.IfxFilterInput & JSXBase.HTMLAttributes<HTMLIfxFilterInputElement>;
            "ifx-search-input": LocalJSX.IfxSearchInput & JSXBase.HTMLAttributes<HTMLIfxSearchInputElement>;
            "infineon-icon-stencil": LocalJSX.InfineonIconStencil & JSXBase.HTMLAttributes<HTMLInfineonIconStencilElement>;
        }
    }
}
