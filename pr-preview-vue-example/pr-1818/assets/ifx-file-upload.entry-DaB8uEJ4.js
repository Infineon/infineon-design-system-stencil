import{r as f,c as n,h as i,g as c}from"./index-BfuXk02G.js";const h=':root{--ifx-font-family:"Source Sans 3";font-family:var(--ifx-font-family, sans-serif)}:host{font-family:var(--ifx-font-family, sans-serif)}.file-upload-wrapper{display:flex;flex-direction:column}.upload-dropzone{border:1px dashed #BFBBBB;padding:40px;text-align:center;cursor:pointer;color:#1D1D1D;transition:border-color 0.3s ease;border-radius:1px;background:#FFFFFF}.upload-dropzone ifx-icon{color:#0A8276}.upload-dropzone:hover{border:1px dashed #8D8786}.upload-dropzone.drag-over{border:1px solid #0A8276;background:#F7F7F7}.upload-dropzone input{display:none}.file-upload-info{font-style:normal;font-weight:400;font-size:0.75rem;line-height:1rem;letter-spacing:0em;color:#1D1D1D;margin:0;margin-top:4px}.file-list{list-style:none;padding:0;margin:0;margin-top:16px;display:flex;flex-direction:column;gap:16px}.file-item{border:1px solid #BFBBBB;padding:16px;display:flex;gap:16px}.file-info{width:100%;min-width:0}.file-top-row{display:flex;align-items:center;justify-content:space-between;gap:16px;margin-top:-8px}.file-top-row ifx-icon{flex-shrink:0}.file-name-wrapper{display:flex;min-width:0;max-width:100%;white-space:nowrap;overflow:hidden;font-weight:400;font-size:0.875rem}.file-name-base{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;flex-shrink:1;min-width:0}.file-name-ext{flex-shrink:0;margin-left:0}.file-middle-row{display:flex;align-items:center;font-size:0.75rem;line-height:1rem;flex-wrap:wrap;color:#575352}.file-middle-row .file-status{margin-left:16px}.file-progress-row{margin-top:16px}.file-progress-row ifx-progress-bar{width:100%}.upload-success{border-color:#0A8276}.upload-success .file-status ifx-icon{position:relative;top:2px;color:#4CA460}.upload-failed{border-color:#CD002F}.upload-failed .file-status{color:#CD002F;margin-left:0}',m=h,u=class{constructor(e){f(this,e),this.ifxFileUploadAdd=n(this,"ifxFileUploadAdd",7),this.ifxFileUploadRemove=n(this,"ifxFileUploadRemove",7),this.ifxFileUploadChange=n(this,"ifxFileUploadChange",7),this.ifxFileUploadError=n(this,"ifxFileUploadError",7),this.ifxFileUploadInvalid=n(this,"ifxFileUploadInvalid",7),this.ifxFileUploadStart=n(this,"ifxFileUploadStart",7),this.ifxFileUploadComplete=n(this,"ifxFileUploadComplete",7),this.ifxFileUploadAbort=n(this,"ifxFileUploadAbort",7),this.ifxFileUploadDrop=n(this,"ifxFileUploadDrop",7),this.ifxFileUploadClick=n(this,"ifxFileUploadClick",7),this.dragAndDrop=!1,this.maxFileSizeMB=7,this.allowedFileTypes=["jpg","jpeg","png","pdf","mov","mp3","mp4"],this.labelBrowseFiles="Browse files",this.labelDragAndDrop="Drag & Drop or browse files to upload",this.labelFileTooLarge="Upload failed. Max file size: {{size}}MB.",this.labelUnsupportedFileType="Unsupported file type.",this.labelUploaded="Successfully uploaded",this.labelSupportedFormatsTemplate="Supported file formats: {{types}}. Max file size: {{size}}MB.",this.isDragOver=!1,this.files=[],this.uploadTasks=[],this.rejectedSizeFiles=[],this.rejectedTypeFiles=[],this.fileInputEl=null,this.extensionToMimeMap={jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",pdf:"application/pdf",mov:"video/quicktime",mp3:"audio/mpeg",mp4:"video/mp4"}}getNormalizedFileTypes(){if(Array.isArray(this.allowedFileTypes))return this.allowedFileTypes;try{return JSON.parse(this.allowedFileTypes)}catch{return this.allowedFileTypes.split(",").map(s=>s.trim())}}handleFileChange(e){const s=e.target;s.files&&this.processFiles(s.files)}handleDrop(e){var s;if(e.preventDefault(),e.stopPropagation(),this.isDragOver=!1,!((s=e.dataTransfer)===null||s===void 0)&&s.files){const l=Array.from(e.dataTransfer.files),o=this.getNormalizedFileTypes().map(t=>this.extensionToMimeMap[t.toLowerCase()]).filter(Boolean),a=[],r=[];l.forEach(t=>{const p=o.includes(t.type),d=t.size<=this.maxFileSizeMB*1024*1024;p&&d?a.push(t):r.push(t)}),this.ifxFileUploadDrop.emit({droppedFiles:l,acceptedFiles:a,rejectedFiles:r}),this.processFiles(e.dataTransfer.files)}}handleDragOver(e){e.preventDefault(),this.isDragOver=!0}handleDragLeave(e){e.preventDefault(),this.isDragOver=!1}processFiles(e){const s=Array.from(e),l=this.getNormalizedFileTypes().map(t=>this.extensionToMimeMap[t.toLowerCase()]).filter(Boolean),o=[],a=[],r=[];s.forEach(t=>{const p=l.includes(t.type),d=t.size<=this.maxFileSizeMB*1024*1024;p&&d?o.push(t):(p||(r.push(t.name),this.ifxFileUploadInvalid.emit({file:t,reason:"invalid-type"})),d||(a.push(t.name),this.ifxFileUploadInvalid.emit({file:t,reason:"invalid-size"})),this.ifxFileUploadError.emit({file:t,errorType:p?"file-too-large":"invalid-type",message:"Invalid file rejected"}))}),this.rejectedSizeFiles=[...this.rejectedSizeFiles,...a],this.rejectedTypeFiles=[...this.rejectedTypeFiles,...r],o.forEach(t=>this.startUpload(t)),this.files=[...this.files,...o],o.length>0&&(this.ifxFileUploadAdd.emit({addedFiles:o,files:this.files}),this.ifxFileUploadChange.emit({files:this.files}))}startUpload(e){this.ifxFileUploadStart.emit({file:e});const s={file:e,progress:0,intervalId:null,completed:!1};if(this.uploadHandler)this.uploadHandler(e).then(()=>{s.progress=100,s.completed=!0,this.uploadTasks=[...this.uploadTasks],this.ifxFileUploadComplete.emit({file:e}),this.ifxFileUploadChange.emit({files:this.files})}).catch(()=>{console.error("Upload failed"),this.ifxFileUploadError.emit({file:e,errorType:"upload-failed",message:"Upload handler rejected file"})});else{const l=e.size,o=5e5;let a=0;s.intervalId=window.setInterval(()=>{a+=o/5;const r=Math.min(100,Math.round(a/l*100));s.progress=r,this.uploadTasks=[...this.uploadTasks],r>=100&&(clearInterval(s.intervalId),s.completed=!0,s.intervalId=null,this.uploadTasks=[...this.uploadTasks],this.ifxFileUploadComplete.emit({file:e}),this.ifxFileUploadChange.emit({files:this.files}))},200)}this.uploadTasks=[...this.uploadTasks,s]}cancelUpload(e){const s=this.uploadTasks.findIndex(l=>l.file.name===e.name);if(s!==-1){const l=this.uploadTasks[s];(l==null?void 0:l.intervalId)!==null&&clearInterval(l.intervalId),this.uploadTasks=this.uploadTasks.filter((o,a)=>a!==s)}this.files=this.files.filter(l=>l.name!==e.name),this.ifxFileUploadAbort.emit({file:e}),this.ifxFileUploadChange.emit({files:this.files}),this.fileInputEl&&(this.fileInputEl.value="")}removeFile(e){this.uploadTasks=this.uploadTasks.filter(s=>s.file.name!==e.name),this.files=this.files.filter(s=>s.name!==e.name),this.ifxFileUploadRemove.emit({removedFile:e,files:this.files}),this.ifxFileUploadChange.emit({files:this.files}),this.fileInputEl&&(this.fileInputEl.value="")}clearRejectedFile(e,s){s==="size"?this.rejectedSizeFiles=this.rejectedSizeFiles.filter(l=>l!==e):this.rejectedTypeFiles=this.rejectedTypeFiles.filter(l=>l!==e),this.fileInputEl&&(this.fileInputEl.value="")}splitFileNameParts(e){const s=e.name,l=s.lastIndexOf(".");return l===-1?{base:s,ext:""}:{base:s.substring(0,l),ext:s.substring(l)}}getFileIcon(e){var s;switch((s=e.name.split(".").pop())===null||s===void 0?void 0:s.toLowerCase()){case"pdf":return"file-pdf-16";case"jpg":case"jpeg":return"file-jpg-16";case"png":return"file-png-16";case"mov":return"file-mov-16";case"mp3":return"file-mp3-16";case"mp4":return"file-mp4-16";default:return"file"}}getFormattedSize(e){const s=e.size/1024;return s>1024?`${(s/1024).toFixed(1)} MB`:`${s.toFixed(0)} KB`}getAcceptAttribute(){return this.getNormalizedFileTypes().map(e=>"."+e.toLowerCase()).join(",")}getSupportedFileText(){return this.labelSupportedFormatsTemplate.replace("{{types}}",this.getNormalizedFileTypes().map(e=>e.toUpperCase()).join(", ")).replace("{{size}}",this.maxFileSizeMB.toString())}getFormattedFileTooLargeText(){return this.labelFileTooLarge.replace("{{size}}",this.maxFileSizeMB.toString())}componentDidLoad(){this.hostElement.hasAttribute("show-demo-states")&&(this.showDemoStates=!0),this.showDemoStates&&this.injectDemoState()}async injectDemoState(){const e=new File(["demo"],"Image.jpg",{type:"image/jpeg"}),s=new File(["demo"],"File.pdf",{type:"application/pdf"}),l=new File(["demo"],"Video.mp4",{type:"video/mp4"}),o=new File(["demo"],"Script.exe",{type:"application/x-msdownload"});this.files=[s,e],this.uploadTasks=[{file:s,progress:100,intervalId:null,completed:!0},{file:e,progress:35,intervalId:null,completed:!1}],this.rejectedSizeFiles=[l.name],this.rejectedTypeFiles=[o.name]}render(){return i("div",{key:"9ebbf4de0d20c25b5c0167dd48b6ab4d538ca736",class:"file-upload-wrapper"},this.dragAndDrop?this.renderDragAndDropArea():this.renderUploadArea(),i("ul",{key:"ad545c35ebfaf6016b4cebe0d11d0f4798816718",class:"file-list"},this.rejectedSizeFiles.map(e=>i("li",{class:"file-item upload-failed"},i("div",{class:"file-icon"},i("ifx-icon",{icon:"file-16"})),i("div",{class:"file-info"},i("div",{class:"file-top-row"},i("span",{class:"file-name-wrapper"},i("span",{class:"file-name-base"},this.splitFileNameParts({name:e}).base),i("span",{class:"file-name-ext"},this.splitFileNameParts({name:e}).ext)),i("div",{class:"file-actions"},i("ifx-icon-button",{shape:"square",variant:"tertiary",icon:"delete-forever-16",size:"s","aria-label":"Remove file",onClick:()=>this.clearRejectedFile(e,"size")}))),i("div",{class:"file-middle-row"},i("span",{class:"file-status"},this.getFormattedFileTooLargeText()))))),this.rejectedTypeFiles.map(e=>i("li",{class:"file-item upload-failed"},i("div",{class:"file-icon"},i("ifx-icon",{icon:"file-16"})),i("div",{class:"file-info"},i("div",{class:"file-top-row"},i("span",{class:"file-name-wrapper"},i("span",{class:"file-name-base"},this.splitFileNameParts({name:e}).base),i("span",{class:"file-name-ext"},this.splitFileNameParts({name:e}).ext)),i("div",{class:"file-actions"},i("ifx-icon-button",{shape:"square",variant:"tertiary",icon:"delete-forever-16",size:"s","aria-label":"Remove file",onClick:()=>this.clearRejectedFile(e,"type")}))),i("div",{class:"file-middle-row"},i("span",{class:"file-status"},this.labelUnsupportedFileType))))),this.files.map(e=>{var s;const l=this.uploadTasks.find(d=>d.file.name===e.name),o=(s=l==null?void 0:l.progress)!==null&&s!==void 0?s:100,a=l&&!l.completed,r=a?"file-item uploading":"file-item upload-success",{base:t,ext:p}=this.splitFileNameParts(e);return i("li",{class:r},i("div",{class:"file-icon"},i("ifx-icon",{icon:this.getFileIcon(e)})),i("div",{class:"file-info"},i("div",{class:"file-top-row"},i("span",{class:"file-name-wrapper"},i("span",{class:"file-name-base"},t),i("span",{class:"file-name-ext"},p)),i("div",{class:"file-actions"},i("ifx-icon-button",{shape:"square",variant:"tertiary",icon:"cross-16",size:"s","aria-label":"Cancel upload",onClick:()=>this.cancelUpload(e),style:{display:a?"inline-flex":"none"}}),i("ifx-icon-button",{shape:"square",variant:"tertiary",icon:"delete-forever-16",size:"s","aria-label":"Remove file",onClick:()=>this.removeFile(e),style:{display:a?"none":"inline-flex"}}))),i("div",{class:"file-middle-row"},i("span",{class:"file-size"},this.getFormattedSize(e)),a&&i("span",{class:"file-uploading"}," – Uploading …"),i("span",{class:"file-status"},!a&&i("span",null,i("ifx-icon",{icon:"check-12"})," ",this.labelUploaded))),a&&i("div",{class:"file-progress-row"},i("ifx-progress-bar",{size:"s",value:o,"show-label":"true"}))))})))}renderUploadArea(){const e=s=>{this.fileInputEl=s};return i("div",{class:{"upload-button":!0}},i("label",null,i("ifx-button",{variant:"secondary"},i("ifx-icon",{icon:"upload-16"}),this.labelBrowseFiles),i("input",{ref:e,type:"file",accept:this.getAcceptAttribute(),multiple:!0,onChange:s=>this.handleFileChange(s),style:{display:"none"}})),i("p",{class:"file-upload-info"},this.getSupportedFileText()))}renderDragAndDropArea(){const e=l=>{this.fileInputEl=l},s=()=>{this.fileInputEl&&this.fileInputEl.click()};return i("div",{class:{"upload-dropzone":!0,"drag-over":this.isDragOver},onClick:s,onDragOver:l=>this.handleDragOver(l),onDragLeave:l=>this.handleDragLeave(l),onDrop:l=>this.handleDrop(l)},i("ifx-icon",{icon:"upload-24",class:"custom-icon"}),i("p",null,this.labelDragAndDrop),i("p",{class:"file-upload-info"},this.getSupportedFileText()),i("div",{style:{height:"0px",overflow:"hidden"}},i("input",{ref:e,type:"file",accept:this.getAcceptAttribute(),multiple:!0,onChange:l=>this.handleFileChange(l)})))}get hostElement(){return c(this)}};u.style=m;export{u as ifx_file_upload};
