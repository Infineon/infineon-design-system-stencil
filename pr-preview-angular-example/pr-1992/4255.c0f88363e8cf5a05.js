"use strict";(self.webpackChunkmy_app=self.webpackChunkmy_app||[]).push([[4255],{4255:(c,s,i)=>{i.r(s),i.d(s,{ifx_set_filter:()=>h});var l=i(759);const h=(()=>{let a=class{constructor(t){(0,l.r)(this,t),this.ifxFilterSelect=(0,l.c)(this,"ifxFilterSelect",7),this.type="text",this.filterValues=[]}handleTextInputChange(t){this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:[t.target.value],type:this.type})}handleSingleSelectChange(t){this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:[t.detail.value],type:this.type})}handleMultiselectOptionChange(t){this.filterValues=t.detail.map(e=>({label:e.value,value:e.value})),this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:this.filterValues,type:this.type})}render(){let t=[];if("string"==typeof this.options)try{t=JSON.parse(this.options)}catch(e){console.error("Failed to parse options:",e),t=[]}else Array.isArray(this.options)&&(t=this.options);switch(this.type){case"text":return(0,l.h)("ifx-text-field",{error:!1,disabled:!1,placeholder:this.placeholder,onIfxInput:e=>this.handleTextInputChange(e)},this.filterLabel);case"single-select":return(0,l.h)("ifx-select",{placeholder:"true","search-enabled":"true","search-placeholder-value":"Search...",onIfxSelect:e=>this.handleSingleSelectChange(e),"ifx-placeholder-value":this.placeholder,"ifx-label":this.filterLabel,"ifx-options":this.options});case"multi-select":return(0,l.h)("ifx-multiselect",{label:this.filterLabel,placeholder:this.placeholder,onIfxSelect:e=>this.handleMultiselectOptionChange(e)},t.map(e=>(0,l.h)("ifx-multiselect-option",{value:e.value||e},e.label||e)));default:return null}}};return a.style="",a})()}}]);