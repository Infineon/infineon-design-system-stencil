{"version":3,"file":"static/js/249.d82977fb.chunk.js","mappings":"+LAIMA,EAAQ,WACZ,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,UAAW,EAChBD,KAAKE,SAAU,EACfF,KAAKG,OAAQ,EACbH,KAAKI,SAAU,CACjB,CAsBqC,OAtBpCC,EAAAA,EAAAA,GAAAT,EAAA,EAAAU,IAAA,iBAAAC,MACD,WACOP,KAAKC,UAAaD,KAAKG,QAC1BH,KAAKE,SAAWF,KAAKE,QAEzB,GAAC,CAAAI,IAAA,oBAAAC,MACD,WACeP,KAAKQ,GAAGC,WAEnBC,QAAQC,IAAI,YACZX,KAAKI,SAAU,GAGfJ,KAAKI,SAAU,CACnB,GAAC,CAAAE,IAAA,SAAAC,MACD,WACE,OAAQK,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,wBAAyBD,EAAAA,EAAAA,GAAE,MAAO,CAAEE,SAAU,IAAKC,QAASf,KAAKgB,eAAeC,KAAKjB,MAAOa,MAAO,+BAAFK,OACrHlB,KAAKE,QAAU,UAAY,GAAE,eAAAgB,OAC7BlB,KAAKC,SAAW,WAAa,GAAE,cAAAiB,OAC/BlB,KAAKG,MAAQ,QAAU,KAAQH,KAAKE,UAAWU,EAAAA,EAAAA,GAAE,WAAY,CAAEO,KAAM,cAAgBnB,KAAKI,UAC9FQ,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,SAAFK,OAAWlB,KAAKG,MAAQ,QAAU,GAAE,KAAAe,OAAIlB,KAAKC,SAAW,WAAa,GAAE,KAAKc,QAASf,KAAKgB,eAAeC,KAAKjB,QAASY,EAAAA,EAAAA,GAAE,OAAQ,OACrJ,GAAC,CAAAN,IAAA,KAAAc,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAWrB,KAAO,KAACJ,CAAA,CA7BzB,GA+BdA,EAAS0B,MAjCW,ouD","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/ifx-checkbox.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-940739b3.js';\n\nconst checkboxCss = \":host{display:inline-flex;vertical-align:top}.checkbox__container{box-sizing:border-box;display:inline-flex;flex-direction:row;align-items:center;padding:0px;gap:8px}.checkbox__container .checkbox__wrapper{display:flex;justify-content:center;align-items:center;width:20px;height:20px;background-color:#ffffff;border:1px solid #575352;border-radius:1px;flex:none;order:0;flex-grow:0}.checkbox__container .checkbox__wrapper.error{border-color:#CD002F}.checkbox__container .checkbox__wrapper:focus-visible{border:1px solid #575352;outline:2px solid #0A8276;outline-offset:2px}.checkbox__container .checkbox__wrapper:hover{background-color:#EEEDED;border:1px solid #575352;border-radius:1px;flex:none;order:0;flex-grow:0}.checkbox__container .checkbox__wrapper.disabled{background-color:#BFBBBB;border-color:#BFBBBB;border-radius:1px;flex:none;order:0;flex-grow:0}.checkbox__container .checkbox__wrapper.checked{background-color:#0A8276;border-radius:1px;border-color:transparent;flex:none;order:0;flex-grow:0;color:#ffffff}.checkbox__container .checkbox__wrapper.checked:focus-visible{border:1px solid transparent;outline:2px solid #0A8276;outline-offset:2px}.checkbox__container .checkbox__wrapper.checked:hover{background-color:#08665C;border-radius:1px;flex:none;order:0;flex-grow:0}.checkbox__container .checkbox__wrapper.checked.disabled{background:#BFBBBB;border-radius:1px;flex:none;order:0;flex-grow:0}.checkbox__container .label{width:25px;height:20px;font-style:normal;font-weight:400;font-size:14px;line-height:20px;color:#1d1d1d;flex:none;order:1;flex-grow:0}.checkbox__container .label.disabled{color:#BFBBBB}.checkbox__container .label.error{color:#CD002F}.checkbox__container .checkbox__wrapper:hover,.checkbox__container .label:hover{cursor:pointer}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.disabled = false;\n    this.checked = false;\n    this.error = false;\n    this.hasSlot = true;\n  }\n  handleCheckbox() {\n    if (!this.disabled && !this.error) {\n      this.checked = !this.checked;\n    }\n  }\n  componentWillLoad() {\n    const slot = this.el.innerHTML;\n    if (slot) {\n      console.log('has slot');\n      this.hasSlot = true;\n    }\n    else\n      this.hasSlot = false;\n  }\n  render() {\n    return (h(\"div\", { class: \"checkbox__container\" }, h(\"div\", { tabindex: \"0\", onClick: this.handleCheckbox.bind(this), class: `checkbox__wrapper \n        ${this.checked ? 'checked' : \"\"} \n        ${this.disabled ? 'disabled' : \"\"}\n        ${this.error ? 'error' : \"\"}` }, this.checked && h(\"ifx-icon\", { icon: \"check-12\" })), this.hasSlot &&\n      h(\"div\", { class: `label ${this.error ? 'error' : \"\"} ${this.disabled ? 'disabled' : \"\"} `, onClick: this.handleCheckbox.bind(this) }, h(\"slot\", null))));\n  }\n  get el() { return getElement(this); }\n};\nCheckbox.style = checkboxCss;\n\nexport { Checkbox as ifx_checkbox };\n"],"names":["Checkbox","hostRef","_classCallCheck","registerInstance","this","disabled","checked","error","hasSlot","_createClass","key","value","el","innerHTML","console","log","h","class","tabindex","onClick","handleCheckbox","bind","concat","icon","get","getElement","style"],"sourceRoot":""}