{"version":3,"file":"static/js/880.d0bfc920.chunk.js","mappings":"8MAKMA,EAAY,WAChB,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,WAAa,GAClBD,KAAKE,UAAW,EAChBF,KAAKG,iBAAcC,CACrB,CAoBqC,OApBpCC,EAAAA,EAAAA,GAAAT,EAAA,EAAAU,IAAA,gBAAAC,MACD,SAAcC,GAAO,IAAAC,EAAA,KACnBT,KAAKE,UAAW,EAChBF,KAAKG,YAAcK,EACnBE,YAAW,WACTD,EAAKP,UAAW,CAClB,GAAG,IACL,GAAC,CAAAI,IAAA,eAAAC,MACD,SAAaI,EAAMH,GACjBI,UAAUC,UAAUC,UAAUH,GAC9BX,KAAKe,cAAcP,EACrB,GAAC,CAAAF,IAAA,oBAAAC,MACD,WACE,IAAK,IAAII,KAAQK,EAAAA,EACfhB,KAAKC,WAAWgB,KAAKN,EAEzB,GAAC,CAAAL,IAAA,SAAAC,MACD,WAAS,IAAAW,EAAA,KACP,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,sBAAwBpB,KAAKC,WAAWoB,KAAI,SAACV,EAAMH,GAAK,OAAKW,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,2BAAFE,OAA6BJ,EAAKhB,UAAYgB,EAAKf,cAAgBK,EAAQ,SAAW,IAAMe,QAAS,kBAAML,EAAKM,aAAab,EAAMH,EAAM,IAAIW,EAAAA,EAAAA,GAAE,WAAY,CAAER,KAAMA,IAAQ,IACpR,GAAC,CAAAL,IAAA,KAAAmB,IACD,WAAW,OAAOC,EAAAA,EAAAA,GAAW1B,KAAO,KAACJ,CAAA,CA1BrB,GA4BlBA,EAAa+B,MA9BW,ymB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/ifx-icons-preview.entry.js"],"sourcesContent":["import { r as registerInstance, h, g as getElement } from './index-940739b3.js';\nimport { i as icons } from './icons-4163e6b2.js';\n\nconst iconsPreviewCss = \".preview__container{box-sizing:border-box;display:flex;align-items:center;padding:2px;flex-wrap:wrap;gap:4px}.preview__container .preview__container-item{display:flex;justify-content:center;align-items:center;border:1px solid #f1f1f1;padding:2px;width:50px;height:50px;position:relative}.preview__container .preview__container-item:active{border-color:#378375}.preview__container .preview__container-item:hover{cursor:pointer}.preview__container .preview__container-item.copied::after{z-index:10000;content:\\\"copied!\\\";position:absolute;top:0;left:50px;background-color:#000;color:white;padding:3px;border-radius:4px}\";\n\nconst IconsPreview = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.iconsArray = [];\n    this.isCopied = false;\n    this.copiedIndex = undefined;\n  }\n  handleToolTip(index) {\n    this.isCopied = true;\n    this.copiedIndex = index;\n    setTimeout(() => {\n      this.isCopied = false;\n    }, 2000);\n  }\n  copyIconText(icon, index) {\n    navigator.clipboard.writeText(icon);\n    this.handleToolTip(index);\n  }\n  componentWillLoad() {\n    for (let icon in icons) {\n      this.iconsArray.push(icon);\n    }\n  }\n  render() {\n    return (h(\"div\", { class: \"preview__container\" }, this.iconsArray.map((icon, index) => h(\"div\", { class: `preview__container-item ${this.isCopied && this.copiedIndex === index ? 'copied' : \"\"}`, onClick: () => this.copyIconText(icon, index) }, h(\"ifx-icon\", { icon: icon })))));\n  }\n  get el() { return getElement(this); }\n};\nIconsPreview.style = iconsPreviewCss;\n\nexport { IconsPreview as ifx_icons_preview };\n"],"names":["IconsPreview","hostRef","_classCallCheck","registerInstance","this","iconsArray","isCopied","copiedIndex","undefined","_createClass","key","value","index","_this","setTimeout","icon","navigator","clipboard","writeText","handleToolTip","icons","push","_this2","h","class","map","concat","onClick","copyIconText","get","getElement","style"],"sourceRoot":""}