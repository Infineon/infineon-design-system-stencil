{"version":3,"file":"static/js/9282.3fe816f1.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/pagination/pagination.scss?tag=ifx-pagination&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/pagination/pagination.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: inline-flex;\n}\n\n.container {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n  font-family: var(--ifx-font-family);\n\n\n  & .items__per-page-wrapper {\n    display: flex;\n    align-items: center;\n    gap: 16px;\n\n    & .items__per-page-label {\n      color: #1D1D1D;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 20px;\n    }\n\n    & .items__per-page-field {\n      display: flex;\n      flex-direction: column;\n      align-items: flex-start;\n\n      & ifx-select {\n        width: 92px;\n      }\n    }\n  }\n\n  & .items__total-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 12px;\n\n    & .items__total-button {\n      display: flex;\n      width: 40px;\n      height: 40px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 100px;\n      border: 1px solid #BFBBBB;\n      background: #FFF;\n    }\n\n    & .page__numbers-wrapper {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 12px;\n\n      & .page__number-item {\n        display: flex;\n        padding: 6px;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        gap: 10px;\n        border-radius: 100px;\n\n        &.active {\n          background-color: #0A8276;\n\n          & span {\n            color: #fff;\n          }\n        }\n\n        &:hover {\n          cursor: pointer;\n        }\n\n        &:hover:not(.active) {\n          background-color: #ddd;\n\n        }\n\n        &:active:not(.active) {\n          background-color: #575352;\n        }\n\n        & span {\n          display: flex;\n          width: 16px;\n          height: 16px;\n          flex-direction: column;\n          justify-content: center;\n          color: #1D1D1D;\n          text-align: center;\n          font-size: 13px;\n          font-style: normal;\n          font-weight: 400;\n          line-height: 20px;\n        }\n      }\n    }\n  }\n}\n\n\n.pagination {\n  display: flex;\n\n  & ifx-icon-button:first-of-type {\n    margin-right: 12px;\n  }\n\n  & ifx-icon-button:last-of-type {\n    margin-left: 12px;\n  }\n}\n\na {\n  padding: 6px;\n  border-radius: 100px;\n}\n\nol {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n}\n\nli {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 100px;\n\n  &:hover:not(.active) {\n    & a {\n      background-color: #EEEDED;\n    }\n  }\n\n  &:active:not(.active) {\n    & a {\n      background-color: #575352;\n      color: #fff;\n    }\n  }\n\n  &.active {\n    background-color: #0A8276;\n\n    & a {\n      color: #fff;\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  & a {\n    text-decoration: none;\n    display: flex;\n    width: 16px;\n    height: 16px;\n    flex-direction: column;\n    justify-content: center;\n    color: #1D1D1D;\n    text-align: center;\n    font-size: 13px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 20px;\n  }\n}\n\n.prev,\n.next {\n  &.disabled {\n    cursor: default;\n\n    &:hover {\n      cursor: default;\n      text-decoration: none;\n    }\n  }\n}\n\n.prev {\n  margin-right: 2.5px;\n}\n\n.next {\n  margin-left: 2.5px;\n}\n\n\n@mixin ellipsis($before: true) {\n  content: \"\\2026\";\n  font-size: 13px;\n  display: inline-block;\n\n  @if($before) {\n    margin-right: 6px;\n  }\n\n  @else {\n    margin-left: 6px;\n  }\n}\n\n\n// @media(max-width:460px) {\n//   li {\n\n//     &:first-child,\n//     &.active,\n//     &.active-sibling:nth-last-child(2), // Show second to last child if the last one is active\n//     &:last-child {\n//       //display: inline-block !important;\n//       display: inline-flex !important;\n//       flex-direction: row;\n//     }\n\n//     $how-many-on-ends: 3; // 1,2,3,...,10 || 1,...,8,9,10\n//     // There are >= 5 pages\n//     &:first-child:nth-last-child(n+6) {\n\n//       &~li {\n//         // Start out with all siblings hidden\n//         display: none;\n\n//         // Show the last children in the list by default\n//         &:nth-last-child(-n+#{$how-many-on-ends}) {\n//           //display: inline-block;\n//           display: inline-flex;\n//           flex-direction: row;\n\n//         }\n\n//         // The child at the beginning of the last group shows ellipsis for the group\n//         &:nth-last-child(#{$how-many-on-ends}) {\n//           &:before {\n//             @include ellipsis(true);\n//           }\n//         }\n\n//         // The very beginning elements do not need to show ellipsis\n//         // The very end elements do not need to show ellipsis\n//       }\n\n\n//       &.active,\n//        &~li.active {\n\n//          // Show ellipsis before and after the active element\n//          &:before {\n//            @include ellipsis(true);\n//          }\n//          &:after {\n//            @include ellipsis(false);\n//          }\n\n\n//          // If the active element is in the first or last group, don't show ellipsis (siblings will take care of it)\n//          &:nth-child(-n+#{$how-many-on-ends - 1}),\n//          &:nth-last-child(-n+#{$how-many-on-ends - 1}) {\n//            &:before, &:after {\n//              display: none;\n//            }\n//          }\n\n//          // Hide the last group if \"active\" comes before them\n//          &~li:nth-last-child(-n+#{$how-many-on-ends}) {\n//            display: none;\n//          }\n\n//          // Show the first group together if \"active\" comes before them\n//          &~li:nth-child(-n+#{$how-many-on-ends}) {\n//            //display: inline-block;\n//            display: inline-flex;\n//            flex-direction: row;\n//          }\n\n//          // If \"active\" is before the last member in the group, don't show ellipsis\n//          &~li:nth-child(-n+#{$how-many-on-ends - 1}) {\n//             &:after {\n//               display: none;\n//             }\n//          }\n\n\n//         // The child at the end of the first group shows ellipsis for the group\n//         &~li:nth-child(#{$how-many-on-ends}) {\n//           &:after {\n//             @include ellipsis(false);\n//           }\n//         }\n//       }\n//     }\n//   }\n// }\n\n@media (min-width: 400px) {\n  li {\n\n    &:first-child,\n    &.active-sibling,\n    &.active,\n    &.active+li,\n    &:last-child {\n      //display: inline-block!important;\n      display: inline-flex !important;\n      flex-direction: row;\n    }\n\n    // There are >= 7 pages\n    &:first-child:nth-last-child(n+8) {\n      $how-many-on-ends: 5; // 1,2,3,4,5,...,10 || 1,...6,7,8,9,10\n\n      &~li {\n        // Start out with all siblings hidden\n        display: none;\n\n        // Show ellipsis before the previous one\n        &.active-sibling:before {\n          @include ellipsis(true);\n        }\n\n        // Show ellipsis after the next one\n        &.active+li:after {\n          @include ellipsis(false);\n        }\n\n        // Show the last children in the list by default\n        &:nth-last-child(-n+#{$how-many-on-ends}) {\n          //display: inline-block;\n          display: inline-flex;\n          flex-direction: row;\n        }\n\n        // The child at the beginning of the last group shows ellipsis for the group\n        &:nth-last-child(#{$how-many-on-ends}) {\n          &:before {\n            @include ellipsis(true);\n          }\n        }\n\n        // The very beginning elements do not need to show ellipsis\n        &:nth-child(-n+#{$how-many-on-ends - 3}),\n        // The very end elements do not need to show ellipsis\n        &:nth-last-child(-n+#{$how-many-on-ends - 3}),\n        // Even if it's a sibling to \"active\"\n        &.active-sibling:nth-last-child(-n+#{$how-many-on-ends - 1}) {\n\n          &:before,\n          &:after {\n            display: none !important;\n          }\n        }\n      }\n\n      &.active,\n      &~li.active {\n\n        // Hide the last group if \"active\" comes before them\n        &~li:nth-last-child(-n+#{$how-many-on-ends}) {\n          display: none;\n\n          // If there is overlap, the element will show, but hide it's ellipsis\n          &:before {\n            display: none;\n          }\n        }\n\n        // Show the first group together if \"active\" comes before them\n        &~li:nth-child(-n+#{$how-many-on-ends}) {\n          //display: inline-block;\n          display: inline-flex !important;\n          flex-direction: row;\n        }\n\n        // If \"active\" is before the last member in the group, don't show ellipsis\n        &~li:nth-child(-n+#{$how-many-on-ends - 1}) {\n          &:after {\n            display: none;\n          }\n        }\n\n\n        // The child at the end of the first group shows ellipsis for the group\n        &~li:nth-child(#{$how-many-on-ends}) {\n          &:after {\n            @include ellipsis(false);\n          }\n        }\n\n        // \"active\" should never show ellipsis\n        &:before,\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n}","import { Component, h, Element, Event, EventEmitter, Prop, State, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-pagination',\n  styleUrl: 'pagination.scss',\n  shadow: true\n})\nexport class Pagination {\n  @Element() el;\n  @Event() ifxPageChange: EventEmitter;\n  @Event() ifxNextPage: EventEmitter;\n  @Event() ifxPrevPage: EventEmitter;\n  @Prop() currentPage: number = 0;\n  @State() internalPage: number = 1;\n  @State() itemsPerPage: number = 10;\n  @State() numberOfPages: number[] = [];\n  @Prop() total: number = 1;\n\n  private CLASS_DISABLED = \"disabled\"\n  private CLASS_ACTIVE = \"active\"\n  private CLASS_SIBLING_ACTIVE = \"active-sibling\"\n  private DATA_KEY = \"pagination\";\n\n  @Listen('ifxSelect')\n  setItemsPerPage(e) {\n    this.itemsPerPage = parseInt(e.detail.label)\n  }\n\n  componentDidLoad() {\n    this.calculateVisiblePageIndices()\n    var paginationElement = this.el.shadowRoot.querySelector(\".pagination\");\n    let leftArrow = paginationElement.querySelector('.prev')\n    this.navigateSinglePage(leftArrow, true)\n  }\n\n  calculateNumberOfPages() {\n    if (isNaN(this.currentPage)) {\n      this.currentPage = 1;\n    }\n    const total = this.total <= this.itemsPerPage ? this.itemsPerPage : this.total;\n    const itemsPerPage = this.itemsPerPage;\n    const totalPageNumber = Math.ceil(total / itemsPerPage);\n\n    if (this.currentPage <= 0) {\n      this.internalPage = 1;\n    } else if (this.currentPage > totalPageNumber) {\n      this.internalPage = totalPageNumber;\n    } else this.internalPage = this.currentPage;\n\n    this.numberOfPages = Array.from({ length: totalPageNumber }, (_, index) => index + 1);\n  }\n\n  componentWillLoad() {\n    this.calculateNumberOfPages()\n  }\n\n  componentDidUpdate() {\n    var paginationElement = this.el.shadowRoot.querySelector(\".pagination\");\n    var listItems = paginationElement.querySelectorAll(\"li\");\n    this.addEventListenersToPageItems(listItems, paginationElement)\n\n    if (paginationElement.dataset[this.DATA_KEY] < this.numberOfPages) {\n      paginationElement.dataset[this.DATA_KEY] = paginationElement.dataset[this.DATA_KEY];\n    } else paginationElement.dataset[this.DATA_KEY] = 0;\n\n    this.changePage(paginationElement, false)\n  }\n\n  componentWillUpdate() {\n    this.calculateNumberOfPages()\n  }\n\n  handleEventEmission(currActive) {\n    let currentPage = currActive + 1;\n    let totalPages = this.numberOfPages.length;\n    let prevPage = currActive === 0 ? null : currActive;\n    let nextPage = currActive + 2 > totalPages ? null : currActive + 2;\n    let itemsPerPage = this.itemsPerPage\n    this.ifxPageChange.emit({ currentPage, totalPages, prevPage, nextPage, itemsPerPage })\n  }\n\n  addEventListenersToPageItems(listItems, paginationContainer) {\n    listItems.forEach((item) => {\n      item.addEventListener(\"click\", (e) => {\n        var parent = paginationContainer;\n        let listItems = parent.querySelectorAll(\"li\");\n        parent.dataset[this.DATA_KEY] = Array.from(listItems).indexOf(e.currentTarget)\n        this.changePage(parent, false)\n      });\n    });\n  }\n\n  initPagination(paginationContainer) {\n    var listItems = paginationContainer.querySelectorAll(\"li\");\n\n    paginationContainer.dataset[this.DATA_KEY] = Array.from(listItems).indexOf(paginationContainer.querySelector(\".active\"));\n\n    paginationContainer.querySelector(\".prev\").addEventListener(\"click\", (e) => this.navigateSinglePage(e, false));\n    paginationContainer.querySelector(\".next\").addEventListener(\"click\", (e) => this.navigateSinglePage(e, false));\n\n    this.addEventListenersToPageItems(listItems, paginationContainer)\n  }\n\n  navigateSinglePage(e, initialValue) {\n    let el = e;\n    if (typeof e.target === 'object') {\n      el = e.target\n    }\n\n    if (!el.classList.contains(this.CLASS_DISABLED)) {\n      var parent = el.closest(\".pagination\");\n      var currActive = parseInt(parent.dataset[this.DATA_KEY], 10);\n      currActive += 1 * (el.classList.contains(\"prev\") ? -1 : 1);\n\n      if (currActive === -1) {\n        currActive = 0;\n      }\n\n      parent.dataset[this.DATA_KEY] = currActive;\n      this.changePage(parent, initialValue)\n    }\n  }\n\n  changePage(pagination, initialValue) {\n    const paginationContainer = pagination;\n    var listItems = paginationContainer.querySelectorAll(\"li\");\n    var currActive = parseInt(paginationContainer.dataset[this.DATA_KEY], 10);\n\n    listItems.forEach((item) => {\n      item.classList.remove(this.CLASS_ACTIVE);\n      item.classList.remove(this.CLASS_SIBLING_ACTIVE);\n    });\n\n    if (initialValue && this.internalPage > 1) {\n      currActive = Math.floor(this.internalPage - 1);\n      paginationContainer.dataset[this.DATA_KEY] = currActive;\n    }\n\n    this.handleEventEmission(currActive)\n\n    listItems[currActive].classList.add(this.CLASS_ACTIVE);\n\n    if (currActive === 0) {\n      paginationContainer.querySelector(\".prev\").classList.add(this.CLASS_DISABLED);\n      paginationContainer.querySelector(\".prev\").disabled = true;\n\n    } else {\n      listItems[currActive - 1].classList.add(this.CLASS_SIBLING_ACTIVE);\n      paginationContainer.querySelector(\".prev\").classList.remove(this.CLASS_DISABLED);\n      paginationContainer.querySelector(\".prev\").disabled = false;\n    }\n\n    if (currActive === (listItems.length - 1)) {\n      paginationContainer.querySelector(\".next\").classList.add(this.CLASS_DISABLED);\n      paginationContainer.querySelector(\".next\").disabled = true;\n\n    } else {\n      paginationContainer.querySelector(\".next\").classList.remove(this.CLASS_DISABLED);\n      paginationContainer.querySelector(\".next\").disabled = false;\n    }\n  }\n\n  calculateVisiblePageIndices() {\n    var paginationElement = this.el.shadowRoot.querySelector(\".pagination\");\n    this.initPagination(paginationElement)\n  }\n\n  render() {\n    return (\n      <div aria-label='a pagination' aria-value={this.currentPage} class=\"container\">\n        <div class='items__per-page-wrapper'>\n          <div class='items__per-page-label'>Results per Page</div>\n          <div class='items__per-page-field'>\n            <ifx-select\n              type='single'\n              value='undefined'\n              ifx-size='s'\n              placeholder='false'\n              search-enabled='false'\n              search-placeholder-value='Search...'\n              ifx-disabled='false'\n              ifx-error='false'\n              ifx-error-message='Error'\n              ifx-label=''\n              ifx-placeholder-value='Placeholder'\n              ifx-options='[{\"value\":\"ten\",\"label\":\"10\",\"selected\":true}, {\"value\":\"Twenty\",\"label\":\"20\",\"selected\":false}, {\"value\":\"Thirty\",\"label\":\"30\",\"selected\":false}]' >\n            </ifx-select>\n          </div>\n        </div>\n        <div class='items__total-wrapper'>\n          <div class='page__numbers-wrapper'>\n            <div class=\"pagination\">\n              <ifx-icon-button variant='secondary' class=\"prev\" color='primary' icon='arrow-left-24'></ifx-icon-button>\n              <ol>\n                {this.numberOfPages.map((item) =>\n                  <li class={`${this.internalPage === item ? 'active' : \"\"}`}><a href={undefined}>{item}</a></li>)}\n              </ol>\n              <ifx-icon-button class=\"next\" variant='secondary' color='primary' icon='arrow-right-24'></ifx-icon-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"],"names":["Pagination","CLASS_DISABLED","CLASS_ACTIVE","CLASS_SIBLING_ACTIVE","DATA_KEY","setItemsPerPage","e","this","itemsPerPage","parseInt","detail","label","componentDidLoad","calculateVisiblePageIndices","leftArrow","el","shadowRoot","querySelector","navigateSinglePage","calculateNumberOfPages","isNaN","currentPage","total","totalPageNumber","Math","ceil","internalPage","numberOfPages","Array","from","length","_","index","componentWillLoad","componentDidUpdate","paginationElement","listItems","querySelectorAll","addEventListenersToPageItems","dataset","changePage","componentWillUpdate","handleEventEmission","currActive","totalPages","prevPage","nextPage","ifxPageChange","emit","paginationContainer","forEach","item","addEventListener","parent","indexOf","currentTarget","initPagination","initialValue","target","classList","contains","closest","pagination","remove","floor","add","disabled","render","h","key","class","type","value","placeholder","variant","color","icon","map","concat","href","undefined"],"sourceRoot":""}