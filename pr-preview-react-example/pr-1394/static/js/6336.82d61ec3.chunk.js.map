{"version":3,"file":"static/js/6336.82d61ec3.chunk.js","mappings":"kLAAA,MCOaA,EAAmB,M,uJAGL,O,CAIzBC,gBAAAA,GACE,MACMC,EADYC,KAAKC,GAAGC,WAAWC,cAAc,oCACrBA,cAAc,sBAC5CH,KAAKI,0BAA0BC,KAAKN,E,CAGtCO,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,KAAAC,IAAA,2CAAGC,KAAMT,KAAKU,IAAKC,OAAQX,KAAKW,OAAQC,MAAM,oCAC5CL,EAAAA,EAAAA,GAAA,YAAAC,IAAA,2CAAUK,KAAMb,KAAKa,QACrBN,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CAAMI,MAAM,kBACVL,EAAAA,EAAAA,GAAA,QAAAC,IAAA,+CAEHD,EAAAA,EAAAA,GAAA,QAAAC,IAAA,2CAAMI,MAAM,sBACXL,EAAAA,EAAAA,GAAA,YAAAC,IAAA,2CAAUK,KAAK,qB,wCD5BQ,owB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item-label.scss?tag=ifx-breadcrumb-item-label&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item-label.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.breadcrumb-item-label-container {\n  display: flex;\n  align-items: center;\n  gap: tokens.$ifxSpace100;\n  text-decoration: none;\n  color: tokens.$ifxColorBaseBlack;\n\n  &.margin {\n    margin-left: 16px;\n  }\n\n  & ifx-icon:empty {\n    display: none;\n  }\n\n  & .label-icon-wrapper {\n    display: inline-flex;\n  }\n\n  & .menu-icon-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: tokens.$ifxSize200;\n    height: tokens.$ifxSize200;\n\n    &.hide {\n      display: none;\n    }\n\n    & ifx-icon {\n      transition: .3s;\n    }\n\n    &.show {\n      & ifx-icon {\n        transition: .3s;\n        transform: rotate(180deg);\n      }\n    }\n  }\n}","import { Component, h, Prop, Element, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-breadcrumb-item-label',\n  styleUrl: 'breadcrumb-item-label.scss',\n  shadow: true,\n})\nexport class BreadcrumbItemLabel {\n  @Prop() icon: string;\n  @Prop() url: string;\n  @Prop() target: string = \"_self\"\n  @Element() el;\n  @Event() breadcrumbMenuIconWrapper: EventEmitter<CustomEvent>;\n\n  componentDidLoad() { \n    const container = this.el.shadowRoot.querySelector('.breadcrumb-item-label-container')\n    const menuWrapper = container.querySelector('.menu-icon-wrapper')\n    this.breadcrumbMenuIconWrapper.emit(menuWrapper)\n  }\n\n  render() {\n    return (\n      <a href={this.url} target={this.target} class=\"breadcrumb-item-label-container\">\n        <ifx-icon icon={this.icon}></ifx-icon>\n        <span class=\"label-wrapper\">\n          <slot />\n        </span>\n       <span class=\"menu-icon-wrapper\">\n        <ifx-icon icon=\"chevron-down-12\"></ifx-icon>\n       </span>\n      </a>\n    );\n  }\n}\n"],"names":["BreadcrumbItemLabel","componentDidLoad","menuWrapper","this","el","shadowRoot","querySelector","breadcrumbMenuIconWrapper","emit","render","h","key","href","url","target","class","icon"],"sourceRoot":""}