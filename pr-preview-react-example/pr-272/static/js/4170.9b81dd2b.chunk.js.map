{"version":3,"file":"static/js/4170.9b81dd2b.chunk.js","mappings":"4MAOaA,EAAM,W,qGACQ,E,UACF,G,oBACW,C,iDAIlC,WACEC,KAAKC,cAAgBD,KAAKE,K,GAC3B,CAAAC,IAAA,eAAAD,MAGD,SAAaE,EAAmBC,GAC1BD,IAAaC,IACfL,KAAKC,cAAgBG,E,GAExB,CAAAD,IAAA,SAAAD,MAED,WACEF,KAAKC,eAAiBD,KAAKC,cAC3BD,KAAKM,UAAUC,KAAKP,KAAKC,c,GAC1B,CAAAE,IAAA,gBAAAD,MAED,SAAcM,GAEM,UAAdA,EAAML,KAAiC,MAAdK,EAAML,KACjCH,KAAKS,Q,GAER,CAAAN,IAAA,SAAAD,MAED,WAAM,IAAAQ,EAAA,KAEJ,OADAC,QAAQC,IAAI,UAEVC,EAAAA,EAAAA,GAAA,OACEC,MAAK,aAAAC,OAAef,KAAKC,cAAgB,UAAY,IACrDe,KAAK,SACLC,SAAS,IAAG,eACEjB,KAAKC,cAAgB,OAAS,QAAO,aACvCD,KAAKkB,KACjBC,QAAS,kBAAMT,EAAKD,QAAQ,EAC5BW,UAAW,SAACZ,GAAK,OAAKE,EAAKW,cAAcb,EAAM,IAE/CK,EAAAA,EAAAA,GAAA,SAAOS,KAAK,WAAWC,QAAM,EAC3BL,KAAMlB,KAAKkB,KACXM,QAASxB,KAAKC,cACdC,MAAK,GAAAa,OAAKf,KAAKC,kBACjBY,EAAAA,EAAAA,GAAA,OAAKC,MAAK,UAAAC,OAAYf,KAAKC,cAAgB,UAAY,M,IAG5D,EAAAE,IAAA,WAAAsB,IAAA,W,qCAjDgB,G,QCPD,wkB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/switch/switch.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/switch/switch.scss?tag=ifx-switch&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, State, Watch, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  @Prop() value: boolean = false;\n  @Prop() name: string = '';\n  @State() internalValue: boolean = false;\n\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n  }\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n    }\n  }\n\n  toggle() {\n    this.internalValue = !this.internalValue;\n    this.ifxChange.emit(this.internalValue);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    // If the pressed key is either 'Enter' or 'Space' \n    if (event.key === 'Enter' || event.key === ' ') {\n      this.toggle();\n    }\n  }\n\n  render() {\n    console.log('yaaay')\n    return (\n      <div\n        class={`container ${this.internalValue ? 'checked' : ''}`}\n        role=\"switch\"\n        tabindex=\"0\"\n        aria-checked={this.internalValue ? 'true' : 'false'}\n        aria-label={this.name}\n        onClick={() => this.toggle()}\n        onKeyDown={(event) => this.handleKeyDown(event)}\n      >\n        <input type=\"checkbox\" hidden\n          name={this.name}\n          checked={this.internalValue}\n          value={`${this.internalValue}`} />\n        <div class={`switch ${this.internalValue ? 'checked' : ''}`} />\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n/* switch.css */\n:host {\n  display: inline-block;\n  user-select: none;\n}\n\n.container {\n  display: inline-block;\n  position: relative;\n  width: 50px;\n  height: 25px;\n  background-color: #ffffff;\n  border: 1px solid tokens.$color-gray-500;\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.switch {\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 21px;\n  height: 21px;\n  background-color: tokens.$color-gray-500;\n  border-radius: 50%;\n  transition: transform 0.3s ease;\n}\n\n.container:hover .toggle-switch {\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n}\n\n.switch.checked {\n  transform: translateX(25px);\n  background-color: tokens.$color-bg-white;\n}\n\n.container.checked {\n  background-color: tokens.$color-default-500;\n  /* Ocean color */\n  border-color: tokens.$color-default-500;\n}"],"names":["Switch","this","internalValue","value","key","newValue","oldValue","ifxChange","emit","event","toggle","_this","console","log","h","class","concat","role","tabindex","name","onClick","onKeyDown","handleKeyDown","type","hidden","checked","get"],"sourceRoot":""}