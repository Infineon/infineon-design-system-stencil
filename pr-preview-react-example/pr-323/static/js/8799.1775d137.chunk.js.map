{"version":3,"file":"static/js/8799.1775d137.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multi-select-input/multi-select-input.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multi-select-input/multi-select-input.scss?tag=ifx-multi-select-input&encapsulation=shadow"],"sourcesContent":["import { Component, h, Element, Listen, Prop, State } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-multi-select-input',\n  styleUrl: 'multi-select-input.scss',\n  shadow: true\n})\n\nexport class MultiSelectInput {\n\n  @Element() el;\n  @Prop() Placeholder: string = \"\"\n  @State() isEmpty: boolean = true;\n  @State() isOverflowing: boolean = false;\n\n  @Listen('mousedown', { target: 'document' })\n  handleOutsideClick(event: MouseEvent) {\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      this.closeDropdownMenu();\n    }\n  }\n\n  @Listen('closed')\n  handleButtonClose(el) {\n    const target = el.detail?.getAttribute('target');\n    const dropdownMenu = this.el.querySelectorAll('ifx-dropdown-item')\n    const selectedItems = this.el.shadowRoot.querySelector('.dropdown').querySelectorAll('ifx-multi-select-input-item')\n    for (let i = 0; i < dropdownMenu.length; i++) {\n      if (dropdownMenu[i].index === Number(target)) {\n        dropdownMenu[i].shadowRoot.querySelector('ifx-checkbox').checked = false;\n      }\n    }\n    el.detail?.remove()\n\n    if (el) {\n      if (el.check) {\n        for (let i = 0; i < selectedItems.length; i++) {\n          let selectedItemIndex = selectedItems[i].getAttribute('target');\n          if (Number(el.target.index) === Number(selectedItemIndex)) {\n            selectedItems[i].remove()\n          }\n        }\n      }\n    }\n\n    this.togglePlaceHolder()\n    this.toggleSlideButtons()\n  }\n\n  togglePlaceHolder() {\n    const wrapper = this.getMultiSelectFieldWrapper()\n    const wrapperItems = wrapper.querySelector('ifx-multi-select-input-item')\n    if (wrapperItems && this.isEmpty) {\n      this.isEmpty = false;\n    } else if (!wrapperItems && !this.isEmpty) {\n      this.isEmpty = true;\n    }\n  }\n\n  toggleSlideButtons() {\n    const multiSelectElement = this.getMultiSelectFieldWrapper()\n    const isOverFlowing = this.isOverflown(multiSelectElement)\n    if (isOverFlowing) {\n      this.isOverflowing = true;\n    } else if (this.isOverflowing) {\n      this.isOverflowing = false;\n    }\n  }\n\n  getDropdownMenu() {\n    let dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu');\n    if (dropdownMenuComponent) {\n      dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu').shadowRoot;\n      const dropdownMenuElement = dropdownMenuComponent.querySelector('.dropdown-menu');\n      return dropdownMenuElement\n    }\n  }\n\n  getDropdownWrapper() {\n    const dropdownWrapper = this.el.shadowRoot.querySelector('.dropdown');\n    return dropdownWrapper\n  }\n\n  getDropdownItems() {\n    const dropdownMenuItems = this.el.querySelectorAll('ifx-dropdown-item')\n    return dropdownMenuItems\n  }\n\n  handleClassList(el, type, className) {\n    el?.classList[type](className)\n  }\n\n  toggleDropdownMenu(e) {\n    const target = e.composedPath()[0].closest('span')\n\n    if (target) {\n      return\n    }\n\n    const multiSelectContainer = this.getMultiSelectFieldContainer()\n    const dropdownMenu = this.getDropdownMenu();\n    const dropdownWrapper = this.getDropdownWrapper()\n    this.handleClassList(dropdownMenu, 'toggle', 'show')\n    this.handleClassList(dropdownWrapper, 'toggle', 'show')\n    this.handleClassList(multiSelectContainer, 'toggle', 'show')\n  }\n\n  closeDropdownMenu() {\n    const dropdownMenu = this.getDropdownMenu()\n    const dropdownWrapper = this.getDropdownWrapper()\n    const multiSelectContainer = this.getMultiSelectFieldContainer()\n    this.handleClassList(dropdownMenu, 'remove', 'show')\n    this.handleClassList(dropdownWrapper, 'remove', 'show')\n    this.handleClassList(multiSelectContainer, 'remove', 'show')\n  }\n\n  removeActiveMenuItem() {\n    const dropdownMenuItems = this.getDropdownItems()\n    for (let i = 0; i < dropdownMenuItems.length; i++) {\n      this.handleClassList(dropdownMenuItems[i].shadowRoot.querySelector('a'), 'remove', 'active')\n    }\n  }\n\n  toggleCheckbox(target) {\n    target.querySelector('ifx-checkbox').checked = !target.querySelector('ifx-checkbox').checked;\n  }\n\n\n  getClickedElement(target) {\n    if (target instanceof SVGElement) {\n      return target.closest('.dropdown-item')\n    } else if (target.className.includes('dropdown-menu')\n      || target.className.includes('form-check-input')) {\n      return false\n    } else {\n      return target.closest('.dropdown-item');\n\n    }\n  }\n\n  addActiveMenuItem = (e) => {\n    const target = this.getClickedElement(e.composedPath()[0])\n    const isCheckable = e.target.checkable;\n    if (!target) return;\n    if (isCheckable) {\n      this.toggleCheckbox(target)\n      return;\n    }\n\n    this.removeActiveMenuItem()\n    this.handleClassList(target, 'add', 'active')\n    this.toggleDropdownMenu(e)\n  }\n\n  getMultiSelectFieldWrapper() {\n    let selectWrapper = this.el.shadowRoot.querySelector('.multiSelectInput__content');\n    return selectWrapper\n  }\n\n  getMultiSelectFieldContainer() {\n    let selectContainer = this.el.shadowRoot.querySelector('.multiSelectInput__container');\n    return selectContainer\n  }\n\n  getMultiSelectFieldIconWrapper() {\n    let selectContainer = this.el.shadowRoot.querySelector('.multiSelectInput__container').querySelector('.multiSelectInput__icon-wrapper');\n    return selectContainer\n  }\n\n  addSelectItemsToArray() {\n    var wrapper = this.getMultiSelectFieldWrapper()\n    var menuItems = wrapper.querySelectorAll('ifx-multi-select-input-item') as HTMLElement[];\n    var totalWidth = Array.from(menuItems).reduce(function (acc, item) {\n      return acc + item.offsetWidth;\n    }, 0);\n    return totalWidth\n  }\n\n  isOverflown(element) {\n    return element.scrollWidth > element.clientWidth;\n  }\n\n  addSelectSlider(direction) {\n    var wrapper = this.getMultiSelectFieldWrapper()\n    var menuItems = wrapper.querySelectorAll('ifx-multi-select-input-item') as HTMLElement[];\n    var totalWidth = Array.from(menuItems).reduce(function (acc, item) {\n      return acc + item.offsetWidth;\n    }, 0);\n    if (direction === 'left') {\n      wrapper.scrollLeft -= totalWidth;\n    } else if (direction === 'right') {\n      wrapper.scrollLeft += totalWidth;\n    }\n  }\n\n\n  async addItemValueToTextField(value) {\n    const multiSelectElement = this.getMultiSelectFieldWrapper()\n    const newItem = document.createElement('ifx-multi-select-input-item')\n    newItem.setAttribute('target', value.target?.index)\n    newItem.setAttribute('content', value.value)\n\n    multiSelectElement.append(newItem)\n\n    setTimeout(() => {\n      this.toggleSlideButtons();\n    }, 20);\n\n  }\n\n  addEventListeners() {\n    const dropdownMenu = this.getDropdownMenu();\n    let dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu');\n    document.addEventListener('click', this.handleOutsideClick.bind(this))\n    dropdownMenu.addEventListener('click', this.addActiveMenuItem)\n    dropdownMenuComponent.addEventListener('selectValues', (event) => {\n      this.addItemValueToTextField(event.detail)\n      this.handleButtonClose(event.detail)\n    })\n  }\n\n  componentDidLoad() {\n    let selectContainer = this.getMultiSelectFieldContainer()\n    selectContainer.addEventListener('click', this.toggleDropdownMenu.bind(this))\n    this.addEventListeners()\n  }\n\n\n  render() {\n    return (\n      <div class='multiSelect dropdown'>\n        <div class=\"multiSelectInput__container\" tabindex={1}>\n          {this.isOverflowing &&\n            <span class=\"prev\" onClick={() => this.addSelectSlider('left')}>\n              <ifx-icon icon='chevron-left-16'></ifx-icon>\n            </span>}\n          {this.isOverflowing &&\n            <span class=\"next\" onClick={() => this.addSelectSlider('right')}>\n              <ifx-icon icon='chevron-right-16'></ifx-icon>\n            </span>}\n          <div class='multiSelectInput__wrapper'>\n            <div class=\"multiSelectInput__content\">\n              {this.isEmpty && <span>{this.Placeholder}</span>}\n            </div>\n          </div>\n          <div class=\"multiSelectInput__icon-wrapper\">\n            <ifx-icon icon='chevron-down-16'></ifx-icon>\n          </div>\n        </div>\n        <slot name=\"menu\" />\n      </div>\n    )\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n.multiSelect {\n  &.dropdown {\n    box-sizing: border-box;\n    width: 300px;\n    border: 1px solid transparent;\n\n    &:active {\n      outline: none;\n      border: 1px solid #0A8276;\n\n    }\n  }\n}\n\n\n.multiSelectInput__container {\n\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n\n  //width: 588px;\n  width: 100%;\n  //height: 64px;\n\n  border: 1px solid #8D8786;\n\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n\n\n  &:focus:not(.success, :active) {\n    outline: 2px solid #0A8276;\n    border: 1px solid #3C3A39;\n    border-radius: 1px;\n    outline-offset: 2px;\n  }\n\n  &:hover:not(:disabled, .success) {\n    border: 1px solid #3C3A39;\n    cursor: pointer; //only when readonly\n  }\n\n  &.success {\n    border: 1px solid #4CA460;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  & .prev {\n    position: absolute;\n    //top: 0;\n    //left: 35px;\n    top: 7px;\n    left: 5px;\n    z-index: 1000;\n    cursor: pointer;\n\n    & ifx-icon svg {\n      width: 10px;\n    }\n  }\n\n  & .next {\n    position: absolute;\n    top: 7px;\n    right: 40px;\n    z-index: 1000;\n    cursor: pointer;\n\n    & ifx-icon svg {\n      width: 10px;\n    }\n  }\n\n  & .multiSelectInput__icon-wrapper {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  &.show {\n    & .multiSelectInput__icon-wrapper {\n      & ifx-icon {\n        transition: .3s;\n        transform: rotate(180deg);\n      }\n    }\n  }\n\n  & .multiSelectInput__icon-wrapper {\n    & ifx-icon {\n      position: absolute;\n      top: 12px;\n      right: 17px;\n      transition: .3s;\n    }\n  }\n\n  & .multiSelectInput__wrapper {\n    position: relative;\n    //overflow: hidden; \n    box-sizing: border-box;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    //padding: 8px;\n    padding: 0px;\n    //gap: 6px;\n    //font-size: 14px;\n    height: 40px;\n    left: 20px;\n    //width: 250px;\n    width: 220px;\n\n    background-color: tokens.$color-text-white;\n    color: #1D1D1D;\n\n    //border: 1px solid #8D8786;\n    border-radius: 1px;\n\n    flex: none;\n    //order: 0;\n    //align-self: stretch;\n    flex-grow: 0;\n\n    // & span { \n    //   pointer-events: none;\n    // }\n\n    & .multiSelectInput__content {\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: row;\n      width: 220px;\n      gap: 6px;\n      font-size: 14px;\n      //height: 100%;\n      overflow: hidden;\n\n      & span {\n        font-style: normal;\n        font-weight: 400;\n        font-size: 16px;\n        line-height: 24px;\n        pointer-events: none;\n        color: #8D8786;\n\n        flex: none;\n        order: 1;\n        flex-grow: 1;\n      }\n    }\n\n  }\n\n\n  & .textInput__bottom-wrapper-error {\n    font-style: normal;\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 16px;\n\n    letter-spacing: 0.2px;\n\n    color: #CD002F;\n\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n  }\n}"],"names":["MultiSelectInput","addActiveMenuItem","e","target","_this","getClickedElement","composedPath","isCheckable","checkable","toggleCheckbox","removeActiveMenuItem","handleClassList","toggleDropdownMenu","event","includes","this","el","closeDropdownMenu","key","value","_a","detail","getAttribute","dropdownMenu","querySelectorAll","selectedItems","shadowRoot","querySelector","i","length","index","Number","checked","_b","remove","check","selectedItemIndex","togglePlaceHolder","toggleSlideButtons","wrapperItems","getMultiSelectFieldWrapper","isEmpty","multiSelectElement","isOverflown","isOverflowing","dropdownMenuComponent","type","className","classList","closest","multiSelectContainer","getMultiSelectFieldContainer","getDropdownMenu","dropdownWrapper","getDropdownWrapper","dropdownMenuItems","getDropdownItems","SVGElement","menuItems","Array","from","reduce","acc","item","offsetWidth","element","scrollWidth","clientWidth","direction","wrapper","totalWidth","scrollLeft","_addItemValueToTextField","_asyncToGenerator","_regeneratorRuntime","mark","_callee","newItem","_this2","wrap","_context","prev","next","document","createElement","setAttribute","append","setTimeout","stop","_x","apply","arguments","_this3","addEventListener","handleOutsideClick","bind","addItemValueToTextField","handleButtonClose","addEventListeners","_this4","h","class","tabindex","onClick","addSelectSlider","icon","Placeholder","name","get"],"sourceRoot":""}