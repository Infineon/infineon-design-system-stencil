{"version":3,"file":"static/js/5284.1c8a63b5.chunk.js","mappings":"mKAAA,MCOaA,EAAS,M,mFACE,E,SACA,I,WACE,E,eACI,E,qBACM,E,yGAKD,C,CAMjCC,YAAAA,CAAaC,GACXC,KAAKC,cAAgBF,EACrBC,KAAKE,oB,CAGPC,iBAAAA,CAAkBC,GAChB,MAAMC,EAASD,EAAMC,OACrBL,KAAKC,cAAgBK,SAASD,EAAOE,OACrCP,KAAKQ,UAAUC,KAAKT,KAAKC,eACzBD,KAAKE,oB,CAGPA,kBAAAA,GACE,GAAIF,KAAKU,SAAU,CACjB,MAAMC,GAAYX,KAAKC,cAAgBD,KAAKY,MAAQZ,KAAKa,IAAMb,KAAKY,KAAQ,IAC5EZ,KAAKU,SAASI,MAAMC,YAAY,kBAAmB,GAAFC,OAAKL,EAAO,K,EAIjEM,iBAAAA,GACEjB,KAAKC,cAAgBD,KAAKO,K,CAG5BW,gBAAAA,GACElB,KAAKE,oB,CAIPiB,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAKC,MAAM,cACRrB,KAAKsB,WACJF,EAAAA,EAAAA,GAAA,QAAMC,MAAK,aACRrB,KAAKsB,UAGTtB,KAAKuB,WACJH,EAAAA,EAAAA,GAAA,YAAUI,KAAMxB,KAAKuB,SAAUF,MAAK,YAAAL,OAAchB,KAAKyB,SAAW,YAAc,OAGlFL,EAAAA,EAAAA,GAAA,SACEM,KAAK,QACLd,IAAKZ,KAAKY,IACVC,IAAKb,KAAKa,IACVY,SAAUzB,KAAKyB,SACflB,MAAOP,KAAKC,cACZ0B,IAAMC,GAAQ5B,KAAKU,SAAWkB,EAC9BC,QAAUzB,GAAUJ,KAAKG,kBAAkBC,GAAM,aACtC,WAAU,aACTJ,KAAKO,MAAK,gBACPP,KAAKyB,WAErBzB,KAAK8B,YACJV,EAAAA,EAAAA,GAAA,YAAUI,KAAMxB,KAAK8B,UAAWT,MAAK,aAAAL,OAAehB,KAAKyB,SAAW,YAAc,MAEnFzB,KAAK+B,YACJX,EAAAA,EAAAA,GAAA,QAAMC,MAAK,aAAAL,OAAehB,KAAKyB,SAAW,YAAc,KACrDzB,KAAK+B,WAIT/B,KAAKgC,iBACJZ,EAAAA,EAAAA,GAAA,QACEC,MAAK,qBAAAL,OAAuBhB,KAAKyB,SAAW,YAAc,KAEzDzB,KAAKC,cAAa,K,gEDxFb,m+C","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/slider/slider.scss?tag=ifx-slider&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/slider/slider.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n\n// ifx-slider.scss\n:host {\n  display: inline-block;\n}\n\n.left-icon,\n.right-icon,\n.left-text,\n.right-text,\n.percentage-display {\n  font-size: tokens.$ifxFontSizeS;\n  color: tokens.$ifxColorEngineering500;\n  margin-left: tokens.$ifxSpace100;\n\n  &.disabled {\n    // Add the disabled state for the percentage display\n    color: tokens.$ifxColorEngineering300;\n  }\n}\n\n.left-icon,\n.left-text {\n  margin-right: tokens.$ifxSpace100;\n}\n\n.right-icon,\n.right-text,\n.percentage-display {\n  margin-left: tokens.$ifxSpace100;\n}\n\n\n.ifx-slider {\n  display: flex;\n  align-items: center;\n  padding: tokens.$ifxSpace25 tokens.$ifxSpace200;\n  border-radius: tokens.$ifxBorderRadiusRound;\n\n  input[type='range'] {\n    -webkit-appearance: none;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(to right, tokens.$ifxColorOcean500 0%, tokens.$ifxColorOcean500 var(--value-percent, 0%), tokens.$ifxColorEngineering200 var(--value-percent, 0%), tokens.$ifxColorEngineering200 100%);\n    outline: none;\n    cursor: pointer;\n    transition: 0.2s;\n\n    &::-moz-range-thumb {\n      width: tokens.$ifxSize250;\n      height: tokens.$ifxSize250;\n      border-radius: 50%;\n      background: tokens.$ifxColorOcean500;\n      cursor: pointer;\n      box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);\n    }\n\n    &:not(:disabled)::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      width: 16px;\n      height: 16px;\n      background: tokens.$ifxColorOcean500;\n      border-radius: 50%;\n      cursor: pointer;\n      transition: box-shadow 0.2s;\n\n      &:hover {\n        background: tokens.$ifxColorOcean600;\n      }\n\n      &:active {\n        background: tokens.$ifxColorOcean700;\n      }\n    }\n  }\n\n  input[type='range']:disabled {\n    background: tokens.$ifxColorEngineering300;\n    cursor: default;\n  }\n\n  input[type='range']:disabled::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 16px;\n    height: 16px;\n    background: tokens.$ifxColorEngineering300;\n    border-radius: 50%;\n    cursor: default;\n  }\n}","import { Component, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-slider',\n  styleUrl: 'slider.scss',\n  shadow: true,\n})\nexport class IfxSlider {\n  @Prop() min: number = 0;\n  @Prop() max: number = 100;\n  @Prop() value: number = 0;\n  @Prop() disabled: boolean = false;\n  @Prop() showPercentage: boolean = false;\n  @Prop() leftIcon: string;\n  @Prop() rightIcon: string;\n  @Prop() leftText: string;\n  @Prop() rightText: string;\n  @State() internalValue: number = 0;\n  @Event() ifxChange: EventEmitter<number>;\n\n  private inputRef: HTMLInputElement;\n\n  @Watch('value')\n  valueChanged(newValue: number) {\n    this.internalValue = newValue;\n    this.updateValuePercent();\n  }\n\n  handleInputChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.internalValue = parseInt(target.value);\n    this.ifxChange.emit(this.internalValue);\n    this.updateValuePercent();\n  }\n\n  updateValuePercent() {\n    if (this.inputRef) {\n      const percent = ((this.internalValue - this.min) / (this.max - this.min)) * 100;\n      this.inputRef.style.setProperty('--value-percent', `${percent}%`);\n    }\n  }\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n  }\n\n  componentDidLoad() {\n    this.updateValuePercent();\n  }\n\n\n  render() {\n    return (\n      <div class=\"ifx-slider\">\n        {this.leftText && (\n          <span class={`left-text`}>\n            {this.leftText}\n          </span>\n        )}\n        {this.leftIcon && (\n          <ifx-icon icon={this.leftIcon} class={`left-icon${this.disabled ? ' disabled' : ''}`} />\n        )}\n\n        <input\n          type=\"range\"\n          min={this.min}\n          max={this.max}\n          disabled={this.disabled}\n          value={this.internalValue}\n          ref={(el) => (this.inputRef = el as HTMLInputElement)}\n          onInput={(event) => this.handleInputChange(event)}\n          aria-label='a slider'\n          aria-value={this.value}\n          aria-disabled={this.disabled}\n        />\n        {this.rightIcon && (\n          <ifx-icon icon={this.rightIcon} class={`right-icon${this.disabled ? ' disabled' : ''}`} />\n        )}\n        {this.rightText && (\n          <span class={`right-text${this.disabled ? ' disabled' : ''}`}>\n            {this.rightText}\n          </span>\n        )}\n\n        {this.showPercentage && (\n          <span\n            class={`percentage-display${this.disabled ? ' disabled' : ''}`}\n          >\n            {this.internalValue}%\n          </span>\n        )}\n      </div>\n    );\n  }\n}\n"],"names":["IfxSlider","valueChanged","newValue","this","internalValue","updateValuePercent","handleInputChange","event","target","parseInt","value","ifxChange","emit","inputRef","percent","min","max","style","setProperty","concat","componentWillLoad","componentDidLoad","render","h","class","leftText","leftIcon","icon","disabled","type","ref","el","onInput","rightIcon","rightText","showPercentage"],"sourceRoot":""}