{"version":3,"file":"static/js/644.d2fa5bdf.chunk.js","mappings":"wMAQaA,EAAI,W,gFAGgC,W,sIAOxB,G,YACE,Q,gBACK,C,8CAG9B,SAAeC,GACbC,KAAKC,UAAYF,EAAMG,M,GACxB,CAAAC,IAAA,4BAAAC,MAED,WACE,IAAMC,EAAML,KAAKM,GAAGC,cAAc,kBAC5BC,EAAOR,KAAKM,GAAGC,cAAc,iBAC7BE,EAAWT,KAAKM,GAAGC,cAAc,qBACjCG,EAAWV,KAAKM,GAAGC,cAAc,qBACjCI,EAASX,KAAKM,GAAGC,cAAc,aAAeP,KAAKM,GAAGC,cAAc,cAInEP,KAAKY,SAFRP,EAIAG,IACFR,KAAKa,SAAU,GAIfb,KAAKc,SADJH,EAICF,GAAYC,GAAYF,GAAQG,EAClCX,KAAKe,QAAS,EACLf,KAAKa,SAAYJ,GAAYC,GAAYC,EAClDX,KAAKgB,WAAY,EAEjBhB,KAAKiB,WAAY,C,GAEpB,CAAAd,IAAA,cAAAC,MAED,WACMJ,KAAKkB,UAEFlB,KAAKkB,WAAY,EADtBlB,KAAKkB,WAAY,C,GAEpB,CAAAf,IAAA,oBAAAC,MAED,WACEJ,KAAKmB,2B,GACN,CAAAhB,IAAA,sBAAAC,MAED,WACEJ,KAAKmB,2B,GACN,CAAAhB,IAAA,SAAAC,MAGD,WACE,OACEgB,EAAAA,EAAAA,GAACC,EAAAA,EAAI,MACHD,EAAAA,EAAAA,GAAA,OAAKE,MAAK,oBAAAC,OAENvB,KAAKc,OAAS,SAAW,GAAE,gBAAAS,OAC1BvB,KAAKY,OAAsB,GAAb,WAAe,gBAAAW,OAC9BvB,KAAKwB,UAAS,iBAAAD,OACdvB,KAAKC,UAAS,iBAAAsB,OACdvB,KAAKgB,UAAY,YAAc,GAAE,iBAAAO,OACjCvB,KAAKiB,UAAY,YAAc,GAAE,iBAAAM,OACjCvB,KAAKe,OAAS,SAAW,KAGT,eAAnBf,KAAKwB,YACHJ,EAAAA,EAAAA,GAAA,OAAKE,MAAM,eACRF,EAAAA,EAAAA,GAAA,KAAGE,MAAK,YAAAC,OAAevB,KAAKY,OAAqB,GAAZ,WAAkBa,KAAMzB,KAAKyB,OAChEL,EAAAA,EAAAA,GAAA,QAAMM,KAAK,UAGbN,EAAAA,EAAAA,GAAA,OAAKE,MAAM,wBACTF,EAAAA,EAAAA,GAAA,KAAGE,MAAM,aAAaG,KAAMzB,KAAKyB,OAC7BL,EAAAA,EAAAA,GAAA,eAEJA,EAAAA,EAAAA,GAAA,QAAMM,KAAK,cAiBE,aAAnB1B,KAAKwB,YACLJ,EAAAA,EAAAA,GAAA,OAAKE,MAAM,aACTF,EAAAA,EAAAA,GAAA,KAAGE,MAAM,sBAAsBG,KAAMzB,KAAKyB,KAAME,OAAQ3B,KAAK2B,SAC3DP,EAAAA,EAAAA,GAAA,OAAKE,MAAK,YAAAC,OAAevB,KAAKY,OAAqB,GAAZ,aACrCQ,EAAAA,EAAAA,GAAA,QAAMM,KAAK,UAGbN,EAAAA,EAAAA,GAAA,OAAKE,MAAM,eACTF,EAAAA,EAAAA,GAAA,gBAIJA,EAAAA,EAAAA,GAAA,OAAKE,MAAM,wBACTF,EAAAA,EAAAA,GAAA,QAAMM,KAAK,e,GAOtB,CAAAvB,IAAA,KAAAyB,IAAA,W,0BA3Hc,G,QCRD,4jC","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.scss?tag=ifx-card&encapsulation=shadow"],"sourcesContent":["import { Component, h, Host, Element, Prop, State, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card',\n  styleUrl: 'card.scss',\n  shadow: true,\n})\n\nexport class Card {\n  @Element() el;\n  @State() hasBtn: boolean;\n  @Prop() direction: 'horizontal' | 'vertical' = 'vertical';\n  @State() alignment: string;\n  @State() hasDesc: boolean;\n  @State() hasAll: boolean;\n  @State() largeSize: boolean;\n  @State() smallSize: boolean;\n  @State() hasImg: boolean;\n  @Prop() href: string = \"\";\n  @Prop() target: string = \"_self\";\n  @State() isHovered: boolean = false;\n\n  @Listen('imgPosition')\n  setImgPosition(event) { \n    this.alignment = event.detail\n  }\n\n  handleComponentAdjustment() { \n    const img = this.el.querySelector('ifx-card-image')\n    const desc = this.el.querySelector('ifx-card-text')\n    const overline = this.el.querySelector('ifx-card-overline')\n    const headline = this.el.querySelector('ifx-card-headline')\n    const button = this.el.querySelector('ifx-link') || this.el.querySelector('ifx-button')\n \n    if(!img) { \n      this.hasImg = false;\n    } else this.hasImg = true;\n\n    if (desc) {\n      this.hasDesc = true;\n    }\n\n    if(button) { \n      this.hasBtn = true;\n    } else this.hasBtn = false;\n\n    if (overline && headline && desc && button) {\n      this.hasAll = true;\n    } else if (this.hasDesc || (overline && headline && button)) {\n      this.largeSize = true\n    } else {\n      this.smallSize = true\n    }\n  }\n\n  handleHover() { \n    if(!this.isHovered) {\n      this.isHovered = true;\n    } else this.isHovered = false;\n  }\n\n  componentWillLoad() {\n    this.handleComponentAdjustment()\n  }\n\n  componentWillUpdate() { \n    this.handleComponentAdjustment()\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div class={\n          `card \n          ${this.hasBtn ? 'hasBtn' : \"\"}\n          ${!this.hasImg ? 'onlyBody' : \"\"}\n          ${this.direction} \n          ${this.alignment} \n          ${this.largeSize ? 'largeSize' : \"\"} \n          ${this.smallSize ? 'smallSize' : \"\"} \n          ${this.hasAll ? 'hasAll' : \"\"}`\n        }>\n         \n        {this.direction === 'horizontal' &&\n           <div class=\"horizontal\">\n              <a class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`} href={this.href}>\n                <slot name=\"img\" />\n              </a>\n\n              <div class='lower__body-wrapper'>\n                <a class='upper-body' href={this.href}>\n                    <slot />\n                </a>\n                <slot name='buttons' />\n              </div>\n         </div>}\n\n          {/* <div class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`}>\n            <slot name=\"img\" />\n          </div>\n\n          <div class='card-body'>\n            <slot />\n            <slot name='buttons' />\n          </div> */}\n\n         {/* <div class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`}>\n            <slot name=\"img\" />\n          </div> */}\n\n         {this.direction === 'vertical' && \n          <div class=\"vertical\">\n            <a class='upper__body-wrapper' href={this.href} target={this.target}>\n              <div class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`}>\n                <slot name=\"img\" />\n              </div>\n\n              <div class='upper-body'>\n                <slot />\n              </div>\n            </a>\n\n            <div class='lower__body-wrapper'>\n              <slot name='buttons' />\n            </div>\n\n          </div>}\n        </div>\n      </Host>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.card {\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid #ebe9e9;\n  border-radius: 1px;\n  width: 22rem;\n  height: auto;\n  \n  & .horizontal { \n    display: flex;\n    flex-direction: row;\n\n      & .card-img {\n        flex: 1;\n        text-decoration: none;\n\n        & ::slotted([slot=img]) {\n          width: 100%;\n          vertical-align: bottom;\n        }\n      }\n\n      & .lower__body-wrapper { \n        flex: 1;\n\n        & .upper-body { \n          display: flex;\n          flex-direction: column;\n          text-decoration: none;\n          color: tokens.$color-text-black;\n          padding: 24px 24px 0px 24px;\n        }\n      }\n  }\n\n  & .vertical { \n    & .upper__body-wrapper { \n      text-decoration: none;\n      color: tokens.$color-text-black;\n\n      & .upper-body { \n        padding: 24px 24px 0px 24px;\n      }\n    }\n  }\n\n  // & .card-img {\n  //   & ::slotted([slot=img]) {\n  //     width: 100%;\n  //     vertical-align: bottom;\n  //   }\n  // }\n\n  // & .card-body {\n  //   padding: 24px;\n  // }\n\n  &.horizontal {\n    flex-direction: row;\n    width: 538px;\n\n    // &.hasAll {\n    //   height: auto;\n    // }\n\n    // &.largeSize {\n    //   height: 218px;\n    // }\n\n    // &.smallSize {\n    //   height: 138px;\n    // }\n\n    // & .lower__body-wrapper { \n    //   & .card-body {\n    //     flex: 1;\n    //     width: 0;\n    //   }\n    // }\n\n    & .card-img {\n      flex: 1;\n      order: 2;\n\n      & ::slotted([slot=img]) {\n        width: 100%;\n        height: 100%;\n        vertical-align: bottom;\n        object-fit: cover;\n      }\n    }\n\n    &.left {\n      & .horizontal { \n        & .card-img {\n          order: 1;\n        }\n  \n        & .lower__body-wrapper { \n          order: 2;\n        }\n      }\n    }\n  }\n}\n\n// .card__text-wrapper {\n//   padding-bottom: 0px;\n\n//   &.hasBtn {\n//     padding-bottom: 16px;\n//   }\n// }\n\n// .card-text {\n//   line-height: 24px;\n//   font-size: 16px;\n//   font-weight: 400;\n//   white-space: wrap;\n//   display: -webkit-box;\n//   -webkit-line-clamp: 3;\n//   -webkit-box-orient: vertical;\n//   overflow: hidden;\n//   text-overflow: ellipsis;\n// }"],"names":["Card","event","this","alignment","detail","key","value","img","el","querySelector","desc","overline","headline","button","hasImg","hasDesc","hasBtn","hasAll","largeSize","smallSize","isHovered","handleComponentAdjustment","h","Host","class","concat","direction","href","name","target","get"],"sourceRoot":""}