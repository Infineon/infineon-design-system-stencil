{"version":3,"file":"static/js/774.6c9e60f5.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.scss?tag=ifx-card&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-headline/card-headline.scss?tag=ifx-card-headline&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-headline/card-headline.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-image/card-image.scss?tag=ifx-card-image&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-image/card-image.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-overline/card-overline.scss?tag=ifx-card-overline&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-overline/card-overline.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-text/card-text.scss?tag=ifx-card-text&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card-text/card-text.tsx"],"sourcesContent":["import { Component, h, Host, Element, Prop, State, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card',\n  styleUrl: 'card.scss',\n  shadow: true,\n})\n\nexport class Card {\n  @Element() el;\n  @State() noBtns: boolean;\n  @Prop() direction: 'horizontal' | 'vertical' = 'vertical';\n  @State() alignment: string;\n  @State() hasDesc: boolean;\n  @State() hasAll: boolean;\n  @State() largeSize: boolean;\n  @State() smallSize: boolean;\n  @State() hasImg: boolean;\n  @Prop() href: string = \"\";\n  @Prop() target: string = \"_self\";\n\n  @Listen('imgPosition')\n  setImgPosition(event) { \n    this.alignment = event.detail\n  }\n\n  handleComponentAdjustment() { \n    const img = this.el.querySelector('ifx-card-image')\n    const desc = this.el.querySelector('ifx-card-text')\n    const overline = this.el.querySelector('ifx-card-overline')\n    const headline = this.el.querySelector('ifx-card-headline')\n    const button = this.el.querySelector('ifx-link') || this.el.querySelector('ifx-button')\n    const links = this.el.querySelector('ifx-card-links')\n \n    if(!img) { \n      this.hasImg = false;\n    } else this.hasImg = true;\n\n    if (desc) {\n      this.hasDesc = true;\n    }\n\n    // if(button) { \n    //   this.hasBtn = true;\n    // } else this.hasBtn = false;\n\n    if (overline && headline && desc && button) {\n      this.hasAll = true;\n    } else if (this.hasDesc || (overline && headline && button)) {\n      this.largeSize = true\n    } else {\n      this.smallSize = true\n    }\n\n    if(!links) { \n      this.noBtns = true;\n    } else this.noBtns = false;\n  }\n\n  handleHovering() { \n    const card = this.el.shadowRoot.querySelector('.card')\n    card.addEventListener('mouseover', (ev) => { \n      this.el.querySelector('ifx-card-headline').isHovered = true;\n      if(ev.target.nodeName === 'IFX-CARD-LINKS' || ev.target.nodeName === 'IFX-BUTTON') { \n        this.el.shadowRoot.querySelector('.card').style.borderColor = '#ebe9e9';\n        this.el.querySelector('ifx-card-headline').isHovered = false;\n      } else this.el.shadowRoot.querySelector('.card').style.borderColor = '#0A8276';\n    })\n\n    card.addEventListener('mouseout', () => { \n      this.el.querySelector('ifx-card-headline').isHovered = false;\n      this.el.shadowRoot.querySelector('.card').style.borderColor = '#ebe9e9';\n    })\n  }\n  \n  componentWillLoad() {\n    this.handleComponentAdjustment()\n  }\n\n  componentDidLoad() { \n    this.handleHovering()\n  }\n\n  componentWillUpdate() { \n    this.handleComponentAdjustment()\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={\n          `card \n          ${this.noBtns ? 'noBtns' : \"\"}\n          ${!this.hasImg ? 'onlyBody' : \"\"}\n          ${this.direction} \n          ${this.alignment} \n          ${this.largeSize ? 'largeSize' : \"\"} \n          ${this.smallSize ? 'smallSize' : \"\"} \n          ${this.hasAll ? 'hasAll' : \"\"}`\n        }>\n         \n        {this.direction === 'horizontal' &&\n           <div class=\"horizontal\">\n              <a class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`} href={this.href}>\n                <slot name=\"img\" />\n              </a>\n\n              <div class='lower__body-wrapper'>\n                <a class='upper-body' href={this.href}>\n                    <slot />\n                </a>\n                <slot name='buttons' />\n              </div>\n         </div>}\n\n         {this.direction === 'vertical' && \n          <div class=\"vertical\">\n            <a class='upper__body-wrapper' href={this.href} target={this.target}>\n              <div class={`card-img ${!this.hasImg ? 'noImage' : \"\"}`}>\n                <slot name=\"img\" />\n              </div>\n\n              <div class='upper-body'>\n                <slot />\n              </div>\n            </a>\n\n            <div class='lower__body-wrapper'>\n              <slot name='buttons' />\n            </div>\n          </div>}\n        </div>\n      </Host>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.card {\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid #ebe9e9;\n  border-radius: 1px;\n  width: 22rem;\n  height: auto;\n\n  &.noBtns { \n    & .vertical { \n      & .lower__body-wrapper { \n        padding-bottom: 24px;\n      }\n    }\n\n    & .horizontal { \n      & .lower__body-wrapper { \n        padding-bottom: 24px;\n      }\n    }\n  }\n\n  &:hover { \n    cursor: pointer;\n    border-color: #0A8276;\n  }\n\n  & .horizontal { \n    display: flex;\n    flex-direction: row;\n\n      & .card-img {\n        flex: 1;\n        text-decoration: none;\n\n        & ::slotted([slot=img]) {\n          width: 100%;\n          vertical-align: bottom;\n        }\n      }\n\n      & .lower__body-wrapper { \n        flex: 1;\n\n        & .upper-body { \n          display: flex;\n          flex-direction: column;\n          text-decoration: none;\n          color: tokens.$color-text-black;\n          padding: 24px 24px 0px 24px;\n        }\n      }\n  }\n\n  & .vertical { \n    & .upper__body-wrapper { \n      text-decoration: none;\n      color: tokens.$color-text-black;\n      //padding: 0px 10px 10px 10px;\n\n      & .upper-body { \n        padding: 24px 24px 0px 24px;\n      }\n    }\n\n    & .lower__body-wrapper { \n      &:hover { \n        border-color: #ebe9e9;\n      }\n    }\n  }\n\n  &.horizontal {\n    flex-direction: row;\n    width: 538px;\n\n    // &.hasAll {\n    //   height: auto;\n    // }\n\n    // &.largeSize {\n    //   height: 218px;\n    // }\n\n    // &.smallSize {\n    //   height: 138px;\n    // }\n\n   \n    & .card-img {\n      flex: 1;\n      order: 2;\n\n      & ::slotted([slot=img]) {\n        width: 100%;\n        height: 100%;\n        vertical-align: bottom;\n        object-fit: cover;\n      }\n    }\n\n    &.left {\n      & .horizontal { \n        & .card-img {\n          order: 1;\n        }\n  \n        & .lower__body-wrapper { \n          order: 2;\n        }\n      }\n    }\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n:host { \n  pointer-events: none;\n}\n\n.card__headline-wrapper {\n  padding-bottom: 16px;\n\n  &.withDesc {\n    padding-bottom: 8px;\n  }\n}\n\n.card-headline {\n  margin-top: 0;\n  padding-top: 0;\n  font-family: \"Source Sans Pro\";\n  font-weight: 600;\n  font-size: tokens.$font-size-xl;\n  line-height: 32px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  &.isHovered { \n    color: #0A8276;\n  }\n\n  &.horizontal {\n    font-size: tokens.$font-size-l;\n    line-height: 28px;\n  }\n\n}","import { Component, h, Element, State, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card-headline',\n  styleUrl: 'card-headline.scss',\n  shadow: true,\n})\n\nexport class CardHeadline {\n  @Element() el;\n  @State() direction: string;\n  @State() hasDesc: boolean;\n  @Prop() isHovered: boolean = false;\n\n  componentWillLoad() {\n    const cardElement = this.el.closest('ifx-card');\n\n    if (cardElement) {\n      const cardClass = cardElement.shadowRoot.querySelector('.card')?.className;\n\n      if (cardClass && cardClass.includes('horizontal')) {\n        this.direction = 'horizontal'\n      }\n\n      const desc = cardElement.querySelector('ifx-card-text');\n      if (desc) {\n        this.hasDesc = true;\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div class={`card__headline-wrapper ${this.hasDesc ? 'withDesc' : \"\"}`}>\n        <div class={`card-headline ${this.direction} ${this.isHovered ? 'isHovered' : \"\"}`}>\n          <slot />\n        </div>\n      </div>\n    )\n  }\n}\n",".card-image { \n  width: 100%;\n  height: 100%;\n  vertical-align: bottom;\n  object-fit: cover;\n}","import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card-image',\n  styleUrl: 'card-image.scss',\n  shadow: true,\n})\n\nexport class CardImage {\n  @Prop() src: string;\n  @Prop() alt: string;\n  @Prop() position: string;\n  @Event() imgPosition: EventEmitter;\n\n  handlePosition(position) { \n    this.imgPosition.emit(position)\n  }\n\n  componentWillLoad() { \n    this.handlePosition(this.position)\n  }\n\n  componentDidUpdate() {\n    this.handlePosition(this.position)\n  }\n\n  render() {\n    return (\n      <img src={this.src} alt={this.alt} class=\"card-image\" />\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n:host { \n  pointer-events: none;\n}\n\n.card-overline {\n  font-size: tokens.$font-size-m;\n  font-weight: tokens.$font-weight-regular;\n  color: tokens.$color-gray-500;\n  padding-bottom: 4px;\n\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  word-break: break-all;\n\n}","import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card-overline',\n  styleUrl: 'card-overline.scss',\n  shadow: true,\n})\n\nexport class CardOverline {\n\n  render() {\n    return (\n      <div class=\"card-overline\">\n        <slot />\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n:host { \n  pointer-events: none;\n}\n\n.card__text-wrapper {\n  padding-bottom: 0px;\n\n  &.hasBtn {\n    padding-bottom: 16px;\n  }\n}\n\n.card-text {\n  line-height: 24px;\n  font-size: 16px;\n  font-weight: 400;\n  white-space: wrap;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}","import { Component, h, Element, State} from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card-text',\n  styleUrl: './card-text.scss',\n  shadow: true,\n})\n\nexport class CardText {\n  @Element() el;\n  @State() hasBtn: boolean;\n\n  componentWillLoad() { \n    const link = this.el.closest('ifx-card').querySelector('ifx-link');\n    const button = this.el.closest('ifx-card').querySelector('ifx-button');\n    if(link || button) { \n      this.hasBtn = true;\n    }\n  }\n\n  render() {\n    return (\n      <div class={`card__text-wrapper ${this.hasBtn ? 'hasBtn' : \"\"}`}>\n        <div class={`card-text`}>\n          <slot />\n        </div>\n      </div>\n    );\n  }\n}\n"],"names":["Card","event","this","alignment","detail","key","value","img","el","querySelector","desc","overline","headline","button","links","hasImg","hasDesc","hasAll","largeSize","smallSize","noBtns","_this","card","shadowRoot","addEventListener","ev","isHovered","target","nodeName","style","borderColor","handleComponentAdjustment","handleHovering","h","Host","class","concat","direction","href","name","get","CardHeadline","cardElement","closest","cardClass","_a","className","includes","CardImage","position","imgPosition","emit","handlePosition","src","alt","CardOverline","CardText","link","hasBtn"],"sourceRoot":""}