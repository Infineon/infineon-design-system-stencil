import{r as s,c as a,h as l}from"./index-BBWzqTXg.js";const r="",h=class{constructor(t){s(this,t),this.ifxFilterSelect=a(this,"ifxFilterSelect",7),this.type="text",this.filterValues=[]}handleTextInputChange(t){const i=t.target.value;this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:[i],type:this.type})}handleSingleSelectChange(t){const e=t.detail.value;this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:[e],type:this.type})}handleMultiselectOptionChange(t){this.filterValues=t.detail.map(e=>({label:e.value,value:e.value})),this.ifxFilterSelect.emit({filterName:this.filterName,filterValues:this.filterValues,type:this.type})}render(){let t=[];if(typeof this.options=="string")try{t=JSON.parse(this.options)}catch(e){console.error("Failed to parse options:",e),t=[]}else Array.isArray(this.options)&&(t=this.options);switch(this.type){case"text":return l("ifx-text-field",{error:!1,disabled:!1,placeholder:this.placeholder,onIfxInput:e=>this.handleTextInputChange(e)},this.filterLabel);case"single-select":return l("ifx-select",{placeholder:"true","search-enabled":"true","search-placeholder-value":"Search...",onIfxSelect:e=>this.handleSingleSelectChange(e),"ifx-placeholder-value":this.placeholder,"ifx-label":this.filterLabel,"ifx-options":this.options});case"multi-select":return l("ifx-multiselect",{label:this.filterLabel,placeholder:this.placeholder,onIfxSelect:e=>this.handleMultiselectOptionChange(e)},t.map(e=>l("ifx-multiselect-option",{value:e.value||e},e.label||e)));default:return null}}};h.style=r;export{h as ifx_set_filter};
