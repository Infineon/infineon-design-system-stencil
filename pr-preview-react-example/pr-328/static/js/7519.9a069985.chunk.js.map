{"version":3,"file":"static/js/7519.9a069985.chunk.js","mappings":"+NAQaA,EAAQ,W,oQACW,E,aAEJ,c,0BACa,E,gBAOyD,G,eACpE,E,CAwD3B,O,qEArDD,SAAAC,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACEC,KAAKC,WAAY,EACjBD,KAAKE,UAAUC,OAAO,wBAAAN,EAAAO,OAAA,GAAAV,EAAA,UACvB,yBAAAW,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAAC,IAAA,QAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAhB,EAAAA,EAAAA,KAAAiB,MAGD,SAAAC,IAAA,OAAAlB,EAAAA,EAAAA,KAAAC,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACEC,KAAKC,WAAY,EACjBD,KAAKe,WAAWZ,OAAO,wBAAAW,EAAAV,OAAA,GAAAS,EAAA,UACxB,yBAAAH,EAAAJ,MAAA,KAAAC,UAAA,EANA,IAMA,CAAAC,IAAA,qBAAAC,MAED,WACMT,KAAKgB,qBACPhB,KAAKiB,O,GAER,CAAAT,IAAA,sBAAAC,MAED,WACET,KAAKkB,cAAcf,M,GACpB,CAAAK,IAAA,0BAAAC,MAED,WACET,KAAKmB,kBAAkBhB,M,GACxB,CAAAK,IAAA,SAAAC,MAED,WAAM,IAAAW,EAAA,KACJ,OACEC,EAAAA,EAAAA,GAAA,OAAKC,MAAK,mBAAAC,OAAqBvB,KAAKC,UAAY,OAAS,MACvDoB,EAAAA,EAAAA,GAAA,OAAKC,MAAM,gBAAgBE,QAAS,kBAAMJ,EAAKK,oBAAoB,KACnEJ,EAAAA,EAAAA,GAAA,OAAKC,MAAM,2BACRtB,KAAK0B,YAAc1B,KAAK2B,WACvBN,EAAAA,EAAAA,GAAA,OAAKC,MAAK,gBAAAC,OAAkBvB,KAAK0B,cAC/BL,EAAAA,EAAAA,GAAA,YAAUO,KAAM5B,KAAK2B,aAErB,MACJN,EAAAA,EAAAA,GAAA,OAAKC,MAAM,kBACTD,EAAAA,EAAAA,GAAA,OAAKC,MAAM,iBACTD,EAAAA,EAAAA,GAAA,UAAKrB,KAAK6B,UACVR,EAAAA,EAAAA,GAAA,UAAQG,QAAS,kBAAMJ,EAAKH,OAAO,aAErCI,EAAAA,EAAAA,GAAA,OAAKC,MAAM,eACTD,EAAAA,EAAAA,GAAA,QAAMS,KAAK,cAEbT,EAAAA,EAAAA,GAAA,OAAKC,MAAM,iBACTD,EAAAA,EAAAA,GAAA,QAAMS,KAAK,YACTT,EAAAA,EAAAA,GAAA,cAAYU,QAAQ,UAAUP,QAAS,kBAAMJ,EAAKY,qBAAqB,UACvEX,EAAAA,EAAAA,GAAA,cAAYG,QAAS,kBAAMJ,EAAKa,yBAAyB,iB,KAOtExC,CAAA,CApEkB,G,QCRJ,qyC","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.scss?tag=ifx-modal&encapsulation=shadow"],"sourcesContent":["//ifxModal.tsx\nimport { Component, Prop, State, Method, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-modal',\n  styleUrl: 'modal.scss',\n  shadow: true\n})\nexport class IfxModal {\n  @State() showModal: boolean = false;\n\n  @Prop() caption: string = 'Modal Title';\n  @Prop() closeOnOverlayClick: boolean = true;\n\n  @Event() modalOpen: EventEmitter;\n  @Event() modalClose: EventEmitter;\n  @Event() okButtonClick: EventEmitter;\n  @Event() cancelButtonClick: EventEmitter;\n\n  @Prop() alertColor: 'orange' | 'ocean' | 'grey' | 'grey-200' | 'red' | 'green' | 'berry' | '' = '';\n  @Prop() alertIcon: string = '';\n\n  @Method()\n  async open() {\n    this.showModal = true;\n    this.modalOpen.emit();\n  }\n\n  @Method()\n  async close() {\n    this.showModal = false;\n    this.modalClose.emit();\n  }\n\n  handleOverlayClick() {\n    if (this.closeOnOverlayClick) {\n      this.close();\n    }\n  }\n\n  handleOkButtonClick() {\n    this.okButtonClick.emit();\n  }\n\n  handleCancelButtonClick() {\n    this.cancelButtonClick.emit();\n  }\n\n  render() {\n    return (\n      <div class={`modal-container ${this.showModal ? 'open' : ''}`}>\n        <div class=\"modal-overlay\" onClick={() => this.handleOverlayClick()}></div>\n        <div class=\"modal-content-container\">\n          {this.alertColor && this.alertIcon ? (\n            <div class={`modal-border ${this.alertColor}`}>\n              <ifx-icon icon={this.alertIcon} />\n            </div>\n          ) : null}\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h2>{this.caption}</h2>\n              <button onClick={() => this.close()}>&times;</button>\n            </div>\n            <div class=\"modal-body\">\n              <slot name=\"content\" />\n            </div>\n            <div class=\"modal-footer\">\n              <slot name=\"buttons\">\n                <ifx-button variant='outline' onClick={() => this.handleOkButtonClick()}>OK</ifx-button>\n                <ifx-button onClick={() => this.handleCancelButtonClick()}>Cancel</ifx-button>\n              </slot>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","//ifxModal.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n  display: block;\n}\n\n.modal-container {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n.modal-container.open {\n  display: block;\n}\n\n.modal-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: tokens.$color-black;\n  opacity: 0.5;\n}\n\n.modal-content {\n  width: 100%;\n  flex: 1;\n}\n\n.modal-content-container {\n  position: absolute;\n  display: flex;\n  align-items: stretch;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 80%;\n  max-width: 500px;\n  background-color: #fff;\n  border-radius: tokens.$border-radius-sharp;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden; // Add this property to hide the border overflow\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px;\n  white-space: pre-wrap;\n  /* wraps text at spaces and within words */\n  word-wrap: break-word;\n  /* breaks text within a word if necessary */\n  overflow-wrap: anywhere;\n  /* breaks text at arbitrary points when needed */\n\n  border-bottom: 1px solid #eee;\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-weight: tokens.$font-weight-semi-bold;\n  font-size: tokens.$font-size-l;\n  line-height: 1rem;\n}\n\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding: 0;\n  cursor: pointer;\n}\n\n.modal-body {\n  padding: 15px;\n}\n\n.modal-footer {\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px;\n  gap: 1em;\n}\n\n.modal-border {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  font-size: 1.5em;\n\n  &.primary {\n    background-color: tokens.$color-default-500;\n  }\n\n  &.secondary {\n    background-color: tokens.$color-gray-500;\n  }\n\n  &.danger {\n    background-color: tokens.$color-danger-500;\n  }\n\n  &.success {\n    background-color: tokens.$color-success-500;\n  }\n\n  &.warning {\n    background-color: tokens.$color-warning-500;\n  }\n}"],"names":["IfxModal","_callee","_regeneratorRuntime","wrap","_context","prev","next","this","showModal","modalOpen","emit","stop","_open","apply","arguments","key","value","_close","_asyncToGenerator","mark","_callee2","_context2","modalClose","closeOnOverlayClick","close","okButtonClick","cancelButtonClick","_this","h","class","concat","onClick","handleOverlayClick","alertColor","alertIcon","icon","caption","name","variant","handleOkButtonClick","handleCancelButtonClick"],"sourceRoot":""}