{"version":3,"file":"static/js/3619.e0f6dce1.chunk.js","mappings":"mNAQaA,EAAY,W,oLAMM,E,WACL,G,mBACS,G,SAEX,G,YACG,O,gDAGzB,SAAiBC,GAEf,GAAoD,qBAAhDA,EAAMC,cAAcC,UAAUC,cAAsC,CAEtE,IAAMC,EAAgBC,KAAKC,GAAGC,WAAWC,cAAc,gBACnDJ,EAC0C,iBAAxCJ,EAAMS,OAAOC,SAASC,cACxBN,KAAKO,WAAWC,KAAK,CAAEC,OAAQV,EAAcW,QAASC,MAAOX,KAAKW,MAAOP,OAAQJ,KAAKC,GAAGW,QAAQ,uBAC5FZ,KAAKO,WAAWC,KAAK,CAAEC,MAAOV,EAAcW,QAASC,MAAOX,KAAKW,MAAOP,OAAQJ,KAAKC,GAAGW,QAAQ,uBAClGZ,KAAKO,WAAWC,KAAK,CAAEG,MAAOX,KAAKW,O,IAE7C,CAAAE,IAAA,sBAAAF,MAGD,WAEE,GADoBX,KAAKC,GAAGW,QAAQ,iBAEhBZ,KAAKC,GAAGW,QAAQ,gBAAgBT,cAAc,cACjD,CACb,IAAMW,EAAiBd,KAAKC,GAAGW,QAAQ,gBAAgBT,cAAc,cAAcY,MACnFf,KAAKgB,cAAgBF,C,IAG1B,CAAAD,IAAA,SAAAF,MAGD,WACE,OACEM,EAAAA,EAAAA,GAAA,KAAGC,KAAMlB,KAAKmB,IAAKf,OAAQJ,KAAKI,OAAQgB,QAASpB,KAAKqB,iBAAiBC,KAAKtB,MAAOuB,MAAK,iBAAAC,OAAmBxB,KAAKgB,gBAC7GhB,KAAKyB,YAAaR,EAAAA,EAAAA,GAAA,qBAClBjB,KAAK0B,OAAQT,EAAAA,EAAAA,GAAA,YAAUS,KAAM1B,KAAK0B,QACnCT,EAAAA,EAAAA,GAAA,SAAOM,MAAM,qBAAmBN,EAAAA,EAAAA,GAAA,c,GAGrC,CAAAJ,IAAA,KAAAc,IAAA,W,0BAhDsB,G,QCRD,+2B","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown-item/dropdown-item.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown-item/dropdown-item.scss?tag=ifx-dropdown-item&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Element, State, Event, EventEmitter } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-dropdown-item',\n  styleUrl: 'dropdown-item.scss',\n  shadow: true\n})\n\nexport class DropdownItem {\n\n  @Prop() label: string;\n  @Prop() size: 's' | 'm';\n  @Prop() disabled: boolean;\n  @Prop() icon: string;\n  @Prop() checkable: boolean = false;\n  @Prop() value: string = \"\"\n  @State() checkboxColor: string = \"\";\n  @Event({ bubbles: false }) itemValues: EventEmitter<Object>;\n  @Prop() url: string = \"\"\n  @Prop() target: string = \"_self\"\n  @Element() el;\n\n  handleItemChange(event) {\n\n    if (event.currentTarget.className.toLowerCase() !== 'form-check-input') {\n\n      const checkBoxValue = this.el.shadowRoot.querySelector('ifx-checkbox');\n      if (checkBoxValue) {\n        if (event.target.nodeName.toUpperCase() === 'IFX-CHECKBOX') {\n          this.itemValues.emit({ check: !checkBoxValue.checked, value: this.value, target: this.el.closest('ifx-dropdown-item') })\n        } else this.itemValues.emit({ check: checkBoxValue.checked, value: this.value, target: this.el.closest('ifx-dropdown-item') })\n      } else this.itemValues.emit({ value: this.value })\n    }\n  }\n\n\n  componentWillRender() {\n    const ifxDropdown = this.el.closest('ifx-dropdown')\n    if (ifxDropdown) {\n      const ifxButton = this.el.closest('ifx-dropdown').querySelector('ifx-button');\n      if (ifxButton) {\n        const ifxButtonColor = this.el.closest('ifx-dropdown').querySelector('ifx-button').color;\n        this.checkboxColor = ifxButtonColor;\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <a href={this.url} target={this.target} onClick={this.handleItemChange.bind(this)} class={`dropdown-item ${this.checkboxColor}`}>\n        {this.checkable && <ifx-checkbox></ifx-checkbox>}\n        {this.icon && <ifx-icon icon={this.icon}></ifx-icon>}\n        <label class=\"form-check-label\"><slot /></label>\n      </a>\n    )\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n.dropdown-item {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  width: 100%;\n  text-align: inherit;\n  white-space: nowrap;\n  border: 0;\n  padding: 8px 16px;\n  text-decoration: none;\n  color: tokens.$color-text-black;\n\n  &.primary {\n    input[type=checkbox] {\n      accent-color: tokens.$color-default-500;\n    }\n  }\n\n  &.secondary {\n    input[type=checkbox] {\n      accent-color: tokens.$color-highlight-500;\n    }\n  }\n\n  &.success {\n    input[type=checkbox] {\n      accent-color: tokens.$color-success-500;\n    }\n  }\n\n  &.danger {\n    input[type=checkbox] {\n      accent-color: tokens.$color-danger-500;\n    }\n  }\n\n  &.warning {\n    input[type=checkbox] {\n      accent-color: tokens.$color-warning-500;\n    }\n  }\n\n\n\n  & .form-check-label {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n\n  & .form-check-input {\n    border-radius: 1px;\n  }\n\n\n\n  &:hover {\n    font-weight: 600;\n    background-color: tokens.$color-gray-200;\n\n\n    & svg {\n      color: tokens.$color-text-black;\n\n    }\n  }\n\n  &.active,\n  &:active {\n    font-weight: 600;\n    background-color: transparent;\n    color: tokens.$color-default-500;\n\n    & svg {\n      color: tokens.$color-default-500;\n      fill: none;\n    }\n  }\n}\n\n// ifx-icon:empty { \n//   display: none;\n// }"],"names":["DropdownItem","event","currentTarget","className","toLowerCase","checkBoxValue","this","el","shadowRoot","querySelector","target","nodeName","toUpperCase","itemValues","emit","check","checked","value","closest","key","ifxButtonColor","color","checkboxColor","h","href","url","onClick","handleItemChange","bind","class","concat","checkable","icon","get"],"sourceRoot":""}