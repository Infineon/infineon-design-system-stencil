{"version":3,"file":"static/js/9326.d610447c.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multiselect/multiselect.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multiselect/multiselect.scss?tag=ifx-multiselect&encapsulation=shadow"],"sourcesContent":["import { Component, Watch, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\nimport { Option } from './interfaces';\n\n@Component({\n  tag: 'ifx-multiselect',\n  styleUrl: 'multiselect.scss',\n  shadow: true\n})\n\n\nexport class Multiselect {\n\n  @Prop() options: Option[] | string;\n  @Prop() size: string = 'medium (40px)';\n  @Prop() disabled: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() errorMessage: string = \"Error\";\n  @Prop() label: string = \"\";\n  @State() persistentSelectedOptions: Option[] = [];\n  @State() listOfOptions: Option[] = [];\n  @State() dropdownOpen = false;\n  @State() dropdownFlipped = false;\n  @Prop() maxItemCount: number = 10;\n  @State() zIndex: number = 1; // default z-index value\n  static globalZIndex = 1; // This will be shared among all instances of the component.\n  // private currentIndex: number = 0; //needed for option selection using keyboard\n  // this.currentIndex = this.placeholder ? this.currentIndex = 1 : this.currentIndex = 0;\n\n\n\n  @Event() ifxSelect: EventEmitter;\n  @Event() ifxMultiselectIsOpen: EventEmitter;\n\n  @Element() el: HTMLElement;\n  dropdownElement!: HTMLElement;\n\n  @Watch('options')\n  handleOptionsChange() {\n    this.listOfOptions = typeof this.options === 'string' //passed in string form via storybook\n      ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n      : this.options.map(option => ({ ...option }));\n\n    // Update persistentSelectedOptions based on initially selected states\n    const initiallySelected = this.listOfOptions.filter(option => option.selected);\n    this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...initiallySelected];\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.positionDropdown();\n    }, 500);\n  }\n\n\n  componentWillLoad() {\n    this.handleOptionsChange();\n  }\n\n  handleOptionClick(option: Option) {\n    console.log(\"option click\");\n\n    // 1. Prevent action if disabled\n    if (this.persistentSelectedOptions.length >= this.maxItemCount && !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value)) {\n      console.error('Max item count reached');\n      return;\n    }\n\n    // 2. Determine if the current option was previously selected\n    const wasSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n\n    // 3. Handle parent-child relationships\n    if (option.children && option.children.length > 0) {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value && !option.children.some(child => child.value === selectedOption.value));\n      } else {\n        this.persistentSelectedOptions = [...this.persistentSelectedOptions, option, ...option.children];\n      }\n    } else {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value);\n      } else {\n        this.persistentSelectedOptions.push(option);\n      }\n\n      const parentOption = this.listOfOptions.find(opt => opt.children && opt.children.some(child => child.value === option.value));\n\n      if (parentOption) {\n        const allChildrenSelected = parentOption.children.every(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n        const someChildrenSelected = parentOption.children.some(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n\n        if (allChildrenSelected) {\n          if (!this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parentOption.value)) {\n            this.persistentSelectedOptions.push(parentOption);\n          }\n        } else if (someChildrenSelected) {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        } else {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        }\n      }\n    }\n\n    // 4. Reflect changes in the listOfOptions state\n    this.listOfOptions = this.listOfOptions.map(opt => {\n      if (opt.value === option.value) {\n        return { ...opt, selected: !wasSelected };\n      } else if (opt.children) {\n        const isParentSelected = this.persistentSelectedOptions.includes(opt);\n        opt.children = opt.children.map(child => {\n          if (child.value === option.value || isParentSelected) {\n            return { ...child, selected: true };\n          }\n          return child;\n        });\n        return { ...opt, children: opt.children };\n      }\n      return opt;\n    });\n\n    // 5. Update the selected status in persistentSelectedOptions\n    this.persistentSelectedOptions = this.persistentSelectedOptions.map(pOpt => {\n      const matchingOption = this.listOfOptions.find(loOpt => loOpt.value === pOpt.value) || this.listOfOptions.flatMap(loOpt => loOpt.children || []).find(child => child.value === pOpt.value);\n      if (matchingOption) {\n        return { ...pOpt, selected: matchingOption.selected };\n      }\n      return pOpt;\n    });\n\n    // 6. Emit persistentSelectedOptions without duplicated children\n    const emittedOptions = this.persistentSelectedOptions.map(pOpt => {\n      // If this option is a child, check if its parent is in persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        // If it's a child and its parent is also selected, ensure it's set to selected: true\n        return { ...pOpt, selected: true };\n      }\n      return pOpt;\n    }).filter(pOpt => {\n      // After ensuring the children are selected, now filter out the children whose parents are also in the persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        return false;  // Exclude this child since its parent is already selected\n      }\n      return true;\n    });\n    this.ifxSelect.emit(emittedOptions);\n  }\n\n  handleDocumentClick = (event: Event) => {\n    const path = event.composedPath();\n    if (!path.includes(this.dropdownElement)) {\n      this.dropdownOpen = false;\n      document.removeEventListener('click', this.handleDocumentClick);\n\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }\n  }\n\n  getSizeClass() {\n    return `${this.size}` === \"small (36px)\"\n      ? \"small-select\"\n      : \"medium-select\";\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    setTimeout(() => {\n      if (this.dropdownOpen) {\n        document.addEventListener('click', this.handleDocumentClick);\n      }\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }, 0);\n    this.zIndex = Multiselect.globalZIndex++;\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return; // If it's disabled, don't do anything.\n\n    if (event.code === 'Enter' || event.code === 'Space') {\n      this.toggleDropdown();\n\n      if (event.code === 'Space') {\n        event.preventDefault(); // Prevent the default behavior (page scrolling) on Space key.\n      }\n    }\n  }\n\n  handleWrapperClick(event: MouseEvent) {\n    console.log(\"wrapper clicked\")\n    // This is your existing logic for positioning the dropdown\n    this.positionDropdown();\n\n    // Check if the event target is the wrapper itself and not a child element.\n    if (event.currentTarget === event.target) {\n      this.toggleDropdown();\n    }\n  }\n\n\n  clearSelection() {\n    this.persistentSelectedOptions = [];\n    this.listOfOptions = this.listOfOptions.map(option => ({ ...option, selected: false }));\n    this.ifxSelect.emit(this.persistentSelectedOptions); // if you want to emit empty selection after clearing\n  }\n\n  positionDropdown() {\n    const dropdown = this.el.shadowRoot.querySelector('.dropdown-menu');\n    const wrapper = this.el.shadowRoot.querySelector('.ifx-multiselect-wrapper');\n\n    if (!dropdown || !wrapper) return;\n\n    const dropdownRect = dropdown.getBoundingClientRect();\n    const wrapperRect = wrapper.getBoundingClientRect();\n\n    const spaceAbove = wrapperRect.top;\n    const spaceBelow = window.innerHeight - wrapperRect.bottom;\n\n    // Remove the is-flipped class initially\n    wrapper.classList.remove('is-flipped');\n\n    // If there's more space above than below the trigger and the dropdown doesn't fit below\n    if (spaceAbove > spaceBelow && dropdownRect.height > spaceBelow) {\n      wrapper.classList.add('is-flipped');\n    }\n  }\n\n  // // The main key handler function\n  // handleKeyDown(event: KeyboardEvent) {\n  //   if (this.ifxDisabled) return;\n\n  //   const options = this.root.querySelectorAll('.choices__item');\n\n  //   const dropdown = this.root.querySelector('.choices');\n  //   const isOpen = dropdown.getAttribute('aria-expanded') === 'true';\n\n  //   switch (event.code) {\n  //     case 'Enter':\n  //       if (isOpen) {\n  //         this.selectItem(options);\n  //         // this.toggleDropdown();\n  //       } else {\n  //         this.toggleDropdown();\n  //       }\n  //       break;\n  //     case 'Space':\n  //       this.toggleDropdown();\n  //       if (event.code === 'Space') {\n  //         event.preventDefault(); // Prevents scrolling\n  //       }\n  //       break;\n  //     case 'ArrowDown':\n  //       this.handleArrowDown(options);\n  //       if (isOpen) {\n  //         this.updateHighlightedOption(options);\n  //       }\n  //       break;\n  //     case 'ArrowUp':\n  //       this.handleArrowUp(options);\n  //       if (isOpen) {\n  //         this.updateHighlightedOption(options);\n  //       }\n  //       break;\n  //   }\n\n  // If dropdown is open, update the display based on the state.\n  // const dropdown = this.root.querySelector('.choices');\n  // const isOpen = dropdown.getAttribute('aria-expanded') === 'true';\n  // if (isOpen) {\n  //   this.updateHighlightedOption(options);\n  // }\n  // }\n\n  // Helper function to update highlighted option based on currentIndex\n  // private updateHighlightedOption(options: NodeList) {\n  //   // Clear all highlights\n  //   options.forEach((option: Element) => option.classList.remove('is-highlighted'));\n\n  //   // Apply highlight to the current option\n  //   if (this.currentIndex >= 0 && this.currentIndex < options.length) {\n  //     (options[this.currentIndex] as Element).classList.add('is-highlighted');\n  //   }\n  // }\n\n  // Helper function to handle arrow down navigation\n  // private handleArrowDown(options: NodeList) {\n  //   if (this.currentIndex < options.length - 1) {\n  //     this.currentIndex++;\n  //   } else {\n  //     this.currentIndex = 0; // Wrap to the beginning.\n  //   }\n  // }\n\n  // // Helper function to handle arrow up navigation\n  // private handleArrowUp(options: NodeList) {\n  //   if (this.currentIndex > 0) {\n  //     this.currentIndex--;\n  //   } else {\n  //     this.currentIndex = options.length - 1; // Wrap to the end.\n  //   }\n  // }\n\n  // private selectItem(options: NodeList) {\n  //   // If there's a previous selection, remove its \"selected\" class\n  //   const previouslySelected = this.root.querySelector('.choices__item.selected');\n  //   if (previouslySelected) {\n  //     previouslySelected.classList.remove('selected');\n  //   }\n\n  //   // Mark the current item as selected\n  //   const currentOption = options[this.currentIndex] as Element;\n  //   currentOption.classList.add('selected');\n  //   // this.value = currentOption.getAttribute('data-value');\n\n  //   // Update the internal state\n  //   // const selectElement = this.root.querySelector('select');\n  //   this.value = currentOption.getAttribute('data-value');\n  //   this.choice.setChoiceByValue(this.value);\n  //   this.handleChange();\n  //   // this.toggleDropdown();\n\n\n\n\n  renderOption(option: Option, index: number) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`; // Generate a unique ID using the index\n    const isIndeterminate = this.isOptionIndeterminate(option);\n\n    return (\n      <div>\n        <div class={`option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n          onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n          tabindex=\"0\"\n        >\n          <ifx-checkbox id={uniqueId} value={isSelected} indeterminate={isIndeterminate} disabled={disableCheckbox}></ifx-checkbox>\n          <label htmlFor={uniqueId}>{option.label}</label>\n        </div>\n        {option.children && option.children.map((child, childIndex) => this.renderSubOption(child, `${index}-${childIndex}`))}\n      </div>\n    );\n  }\n\n\n  isOptionIndeterminate(option: Option): boolean {\n    if (!option.children) return false;\n\n    const selectedChildren = option.children.filter(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    ).length;\n\n    return selectedChildren > 0 && selectedChildren < option.children.length;\n  }\n\n\n  renderSubOption(option: Option, index: string) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const uniqueId = `checkbox-${option.value}-${index}`;\n\n    return (\n      <div class={`option sub-option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n        onClick={() => this.handleOptionClick(option)}\n        tabindex=\"0\">\n        <ifx-checkbox id={uniqueId} value={isSelected}></ifx-checkbox>\n        <label htmlFor={uniqueId}>{option.label}</label>\n      </div>\n    );\n  }\n\n  render() {\n    // Create a label for the selected options\n    const selectedOptionsLabels = this.persistentSelectedOptions.map(option => option.label).join(', ');\n\n    return (\n      <div class={`ifx-multiselect-container ${this.getSizeClass()}`} ref={el => this.dropdownElement = el as HTMLElement}>\n        {\n          this.label ?\n            <div class=\"ifx-label-wrapper\">\n              <span>{this.label}</span>\n            </div> : null\n        }\n        <div class={`ifx-multiselect-wrapper \n        ${this.getSizeClass()} \n        ${this.dropdownOpen ? 'active' : ''} \n        ${this.dropdownFlipped ? 'is-flipped' : ''}\n        ${this.error ? 'error' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n          tabindex=\"0\"\n          onClick={(event) => this.handleWrapperClick(event)}\n          onKeyDown={(event) => this.handleKeyDown(event)} >\n          <div class=\"ifx-multiselect-input\" onClick={this.disabled ? undefined : () => this.toggleDropdown()} >\n            {this.persistentSelectedOptions.length > 0 ? selectedOptionsLabels : 'Placeholder'}\n          </div>\n          {this.dropdownOpen && (\n            <div class=\"ifx-multiselect-dropdown-menu\" style={{ '--dynamic-z-index': this.zIndex.toString() }}>\n              {this.listOfOptions.map((option, index) => this.renderOption(option, index))}\n            </div>\n          )}\n          <div class=\"ifx-multiselect-icon-container\">\n\n            {/* Clear Button - will show only if there's a selection */}\n            {this.persistentSelectedOptions.length > 0 && (\n              <div class=\"ifx-clear-button\" onClick={() => this.clearSelection()}>\n                <ifx-icon\n                  key='icon-clear'\n                  icon='deletex16'></ifx-icon>\n              </div>\n            )}\n            <div class=\"icon-wrapper-up\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-up'\n                icon='chevronup-16'></ifx-icon>\n            </div>\n            <div class=\"icon-wrapper-down\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-down'\n                icon='chevron-down-16'></ifx-icon>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.error ?\n            <div class=\"ifx-error-message-wrapper\">\n              <span>{this.errorMessage}</span>\n            </div> : null\n        }\n      </div>\n    );\n  }\n\n}\n",".ifx-multiselect-container {\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  &.small-select {\n    height: 36px;\n  }\n\n  &.medium-select {\n    height: 40px;\n  }\n\n\n\n  .ifx-label-wrapper {\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  .ifx-error-message-wrapper {\n    color: #CD002F;\n    font-size: 12px;\n    line-height: 16px;\n  }\n\n  .ifx-multiselect-wrapper {\n    box-sizing: border-box;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid #8D8786;\n    width: 100%;\n\n    &.small-select {\n      line-height: 20px;\n      padding: 8px 12px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      padding: 8px 16px;\n      font-size: 16px;\n    }\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus-visible:not(.active):not(:active) {\n      &::before {\n        content: '';\n        position: absolute;\n        width: calc(100% + 4px);\n        height: calc(100% + 4px);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 2px solid #0A8276;\n      }\n    }\n\n    &.disabled {\n      background: #EEEDED;\n      color: #575352;\n      border-color: #575352;\n      cursor: not-allowed;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    &.error {\n      border-color: #CD002F;\n    }\n\n    &:hover:not(.focus, :focus) {\n      border-color: #8D8786;\n    }\n\n    &.active {\n      border: 2px solid #0A8276 !important; // Active border color\n\n      & .icon-wrapper-up {\n        display: block;\n      }\n\n      & .icon-wrapper-down {\n        display: none\n      }\n    }\n\n\n    & .icon-wrapper-up {\n      display: none;\n    }\n\n    & .icon-wrapper-down {\n      display: block;\n    }\n\n    &.is-flipped {\n      .dropdown-menu {\n        top: auto;\n        bottom: 100%;\n      }\n    }\n\n  }\n\n  .ifx-multiselect-input {\n    flex-grow: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n\n  .ifx-multiselect-icon-container {\n    margin-left: auto;\n    align-items: center;\n    display: flex;\n  }\n\n\n  .ifx-clear-button {\n    margin-right: 10px; // Space between clear button and icons\n  }\n\n  .ifx-multiselect-dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    border: 1px solid #ddd;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    max-height: 300px;\n    /* Adjust based on your design */\n    overflow-y: auto;\n    z-index: var(--dynamic-z-index, 1); // Fallback to 1\n\n  }\n\n  .option {\n    position: relative;\n    padding: 8px 16px;\n    gap: 8px;\n    align-items: center;\n    display: flex;\n    font-style: normal;\n    font-weight: 400;\n\n    &.small-select {\n      line-height: 20px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      font-size: 16px;\n    }\n\n    &:hover {\n      background-color: #EEEDED;\n    }\n\n    &:focus {\n      background-color: #BFBBBB;\n      outline: none;\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n\n    }\n\n    &.selected {\n      // color: #0A8276;\n    }\n\n    &.sub-option {\n      padding-left: 30px;\n      /* or however much indentation you want */\n    }\n  }\n\n\n\n}"],"names":["Multiselect","handleDocumentClick","event","composedPath","includes","_this","dropdownElement","dropdownOpen","document","removeEventListener","ifxMultiselectIsOpen","emit","this","listOfOptions","options","JSON","parse","map","option","value","label","children","selected","Object","assign","initiallySelected","filter","persistentSelectedOptions","concat","_toConsumableArray","key","_this2","setTimeout","positionDropdown","handleOptionsChange","_this3","console","log","length","maxItemCount","some","selectedOption","error","wasSelected","child","push","parentOption","find","opt","allChildrenSelected","every","isParentSelected","pOpt","matchingOption","loOpt","flatMap","emittedOptions","parent","ifxSelect","size","_this4","addEventListener","zIndex","globalZIndex","disabled","code","toggleDropdown","preventDefault","currentTarget","target","dropdown","el","shadowRoot","querySelector","wrapper","dropdownRect","getBoundingClientRect","wrapperRect","spaceAbove","top","spaceBelow","window","innerHeight","bottom","classList","remove","height","add","index","_this5","isSelected","disableCheckbox","uniqueId","isIndeterminate","isOptionIndeterminate","h","class","getSizeClass","onClick","handleOptionClick","tabindex","id","indeterminate","htmlFor","childIndex","renderSubOption","_this6","selectedChildren","persistentOption","_this7","_this8","selectedOptionsLabels","join","ref","dropdownFlipped","handleWrapperClick","onKeyDown","handleKeyDown","undefined","style","toString","renderOption","clearSelection","icon","errorMessage","get"],"sourceRoot":""}