{"version":3,"file":"static/js/5428.b507daac.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multiselect/multiselect.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/multiselect/multiselect.scss?tag=ifx-multiselect&encapsulation=shadow"],"sourcesContent":["import { Component, Watch, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\nimport { Option } from './interfaces';\n\n@Component({\n  tag: 'ifx-multiselect',\n  styleUrl: 'multiselect.scss',\n  shadow: true\n})\n\n\nexport class Multiselect {\n\n  @Prop() options: any[] | string;\n  @Prop() size: string = 'medium (40px)';\n  @Prop() disabled: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() errorMessage: string = \"Error\";\n  @Prop() label: string = \"\";\n  @State() persistentSelectedOptions: Option[] = [];\n  @State() listOfOptions: Option[] = [];\n  @State() dropdownOpen = false;\n  @State() dropdownFlipped: boolean;\n  @Prop() maxItemCount: number = 10;\n  @State() zIndex: number = 1; // default z-index value\n  static globalZIndex = 1; // This will be shared among all instances of the component.\n  private currentIndex: number = 0; //needed for option selection using keyboard\n  // this.currentIndex = this.placeholder ? this.currentIndex = 1 : this.currentIndex = 0;\n\n\n\n  @Event() ifxSelect: EventEmitter;\n  @Event() ifxMultiselectIsOpen: EventEmitter;\n\n  @Element() el: HTMLElement;\n  dropdownElement!: HTMLElement;\n\n\n\n  @Watch('options')\n  handleOptionsChange() {\n    // this.listOfOptions = (typeof this.options === 'string' && (this.options.startsWith('{') || this.options.startsWith('[')))  //passed in string form via storybook\n    //   ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n    //   : this.options;\n\n\n    if (typeof this.options === 'string') {\n      try {\n        this.listOfOptions = JSON.parse(this.options);\n      } catch (err) {\n        console.error('Failed to parse options:', err);\n      }\n    } else if (Array.isArray(this.options) || typeof this.options === 'object') {\n      this.listOfOptions = this.options;\n    } else {\n      console.error('Unexpected value for options:', this.options);\n    }\n\n    // Update persistentSelectedOptions based on initially selected states\n    const initiallySelected = this.listOfOptions.filter(option => option.selected);\n    this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...initiallySelected];\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.positionDropdown();\n    }, 500);\n  }\n\n\n  componentWillLoad() {\n    this.handleOptionsChange();\n  }\n\n  handleOptionClick(option: Option) {\n\n    // 1. Prevent action if disabled\n    if (this.persistentSelectedOptions.length >= this.maxItemCount && !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value)) {\n      console.error('Max item count reached');\n      return;\n    }\n\n    // 2. Determine if the current option was previously selected\n    const wasSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n\n    // 3. Handle parent-child relationships\n    if (option.children && option.children.length > 0) {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value && !option.children.some(child => child.value === selectedOption.value));\n      } else {\n        this.persistentSelectedOptions = [...this.persistentSelectedOptions, option, ...option.children];\n      }\n    } else {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value);\n      } else {\n        this.persistentSelectedOptions.push(option);\n      }\n\n      const parentOption = this.listOfOptions.find(opt => opt.children && opt.children.some(child => child.value === option.value));\n\n      if (parentOption) {\n        const allChildrenSelected = parentOption.children.every(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n        const someChildrenSelected = parentOption.children.some(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n\n        if (allChildrenSelected) {\n          if (!this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parentOption.value)) {\n            this.persistentSelectedOptions.push(parentOption);\n          }\n        } else if (someChildrenSelected) {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        } else {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        }\n      }\n    }\n\n    // 4. Reflect changes in the listOfOptions state\n    this.listOfOptions = this.listOfOptions.map(opt => {\n      if (opt.value === option.value) {\n        return { ...opt, selected: !wasSelected };\n      } else if (opt.children) {\n        const isParentSelected = this.persistentSelectedOptions.includes(opt);\n        opt.children = opt.children.map(child => {\n          if (child.value === option.value || isParentSelected) {\n            return { ...child, selected: true };\n          }\n          return child;\n        });\n        return { ...opt, children: opt.children };\n      }\n      return opt;\n    });\n\n    // 5. Update the selected status in persistentSelectedOptions\n    this.persistentSelectedOptions = this.persistentSelectedOptions.map(pOpt => {\n      const matchingOption = this.listOfOptions.find(loOpt => loOpt.value === pOpt.value) || this.listOfOptions.flatMap(loOpt => loOpt.children || []).find(child => child.value === pOpt.value);\n      if (matchingOption) {\n        return { ...pOpt, selected: matchingOption.selected };\n      }\n      return pOpt;\n    });\n\n    // 6. Emit persistentSelectedOptions without duplicated children\n    const emittedOptions = this.persistentSelectedOptions.map(pOpt => {\n      // If this option is a child, check if its parent is in persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        // If it's a child and its parent is also selected, ensure it's set to selected: true\n        return { ...pOpt, selected: true };\n      }\n      return pOpt;\n    }).filter(pOpt => {\n      // After ensuring the children are selected, now filter out the children whose parents are also in the persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        return false;  // Exclude this child since its parent is already selected\n      }\n      return true;\n    });\n    this.ifxSelect.emit(emittedOptions);\n  }\n\n  handleDocumentClick = (event: Event) => {\n    const path = event.composedPath();\n    if (!path.includes(this.dropdownElement)) {\n      this.dropdownOpen = false;\n      document.removeEventListener('click', this.handleDocumentClick);\n\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }\n  }\n\n  getSizeClass() {\n    return `${this.size}` === \"small (36px)\"\n      ? \"small-select\"\n      : \"medium-select\";\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    setTimeout(() => {\n      if (this.dropdownOpen) {\n        document.addEventListener('click', this.handleDocumentClick);\n      }\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }, 0);\n    this.zIndex = Multiselect.globalZIndex++;\n  }\n\n\n  waitForElement(querySelectorFunc: Function, callback: Function, maxTries = 50) {\n    let tries = 0;\n    function request() {\n      requestAnimationFrame(() => {\n        const elements = querySelectorFunc();\n        if (elements.length > 0 || tries > maxTries) {\n          callback(elements);\n        } else {\n          tries++;\n          request();\n        }\n      });\n    }\n    request();\n  }\n\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return; // If it's disabled, don't do anything.\n\n    const options = this.dropdownElement.querySelectorAll('.option');\n\n    switch (event.code) {\n      case 'Enter' || 'Space':\n        if (this.dropdownOpen) {\n          this.selectItem(options);\n        } else {\n          this.toggleDropdown();\n          // Wait a bit for the dropdown to finish rendering\n          this.waitForElement(() => {\n            return this.dropdownElement.querySelectorAll('.option');\n          }, (options) => {\n            this.updateHighlightedOption(options);\n          });\n        }\n        break;\n      case 'ArrowDown':\n        this.handleArrowDown(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n      case 'ArrowUp':\n        this.handleArrowUp(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n    }\n  }\n\n  handleWrapperClick(event: MouseEvent) {\n    // This is your existing logic for positioning the dropdown\n    this.positionDropdown();\n\n    // Check if the event target is the wrapper itself and not a child element.\n    if (event.currentTarget === event.target) {\n      this.toggleDropdown();\n    }\n  }\n\n\n  clearSelection() {\n    this.persistentSelectedOptions = [];\n    this.listOfOptions = this.listOfOptions.map(option => ({ ...option, selected: false }));\n    this.ifxSelect.emit(this.persistentSelectedOptions); // if you want to emit empty selection after clearing\n  }\n\n  positionDropdown() {\n    const wrapperRect = this.el.shadowRoot.querySelector('.ifx-multiselect-wrapper')?.getBoundingClientRect();\n\n    const spaceBelow = window.innerHeight - wrapperRect.bottom;\n    const spaceAbove = wrapperRect.top;\n\n    // If there's more space above than below the trigger and the dropdown doesn't fit below\n    if ((spaceAbove > spaceBelow && wrapperRect.height > spaceBelow) || (wrapperRect.bottom > window.innerHeight)) {\n      this.dropdownFlipped = true;\n    } else {\n      this.dropdownFlipped = false;\n    }\n  }\n\n\n\n  // Helper function to update highlighted option based on currentIndex\n  private updateHighlightedOption(options: NodeList) {\n    // Clear all highlights\n    options.forEach((option: Element) => option.classList.remove('is-highlighted'));\n\n    // Apply highlight to the current option\n    if (this.currentIndex >= 0 && this.currentIndex < options.length) {\n      (options[this.currentIndex] as Element).classList.add('is-highlighted');\n    }\n  }\n\n  // Helper function to handle arrow down navigation\n  private handleArrowDown(options: NodeList) {\n    if (this.currentIndex < options.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0; // Wrap to the beginning.\n    }\n  }\n\n  // // Helper function to handle arrow up navigation\n  private handleArrowUp(options: NodeList) {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = options.length - 1; // Wrap to the end.\n    }\n  }\n\n  private selectItem(options: NodeList) {\n    // If there's a previous selection, remove its \"selected\" class\n    const previouslySelected = this.dropdownElement.querySelector('.option.selected');\n    if (previouslySelected) {\n      previouslySelected.classList.remove('selected');\n    }\n\n    // Mark the current item as selected\n    const currentOptionElement = options[this.currentIndex] as Element;\n    currentOptionElement.classList.add('selected');\n\n    const currentOptionValue = currentOptionElement.getAttribute('data-value');\n    const currentListOfOptions = typeof this.options === 'string' //passed in string form via storybook\n      ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n      : this.options.map(option => ({ ...option }));\n\n    const currentOption = this.findInOptions(currentListOfOptions, currentOptionValue); // get the option object based on the currently selected value and the options array\n    this.handleOptionClick(currentOption);\n  }\n\n\n\n\n  renderOption(option: Option, index: number) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`; // Generate a unique ID using the index\n    const isIndeterminate = this.isOptionIndeterminate(option);\n\n    return (\n      <div>\n        <div class={`option ${isSelected ? 'selected' : ''} \n        ${this.getSizeClass()}`}\n          data-value={option.value}\n          onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n          tabindex=\"0\"\n          role={`${option.children}?.length > 0 ? \"option\" : \"treeitem\"`}\n        >\n          <ifx-checkbox id={uniqueId} value={isSelected} indeterminate={isIndeterminate} disabled={disableCheckbox}></ifx-checkbox>\n          <label htmlFor={uniqueId}>{option.label}</label>\n        </div>\n        {option.children && option.children.map((child, childIndex) => this.renderSubOption(child, `${index}-${childIndex}`))}\n      </div>\n    );\n  }\n\n\n  isOptionIndeterminate(option: Option): boolean {\n    if (!option.children) return false;\n\n    const selectedChildren = option.children.filter(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    ).length;\n\n    return selectedChildren > 0 && selectedChildren < option.children.length;\n  }\n\n\n  findInOptions(options: Option[], searchTerm: string): Option | null {\n    for (const option of options) {\n      if (option.value === searchTerm) {\n        return option;\n      }\n      if (option.children) {\n        const foundInChildren = this.findInOptions(option.children, searchTerm);\n        if (foundInChildren) {\n          return foundInChildren;\n        }\n      }\n    }\n    return null;\n  }\n\n\n  renderSubOption(option: Option, index: string) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const uniqueId = `checkbox-${option.value}-${index}`;\n\n    return (\n      <div class={`option sub-option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n        data-value={option.value}\n        role={`${option.children}?.length > 0 ? \"option\" : \"treeitem\"`}\n        onClick={() => this.handleOptionClick(option)}\n        tabindex=\"0\">\n        <ifx-checkbox id={uniqueId} value={isSelected}></ifx-checkbox>\n        <label htmlFor={uniqueId}>{option.label}</label>\n      </div>\n    );\n  }\n\n  render() {\n    console.log('Rendering with dropdownFlipped:', this.dropdownFlipped);\n\n    // Create a label for the selected options\n    const selectedOptionsLabels = this.persistentSelectedOptions.map(option => option.label).join(', ');\n\n    return (\n      <div class={`ifx-multiselect-container ${this.getSizeClass()}`} ref={el => this.dropdownElement = el as HTMLElement}>\n        {\n          this.label ?\n            <div class=\"ifx-label-wrapper\">\n              <span>{this.label}</span>\n            </div> : null\n        }\n        <div class={`ifx-multiselect-wrapper \n        ${this.getSizeClass()} \n        ${this.dropdownOpen ? 'active' : ''} \n        ${this.dropdownFlipped ? 'is-flipped' : ''}\n        ${this.error ? 'error' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n          tabindex=\"0\"\n          onClick={(event) => this.handleWrapperClick(event)}\n          onKeyDown={(event) => this.handleKeyDown(event)} >\n          <div class=\"ifx-multiselect-input\"\n            onClick={this.disabled ? undefined : () => this.toggleDropdown()}\n          >\n            {this.persistentSelectedOptions.length > 0 ? selectedOptionsLabels : 'Placeholder'}\n          </div>\n          {this.dropdownOpen && (\n            <div class=\"ifx-multiselect-dropdown-menu\" style={{ '--dynamic-z-index': this.zIndex.toString() }}>\n              {this.listOfOptions.map((option, index) => this.renderOption(option, index))}\n            </div>\n          )}\n          <div class=\"ifx-multiselect-icon-container\">\n\n            {/* Clear Button - will show only if there's a selection */}\n            {this.persistentSelectedOptions.length > 0 && (\n              <div class=\"ifx-clear-button\" onClick={() => this.clearSelection()}>\n                <ifx-icon\n                  key='icon-clear'\n                  icon='delete-16'></ifx-icon>\n              </div>\n            )}\n            <div class=\"icon-wrapper-up\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-up'\n                icon='chevronup-16'></ifx-icon>\n            </div>\n            <div class=\"icon-wrapper-down\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-down'\n                icon='chevron-down-16'></ifx-icon>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.error ?\n            <div class=\"ifx-error-message-wrapper\">\n              <span>{this.errorMessage}</span>\n            </div> : null\n        }\n      </div>\n    );\n  }\n\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}",".ifx-multiselect-container {\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  &.small-select {\n    height: 36px;\n  }\n\n  &.medium-select {\n    height: 40px;\n  }\n\n\n\n  .ifx-label-wrapper {\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  .ifx-error-message-wrapper {\n    color: #CD002F;\n    font-size: 12px;\n    line-height: 16px;\n  }\n\n  .ifx-multiselect-wrapper {\n    box-sizing: border-box;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid #8D8786;\n    width: 100%;\n\n    &.small-select {\n      line-height: 20px;\n      padding: 8px 12px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      padding: 8px 16px;\n      font-size: 16px;\n    }\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus-visible:not(.active):not(:active) {\n      &::before {\n        content: '';\n        position: absolute;\n        width: calc(100% + 4px);\n        height: calc(100% + 4px);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 2px solid #0A8276;\n      }\n    }\n\n    &.disabled {\n      background: #EEEDED;\n      color: #575352;\n      border-color: #575352;\n      cursor: not-allowed;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    &.error {\n      border-color: #CD002F;\n    }\n\n    &:hover:not(.focus, :focus) {\n      border-color: #8D8786;\n    }\n\n    &.active {\n      border: 2px solid #0A8276 !important; // Active border color\n\n      & .icon-wrapper-up {\n        display: block;\n      }\n\n      & .icon-wrapper-down {\n        display: none\n      }\n    }\n\n\n    & .icon-wrapper-up {\n      display: none;\n    }\n\n    & .icon-wrapper-down {\n      display: block;\n    }\n\n    &.is-flipped {\n      .ifx-multiselect-dropdown-menu {\n        top: auto;\n        bottom: 100%;\n      }\n    }\n  }\n\n  .ifx-multiselect-input {\n    flex-grow: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n\n  .ifx-multiselect-icon-container {\n    margin-left: auto;\n    align-items: center;\n    display: flex;\n  }\n\n\n  .ifx-clear-button {\n    margin-right: 10px; // Space between clear button and icons\n  }\n\n  .ifx-multiselect-dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    border: 1px solid #ddd;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    max-height: 300px;\n    /* Adjust based on your design */\n    overflow-y: auto;\n    z-index: var(--dynamic-z-index, 1); // Fallback to 1\n\n  }\n\n  .option {\n    position: relative;\n    padding: 8px 16px;\n    gap: 8px;\n    align-items: center;\n    display: flex;\n    font-style: normal;\n    font-weight: 400;\n\n    &.small-select {\n      line-height: 20px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      font-size: 16px;\n    }\n\n    &:hover {\n      background-color: #EEEDED;\n    }\n\n    &:focus {\n      background-color: #BFBBBB;\n      outline: none;\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n\n    }\n\n    &.is-highlighted {\n      background-color: #EEEDED;\n      ;\n    }\n\n    &.selected {\n      // color: #0A8276;\n    }\n\n    &.sub-option {\n      padding-left: 30px;\n      /* or however much indentation you want */\n    }\n  }\n\n\n\n}"],"names":["Multiselect","currentIndex","handleDocumentClick","event","composedPath","includes","_this","dropdownElement","dropdownOpen","document","removeEventListener","ifxMultiselectIsOpen","emit","this","options","listOfOptions","JSON","parse","err","console","error","Array","isArray","initiallySelected","filter","option","selected","persistentSelectedOptions","concat","_toConsumableArray","key","value","_this2","setTimeout","positionDropdown","handleOptionsChange","_this3","length","maxItemCount","some","selectedOption","wasSelected","children","child","push","parentOption","find","opt","allChildrenSelected","every","map","Object","assign","isParentSelected","pOpt","matchingOption","loOpt","flatMap","emittedOptions","parent","ifxSelect","size","_this4","addEventListener","zIndex","globalZIndex","querySelectorFunc","callback","maxTries","arguments","undefined","tries","request","requestAnimationFrame","elements","_this5","disabled","querySelectorAll","code","selectItem","toggleDropdown","waitForElement","updateHighlightedOption","handleArrowDown","handleArrowUp","currentTarget","target","wrapperRect","_a","el","shadowRoot","querySelector","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","top","height","dropdownFlipped","forEach","classList","remove","add","previouslySelected","currentOptionElement","currentOptionValue","getAttribute","currentListOfOptions","label","currentOption","findInOptions","handleOptionClick","index","_this6","isSelected","disableCheckbox","uniqueId","isIndeterminate","isOptionIndeterminate","h","class","getSizeClass","onClick","tabindex","role","id","indeterminate","htmlFor","childIndex","renderSubOption","_this7","selectedChildren","persistentOption","searchTerm","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","foundInChildren","_this8","_this9","log","selectedOptionsLabels","join","ref","handleWrapperClick","onKeyDown","handleKeyDown","style","toString","renderOption","clearSelection","icon","errorMessage","get"],"sourceRoot":""}