{"version":3,"file":"static/js/4867.99e99c73.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx"],"sourcesContent":["//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.tabs {\n  display: flex;\n  font-family: tokens.$ifxFontFamilyBody;\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$ifxFontWeightSemibold;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tabs.vertical .tab-content {\n  padding-top: 0px;\n  padding-left: 32px;\n}\n\n\n.tab-item.active {\n  color: tokens.$ifxColorOcean500;\n}\n\n.tab-item.disabled {\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n  color: tokens.$ifxColorEngineering300;\n  pointer-events: none;\n}\n\n.tab-item:not(:disabled, .disabled) {\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    color: tokens.$ifxColorOcean500;\n  }\n}\n\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n\n.tab-content {\n  padding-top: 24px;\n  padding-left: 0px;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: tokens.$ifxFontSizeS;\n}","//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Watch, Event, EventEmitter, Method } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\n\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n  // @Prop() tabs: string[] = [];\n  @Prop() tabs: { header: string, disabled?: boolean }[] = [];\n  @Prop() orientation: string = \"\"\n  @State() internalOrientation: string;\n  @Prop() activeTabIndex: number = 0;\n  @State() internalPrevActiveTabIndex: number = 0;\n  @State() internalActiveTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() tabTitles: string[] = [];\n  @State() disabledTabs: string[] = [];\n  @State() tabObjects: any[] = [];\n  @Event() ifxTabIndex: EventEmitter;\n\n\n  @Watch('activeTabIndex')\n  onActiveTabIndexChange(newIndex: number, oldIndex: number) {\n    // console.log(`watching activeTabIndex - change from ${oldIndex} to ${newIndex}`);\n    this.internalPrevActiveTabIndex = oldIndex;\n    this.internalActiveTabIndex = newIndex;\n    this.activeTabIndex = this.internalActiveTabIndex;\n  }\n\n\n  // changing tab\n  @Method()\n  async setActiveTab(index: number) {\n    const prevActiveTab = this.activeTabIndex;\n    const nextActiveTab = index;\n\n    if (this.tabObjects[nextActiveTab]?.disabled) {\n      // console.log(\"current tab is disabled, stay on previous tab: \", prevActiveTab);\n\n      // Reset to previously active tab\n      if (!this.tabObjects[prevActiveTab]?.disabled) {\n        this.internalActiveTabIndex = prevActiveTab;\n        this.activeTabIndex = prevActiveTab;\n        return;\n      }\n    }\n\n    if (nextActiveTab < 0 || nextActiveTab >= this.tabHeaderRefs.length) {\n      return;\n    } else {\n      this.ifxTabIndex.emit({ previousTab: prevActiveTab, currentTab: nextActiveTab });\n      this.internalActiveTabIndex = nextActiveTab;\n      this.activeTabIndex = nextActiveTab;\n    }\n  }\n  // Helper method to emit events\n  emitEvent(element: HTMLElement, eventName: string) {\n    const event = new CustomEvent(eventName, {\n      bubbles: true,\n      composed: true,\n    });\n    element.dispatchEvent(event);\n  }\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.internalActiveTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n  // @Watch('orientation') //not firing\n  // onOrientationChange() {\n  //   this.reRenderBorder()\n  // }\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    // console.log(\"slot change \")\n    this.tabObjects = Array.from(tabs).map((tab) => {\n      return {\n        header: tab?.header === null ? tab?.getAttribute('header') !== null : tab.header,\n        disabled: tab?.disabled === true // (tab.getAttribute('disabled') === 'true')\n      }\n    });\n\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentWillLoad() {\n    this.setDefaultOrientation()\n    this.onSlotChange();\n  }\n\n  componentDidLoad() {\n    this.reRenderBorder()\n  }\n\n  componentDidUpdate() {\n    this.reRenderBorder()\n  }\n\n  render() {\n    return (\n      <div aria-label=\"navigation tabs\" class={`tabs ${this.internalOrientation}`}>\n        <ul class=\"tabs-list\">\n          {this.tabObjects?.map((tab, index) => (\n            <li\n              class={`tab-item ${index === this.internalActiveTabIndex && !tab.disabled ? 'active' : ''} ${tab.disabled ? 'disabled' : ''}`}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n              onClick={() => this.setActiveTab(index)}\n            >\n              {tab?.header}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabObjects).map((_, index) => (\n            <div style={{ display: index === this.internalActiveTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}"],"names":["IfxTabs","onActiveTabIndexChange","newIndex","oldIndex","this","internalPrevActiveTabIndex","internalActiveTabIndex","activeTabIndex","setActiveTab","index","prevActiveTab","nextActiveTab","_a","tabObjects","disabled","_b","tabHeaderRefs","length","ifxTabIndex","emit","previousTab","currentTab","emitEvent","element","eventName","event","CustomEvent","bubbles","composed","dispatchEvent","reRenderBorder","borderElement","el","shadowRoot","querySelector","orientation","style","left","concat","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","onSlotChange","tabs","querySelectorAll","Array","from","map","tab","header","getAttribute","tabRefs","forEach","setAttribute","setDefaultOrientation","lowercaseOrientation","toLowerCase","includes","internalOrientation","componentWillLoad","componentDidLoad","componentDidUpdate","render","h","class","ref","onClick","_","display","name"],"sourceRoot":""}