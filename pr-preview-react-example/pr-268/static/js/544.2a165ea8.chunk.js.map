{"version":3,"file":"static/js/544.2a165ea8.chunk.js","mappings":"6MASaA,EAAQ,W,yDA8EnB,KAAAC,kBAAoB,SAACC,GACnB,IAAMC,EAASC,EAAKC,kBAAkBH,EAAEI,eAAe,IACjDC,EAAcL,EAAEC,OAAOK,UAExBL,IACDI,EACFH,EAAKK,eAAeN,IAKtBC,EAAKM,uBACLN,EAAKO,gBAAgBR,EAAQ,MAAO,UACpCC,EAAKQ,sB,qEAtFiB,E,aACE,E,aACA,C,kDAI1B,SAAmBC,GACJA,EAAMP,eACTQ,SAASC,KAAKC,KACtBD,KAAKE,mB,GAER,CAAAC,IAAA,kBAAAC,MAED,WAGE,OAF8BJ,KAAKC,GAAGI,cAAc,qBAAqBC,WACvBD,cAAc,iB,GAEjE,CAAAF,IAAA,qBAAAC,MAED,WAEE,OADwBJ,KAAKC,GAAGK,WAAWD,cAAc,Y,GAE1D,CAAAF,IAAA,mBAAAC,MAED,WAIE,OAF0BJ,KAAKC,GAAGM,iBAAiB,oB,GAGpD,CAAAJ,IAAA,kBAAAC,MAED,SAAgBH,EAAIO,EAAMC,GACxBR,EAAGS,UAAUF,GAAMC,E,GACpB,CAAAN,IAAA,qBAAAC,MAED,WACE,IAAMO,EAAeX,KAAKY,kBACpBC,EAAkBb,KAAKc,qBAC7Bd,KAAKJ,gBAAgBe,EAAc,SAAU,QAC7CX,KAAKJ,gBAAgBiB,EAAiB,SAAU,O,GACjD,CAAAV,IAAA,oBAAAC,MAED,WACE,IAAMO,EAAeX,KAAKY,kBACpBC,EAAkBb,KAAKc,qBAC7Bd,KAAKJ,gBAAgBe,EAAc,SAAU,QAC7CX,KAAKJ,gBAAgBiB,EAAiB,SAAU,O,GACjD,CAAAV,IAAA,uBAAAC,MAED,WAEE,IADA,IAAMW,EAAoBf,KAAKgB,mBACtBC,EAAI,EAAGA,EAAIF,EAAkBG,OAAQD,IAC5CjB,KAAKJ,gBAAgBmB,EAAkBE,GAAGX,WAAWD,cAAc,KAAM,SAAU,S,GAEtF,CAAAF,IAAA,iBAAAC,MAED,SAAehB,GACbA,EAAOiB,cAAc,gBAAgBc,SAAW/B,EAAOiB,cAAc,gBAAgBc,O,GACtF,CAAAhB,IAAA,oBAAAC,MAGD,SAAkBhB,GAChB,OAAIA,aAAkBgC,aAEXhC,EAAOqB,UAAUV,SAAS,mBAChCX,EAAOqB,UAAUV,SAAS,sBAFtBX,EAAOiC,QAAQ,iB,GAQzB,CAAAlB,IAAA,oBAAAC,MAkBD,WACE,IAAMO,EAAeX,KAAKY,kBAC1BU,SAASC,iBAAiB,QAASvB,KAAKwB,mBAAmBC,KAAKzB,OAChEW,EAAaY,iBAAiB,QAASvB,KAAKd,kB,GAC7C,CAAAiB,IAAA,qBAAAC,MAED,WACE,IAAIsB,EAAkB1B,KAAKC,GAAGI,cAAc,cAC5C,GAAIqB,EAAiB,CACnB,IAAMC,EAAgBD,EAAgBpB,WAAWD,cAAc,UAC1DsB,EAAcjB,UAAUkB,SAAS,cACpCD,EAAcJ,iBAAiB,QAASvB,KAAKH,mBAAmB4B,KAAKzB,OACrEA,KAAK6B,oB,IAGV,CAAA1B,IAAA,SAAAC,MAGD,WACE,OACE0B,EAAAA,EAAAA,GAAA,OAAKC,MAAM,aACTD,EAAAA,EAAAA,GAAA,QAAME,KAAK,YACXF,EAAAA,EAAAA,GAAA,a,GAGL,CAAA3B,IAAA,KAAA8B,IAAA,W,0BAvHkB,G,QCTD,0vD","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown.scss?tag=ifx-dropdown&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Element, Listen } from \"@stencil/core\";\n// import { calendar16 } from '@infineon/infineon-icons';\n\n@Component({\n  tag: 'ifx-dropdown',\n  styleUrl: 'dropdown.scss',\n  shadow: true\n})\n\nexport class Dropdown {\n\n  @Prop() label: string;\n  @Prop() size: 's' | 'm';\n  @Prop() disabled: boolean;\n  @Prop() icon: boolean = false;\n  @Prop() search: boolean = false;\n  @Prop() filter: boolean = false;\n  @Element() el;\n\n  @Listen('mousedown', { target: 'document' })\n  handleOutsideClick(event: MouseEvent) {\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      this.closeDropdownMenu();\n    }\n  }\n\n  getDropdownMenu() {\n    const dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu').shadowRoot;\n    const dropdownMenuElement = dropdownMenuComponent.querySelector('.dropdown-menu');\n    return dropdownMenuElement\n  }\n\n  getDropdownWrapper() {\n    const dropdownWrapper = this.el.shadowRoot.querySelector('.dropdown');\n    return dropdownWrapper\n  }\n\n  getDropdownItems() {\n\n    const dropdownMenuItems = this.el.querySelectorAll('ifx-dropdown-item')\n\n    return dropdownMenuItems\n  }\n\n  handleClassList(el, type, className) {\n    el.classList[type](className)\n  }\n\n  toggleDropdownMenu() {\n    const dropdownMenu = this.getDropdownMenu();\n    const dropdownWrapper = this.getDropdownWrapper()\n    this.handleClassList(dropdownMenu, 'toggle', 'show')\n    this.handleClassList(dropdownWrapper, 'toggle', 'show')\n  }\n\n  closeDropdownMenu() {\n    const dropdownMenu = this.getDropdownMenu()\n    const dropdownWrapper = this.getDropdownWrapper()\n    this.handleClassList(dropdownMenu, 'remove', 'show')\n    this.handleClassList(dropdownWrapper, 'remove', 'show')\n  }\n\n  removeActiveMenuItem() {\n    const dropdownMenuItems = this.getDropdownItems()\n    for (let i = 0; i < dropdownMenuItems.length; i++) {\n      this.handleClassList(dropdownMenuItems[i].shadowRoot.querySelector('a'), 'remove', 'active')\n    }\n  }\n\n  toggleCheckbox(target) {\n    target.querySelector('ifx-checkbox').checked = !target.querySelector('ifx-checkbox').checked\n  }\n\n\n  getClickedElement(target) {\n    if (target instanceof SVGElement) {\n      return target.closest('.dropdown-item')\n    } else if (target.className.includes('dropdown-menu')\n      || target.className.includes('form-check-input')) {\n      return false\n    } else {\n      return target.closest('.dropdown-item');\n\n    }\n  }\n\n  addActiveMenuItem = (e) => {\n    const target = this.getClickedElement(e.composedPath()[0])\n    const isCheckable = e.target.checkable;\n\n    if (!target) return;\n    if (isCheckable) {\n      this.toggleCheckbox(target)\n\n      return;\n    }\n\n    this.removeActiveMenuItem()\n    this.handleClassList(target, 'add', 'active')\n    this.toggleDropdownMenu()\n  }\n\n  addEventListeners() {\n    const dropdownMenu = this.getDropdownMenu();\n    document.addEventListener('click', this.handleOutsideClick.bind(this))\n    dropdownMenu.addEventListener('click', this.addActiveMenuItem)\n  }\n\n  componentDidRender() {\n    let buttonComponent = this.el.querySelector('ifx-button');\n    if (buttonComponent) {\n      const buttonElement = buttonComponent.shadowRoot.querySelector('button');\n      if (!buttonElement.classList.contains('disabled')) {\n        buttonElement.addEventListener('click', this.toggleDropdownMenu.bind(this))\n        this.addEventListeners()\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div class='dropdown'>\n        <slot name=\"button\" />\n        <slot />\n      </div>\n    )\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n\n.dropdown {\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n\n  & .btn {\n    min-width: 200px;\n  }\n\n  & .dropdown-toggle::after {\n    content: \"\";\n    display: inline-block;\n    border: none;\n    vertical-align: -2px;\n    margin-left: 10px;\n    background-position: center;\n    background-repeat: no-repeat;\n    transition: transform 0.2s ease-in-out;\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23FFF' viewBox='0 0 448 512'%3E%3C!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --%3E%3Cpath d='M4.251 181.1C7.392 177.7 11.69 175.1 16 175.1c3.891 0 7.781 1.406 10.86 4.25l197.1 181.1l197.1-181.1c6.5-6 16.64-5.625 22.61 .9062c6 6.5 5.594 16.59-.8906 22.59l-208 192c-6.156 5.688-15.56 5.688-21.72 0l-208-192C-1.343 197.7-1.749 187.6 4.251 181.1z'/%3E%3C/svg%3E\");\n  }\n\n  &.show .dropdown-toggle::after {\n    transform: rotate(-180deg);\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23FFF' viewBox='0 0 448 512'%3E%3C!--! Font Awesome Pro 6.1.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2022 Fonticons, Inc. --%3E%3Cpath d='M4.251 181.1C7.392 177.7 11.69 175.1 16 175.1c3.891 0 7.781 1.406 10.86 4.25l197.1 181.1l197.1-181.1c6.5-6 16.64-5.625 22.61 .9062c6 6.5 5.594 16.59-.8906 22.59l-208 192c-6.156 5.688-15.56 5.688-21.72 0l-208-192C-1.343 197.7-1.749 187.6 4.251 181.1z'/%3E%3C/svg%3E\");\n  }\n\n  & .btn-sm {\n    &+.dropdown-menu {\n      transform: translate3d(0px, calc(48.75px + 8px), 0px) !important;\n    }\n  }\n\n  & .btn-lg {\n    &+.dropdown-menu {\n      transform: translate3d(0px, calc(64.5px + 8px), 0px) !important;\n    }\n  }\n}\n\n.show>.btn-secondary.dropdown-toggle:focus {\n  box-shadow: none;\n}\n\n.svg-wrapper {\n  display: inline-block;\n}"],"names":["Dropdown","addActiveMenuItem","e","target","_this","getClickedElement","composedPath","isCheckable","checkable","toggleCheckbox","removeActiveMenuItem","handleClassList","toggleDropdownMenu","event","includes","this","el","closeDropdownMenu","key","value","querySelector","shadowRoot","querySelectorAll","type","className","classList","dropdownMenu","getDropdownMenu","dropdownWrapper","getDropdownWrapper","dropdownMenuItems","getDropdownItems","i","length","checked","SVGElement","closest","document","addEventListener","handleOutsideClick","bind","buttonComponent","buttonElement","contains","addEventListeners","h","class","name","get"],"sourceRoot":""}