{"version":3,"file":"static/js/3756.df166181.chunk.js","mappings":"iKAAA,MCQaA,EAAI,M,8CAEe,E,YACA,E,YACA,E,eAEsB,E,kBACA,CAACC,WAAY,EAAGC,gBAAgB,EAAOC,QAAS,UAAWC,kBAAmB,Q,mBAKhIC,iBAAAA,CAAkBC,GACdC,KAAKC,OAAUF,EAAgBL,aAAeM,KAAKE,M,CAGvDC,eAAAA,IACOH,KAAKI,UAAYJ,KAAKK,QACrBL,KAAKM,aAAaC,cAAcP,KAAKE,O,CAI7CM,MAAAA,GACI,OACIC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAK,gBAAAC,OAAoC,IAAhBZ,KAAKE,OAAe,aAAc,GAAE,+BAAAU,OACpDZ,KAAKK,MAAQ,QAAS,GAAE,8BAAAO,OACxBZ,KAAKM,aAAaV,QAAO,8BAAAgB,OACzBZ,KAAKI,SAAW,WAAY,GAAE,8BAAAQ,OAC9BZ,KAAKa,SAAW,YAAa,GAAE,wCAAAD,OACrBZ,KAAKM,aAAaT,kBAAiB,8BAAAe,OAC7CZ,KAAKC,OAAS,SAAW,MAGnCQ,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAQ,qBAEsB,YAA9BX,KAAKM,aAAaV,UAAyBa,EAAAA,EAAAA,GAAA,QAAME,MAAQ,qBAIvB,YAA9BX,KAAKM,aAAaV,WAA2BI,KAAKK,OAAUL,KAAKK,OAASL,KAAKC,UAChFQ,EAAAA,EAAAA,GAAA,OAAKE,MAAQ,aACPX,KAAKM,aAAaX,kBAAoBK,KAAKI,UAAaJ,KAAKI,UAAYJ,KAAKC,QAAYD,KAAKE,OAAS,GACxGF,KAAKI,WAAaJ,KAAKC,SAAWQ,EAAAA,EAAAA,GAAA,YAAUK,KAAK,aAChDd,KAAKM,aAAaX,gBAAkBK,KAAKC,SAAWQ,EAAAA,EAAAA,GAAA,QAAME,MAAQ,kBAK9C,YAA7BX,KAAKM,aAAaV,SAAwBI,KAAKK,QAAUL,KAAKC,SAAWQ,EAAAA,EAAAA,GAAA,YAAUK,KAAK,eAG3D,YAA9Bd,KAAKM,aAAaV,UAAyBa,EAAAA,EAAAA,GAAA,QAAME,MAAK,oBAAAC,OAAwBZ,KAAKC,OAAS,SAAW,QAKzE,YAA9BD,KAAKM,aAAaV,SAAwD,YAA9BI,KAAKM,aAAaV,UAA0BI,KAAKC,QAAUD,KAAKE,SAAWF,KAAKM,aAAaZ,WAAW,MACrJe,EAAAA,EAAAA,GAAA,OAAKE,MAAK,cAAAC,OAA+C,YAA9BZ,KAAKM,aAAaV,QAAyBI,KAAKC,OAAS,aAAe,aAAgB,IAAMc,QAASA,KAAQf,KAAKG,iBAAiB,GAC7H,YAA9BH,KAAKM,aAAaV,SAA2BI,KAAKC,OAAqB,GAAX,UAAcQ,EAAAA,EAAAA,GAAA,c,4EDlEnF,gnE","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/step/step.scss?tag=ifx-step&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/step/step.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.step-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: tokens.$ifxSize100;\n    max-width: tokens.$ifxSize2000;\n    font: tokens.$ifxBodyBody03;\n    \n    &.compact{\n        gap: 0;\n        max-width: 100%;\n        .step-label{\n            max-width: 100%;\n        }\n        \n        &.indicator-left {\n            align-items: flex-end;\n            text-align: right;\n        }\n        \n        &.indicator-right {\n            align-items: flex-start;\n        }\n    }\n\n    .step-label{\n        max-width: tokens.$ifxSize1800;\n        color: tokens.$ifxColorEngineering400; \n        word-wrap: break-word;\n        &.curr-label{\n            font: tokens.$ifxHeadingHeadingCompact04; \n        }\n        &.next-label{\n            font: tokens.$ifxBodyBody05;\n        }\n    }\n    \n    &.first-step{\n        .step-connector-l{\n            height: 0px;\n        }\n    }\n    \n    &.last-step{\n        .step-connector-r{\n            height: 0px;\n        }\n    }\n    \n    &.complete, &.active{\n        .step-connector-l, .step-connector-r, .step-icon {\n            background: tokens.$ifxColorOcean500;\n            &.active, &.error {\n                background: tokens.$ifxColorEngineering400;\n            }\n        }\n        .step-label{\n            color: tokens.$ifxColorBaseBlack;\n        }\n    }\n    \n    &.error{\n        color: tokens.$ifxColorRed500;\n        .step-label{\n            color: tokens.$ifxColorRed500;\n        }\n\n    }\n}\n\n.active-indic{\n    width: tokens.$ifxSize200;\n    height: tokens.$ifxSize200;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    background: white;\n}\n\n.step-icon-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.step-icon{\n    width: tokens.$ifxSize300;\n    height: tokens.$ifxSize300;\n    background-color: tokens.$ifxColorEngineering400;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n}\n\n.step-connector-r, .step-connector-l{\n    height: 2px;\n    width: tokens.$ifxSize800 + tokens.$ifxSize50;\n    background-color: tokens.$ifxColorEngineering400;\n}\n\n\n/*\n    active\n    error\n    complete/incomplete\n*/","import { Component, h, Prop, State, Watch } from \"@stencil/core\";\n\n@Component({\n    tag     : 'ifx-step',\n    styleUrl: 'step.scss',\n    shadow  : true\n})\n\nexport class Step {\n\n    @Prop() complete: boolean = false;\n    @Prop() error   : boolean = false;\n    @Prop() stepId  : number  = 1;\n\n    @Prop({ reflect: false }) lastStep    : boolean = false;\n    @Prop({ reflect: false }) stepperState: any     = {activeStep: 1, showStepNumber: false, variant: 'default', indicatorPosition: 'left'};\n\n    @State() active: boolean;\n\n    @Watch('stepperState')\n    updateCurrentStep(newStepperState) {\n        this.active = (newStepperState.activeStep === this.stepId)\n    }\n    \n    handleStepClick() {\n        if(this.complete || this.error) {\n            this.stepperState.setActiveStep(this.stepId)\n        } \n    }\n\n    render() {\n        return (\n            <div class = {`step-wrapper ${this.stepId === 1 ? 'first-step': ''} \n                        ${this.error ? 'error': ''}\n                        ${this.stepperState.variant}\n                        ${this.complete ? 'complete': ''}\n                        ${this.lastStep ? 'last-step': ''}\n                        indicator-${this.stepperState.indicatorPosition}\n                        ${this.active ? 'active' : ''}`}\n            >\n\n                <div class = 'step-icon-wrapper'>\n                    {/* Left connector */}\n                    {this.stepperState.variant === 'default' && <span class = 'step-connector-l'/>}\n\n                    {\n                        // Active, complete or incomplete\n                        (this.stepperState.variant === 'default' && (!this.error || (this.error && this.active))) && \n                        <div class = 'step-icon'>\n                            {(this.stepperState.showStepNumber && (!this.complete || (this.complete && this.active))) ? this.stepId : ''}\n                            {(this.complete && !this.active) && <ifx-icon icon='check16'></ifx-icon>}\n                            {(!this.stepperState.showStepNumber && this.active) && <span class = 'active-indic'></span>}\n                        </div>\n                    }\n\n                    {/* // Special error state */}\n                    {(this.stepperState.variant ==='default' && this.error && !this.active) && <ifx-icon icon='warningf24'></ifx-icon>}\n                    \n                    {/* // Right connector */}\n                    {this.stepperState.variant === 'default' && <span class = {`step-connector-r ${this.active ? 'active' : ''}`}/>}\n                </div>\n\n                {\n                    // Step labels\n                    (this.stepperState.variant === 'default' || (this.stepperState.variant === 'compact' && (this.active || this.stepId === this.stepperState.activeStep+1))) && \n                    <div class= {`step-label ${this.stepperState.variant === 'compact' ? (this.active ? 'curr-label' : 'next-label') : ''}`} onClick={() => { this.handleStepClick() }}>\n                        {this.stepperState.variant === 'compact' &&  !this.active  ? 'Next: ' : ''}<slot/>\n                    </div>\n                }\n\n            </div>\n        );\n    };\n}\n"],"names":["Step","activeStep","showStepNumber","variant","indicatorPosition","updateCurrentStep","newStepperState","this","active","stepId","handleStepClick","complete","error","stepperState","setActiveStep","render","h","key","class","concat","lastStep","icon","onClick"],"sourceRoot":""}