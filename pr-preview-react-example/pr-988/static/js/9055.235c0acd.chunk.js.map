{"version":3,"file":"static/js/9055.235c0acd.chunk.js","mappings":"qKAAA,MCQaA,EAAS,M,uKAIsC,O,sCAExB,E,CAKlCC,qBAAAA,CAAsBC,GACpB,MACMC,EADSD,EAAME,OACAD,MACrBE,KAAKC,gBAAgBC,KAAK,CAAEC,WAAYH,KAAKG,WAAYC,aAAc,CAACN,GAAQO,KAAML,KAAKK,M,CAI7FC,wBAAAA,CAAyBT,GACvB,MAAMC,EAAQD,EAAMU,OAAOT,MAC3BE,KAAKC,gBAAgBC,KAAK,CAAEC,WAAYH,KAAKG,WAAYC,aAAc,CAACN,GAAQO,KAAML,KAAKK,M,CAI7FG,6BAAAA,CAA8BX,GAC5BG,KAAKI,aAAeP,EAAMU,OAC1BP,KAAKC,gBAAgBC,KAAK,CAAEC,WAAYH,KAAKG,WAAYC,aAAcJ,KAAKI,aAAcC,KAAML,KAAKK,M,CAIvGI,MAAAA,GACE,OAAQT,KAAKK,MACX,IAAK,OACH,OACEK,EAAAA,EAAAA,GAAA,kBAAgBC,OAAO,EAAOC,UAAU,EAAOC,YAAab,KAAKa,YAC/DC,WAAYjB,GAASG,KAAKJ,sBAAsBC,IAChDG,KAAKe,aAEX,IAAK,gBACH,OACEL,EAAAA,EAAAA,GAAA,cACEG,YAAY,OAAM,iBACH,OAAM,2BACI,YACzBG,YAAanB,GAASG,KAAKM,yBAAyBT,GAAM,wBACnCG,KAAKa,YAAW,YAC5Bb,KAAKe,YAAW,cACdf,KAAKiB,UAGxB,IAAK,eACH,OACEP,EAAAA,EAAAA,GAAA,mBACEQ,MAAOlB,KAAKe,YACZF,YAAab,KAAKa,YAClBI,QAASjB,KAAKiB,QACdD,YAAanB,GAASG,KAAKQ,8BAA8BX,KAG/D,QACE,OAAO,K,WDpEM,E","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/set-filter/set-filter.scss?tag=ifx-set-filter&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/set-filter/setFilter.tsx"],"sourcesContent":["/* set-filter.css */\n\n","// SetFilter.tsx\nimport { Component, h, Event, EventEmitter, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-set-filter',\n  styleUrl: 'set-filter.scss',\n  shadow: true\n})\nexport class SetFilter {\n  @Prop() filterName: string;\n  @Prop() filterLabel: string;\n  @Prop() placeholder: string;\n  @Prop() type: 'text' | 'single-select' | 'multi-select' = 'text';\n  @Prop() options: any[] | string;\n  @State() filterValues: string[] = [];\n\n  @Event() ifxFilterSelect: EventEmitter;\n\n\n  handleTextInputChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const value = target.value;\n    this.ifxFilterSelect.emit({ filterName: this.filterName, filterValues: [value], type: this.type }); // Emit an array for consistency with the multi select component\n\n  }\n\n  handleSingleSelectChange(event: CustomEvent) {\n    const value = event.detail.value;\n    this.ifxFilterSelect.emit({ filterName: this.filterName, filterValues: [value], type: this.type }); // Emit an array for consistency with the multi select component\n  }\n\n\n  handleMultiselectOptionChange(event: CustomEvent) {\n    this.filterValues = event.detail; // Assuming that ifx-multiselect emits an array of selected options\n    this.ifxFilterSelect.emit({ filterName: this.filterName, filterValues: this.filterValues, type: this.type });\n  }\n\n\n  render() {\n    switch (this.type) {\n      case 'text':\n        return (\n          <ifx-text-field error={false} disabled={false} placeholder={this.placeholder}\n            onIfxInput={event => this.handleTextInputChange(event)}\n          >{this.filterLabel}</ifx-text-field>\n        );\n      case 'single-select':\n        return (\n          <ifx-select\n            placeholder=\"true\"\n            search-enabled=\"true\"\n            search-placeholder-value=\"Search...\"\n            onIfxSelect={event => this.handleSingleSelectChange(event)}\n            ifx-placeholder-value={this.placeholder}\n            ifx-label={this.filterLabel}\n            ifx-options={this.options}\n          ></ifx-select>\n        );\n      case 'multi-select':\n        return (\n          <ifx-multiselect\n            label={this.filterLabel}\n            placeholder={this.placeholder}\n            options={this.options}\n            onIfxSelect={event => this.handleMultiselectOptionChange(event)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n}\n\n"],"names":["SetFilter","handleTextInputChange","event","value","target","this","ifxFilterSelect","emit","filterName","filterValues","type","handleSingleSelectChange","detail","handleMultiselectOptionChange","render","h","error","disabled","placeholder","onIfxInput","filterLabel","onIfxSelect","options","label"],"sourceRoot":""}