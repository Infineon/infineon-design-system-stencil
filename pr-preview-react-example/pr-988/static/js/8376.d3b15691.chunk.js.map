{"version":3,"file":"static/js/8376.d3b15691.chunk.js","mappings":"yKAAA,MCQaA,EAAW,M,kPAEM,E,YACH,E,YACA,E,UACC,I,wCAEE,C,CAO5BC,YAAAA,CAAaC,EAAmBC,GAC1BD,IAAaC,IACfC,KAAKC,cAAgBH,E,CAIzBI,iBAAAA,GACEF,KAAKC,cAAgBD,KAAKG,MAC1B,MAAMC,EAAOJ,KAAKK,GAAGC,UAEnBN,KAAKO,UADHH,C,CAKNI,sBAAAA,GACOR,KAAKS,UAAaT,KAAKU,OAAUV,KAAKC,gBACzCD,KAAKC,eAAiBD,KAAKC,cAC3BD,KAAKK,GAAGM,WAAWC,cAAc,yBAAyBC,QAC1Db,KAAKc,UAAUC,KAAKf,KAAKC,eACzBD,KAAKgB,UAAUC,aAAajB,KAAKC,cAAgB,KAAO,M,CAI5DiB,iBAAAA,GACElB,KAAKgB,UAAUC,aAAa,K,CAG9BE,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,wDACa,iBAAgB,aAAarB,KAAKG,MAAK,gBAAiBH,KAAKS,SACxEa,MAAO,0BAA0BtB,KAAKuB,QAAQvB,KAAKS,SAAW,WAAa,KAC3Ee,QAASxB,KAAKQ,uBAAuBiB,KAAKzB,QAE1CoB,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CACEC,MAAO,oCACLtB,KAAKC,cAAgB,UAAY,kBACjCD,KAAKS,SAAW,WAAa,kBAC7BT,KAAKU,MAAQ,QAAU,KACzBgB,SAAU1B,KAAKS,UAAY,EAAI,GAE9BT,KAAKC,gBAAiBmB,EAAAA,EAAAA,GAAA,OAAKE,MAAM,+BAEnCtB,KAAKO,UACJa,EAAAA,EAAAA,GAAA,OAAKE,MAAO,SAAuB,MAAdtB,KAAKuB,KAAe,UAAY,MAAMvB,KAAKS,SAAW,WAAa,OACtFW,EAAAA,EAAAA,GAAA,c,kIDnEW,w5F","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/radio-button/radio-button.scss?tag=ifx-radio-button&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/radio-button/radio-button.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n    display: inline-flex;\n}\n\n.radioButton__container {\n    box-sizing: border-box;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: tokens.$ifxSpace100;\n    cursor: pointer;\n    font-family: var(--ifx-font-family);\n\n    &.m .radioButton__wrapper {\n        width: tokens.$ifxSize300;\n        height: tokens.$ifxSize300;\n    }\n\n    .radioButton__wrapper {\n        width: tokens.$ifxSize250;\n        height: tokens.$ifxSize250;\n        position: relative;\n        display: block;\n        border-radius: 50%;\n        background-color: tokens.$ifxColorBaseWhite;\n        border: 1px solid #575352;\n\n        &:focus {\n            outline: none;\n\n            &::before {\n                content: '';\n                position: absolute;\n                width: calc(100% + 4px);\n                height: calc(100% + 4px);\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                border: 2px solid tokens.$ifxColorOcean500;\n                border-radius: 50%;\n            }\n        }\n\n        .radioButton__wrapper-mark {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            background-color: #0A8276;\n            border-radius: 50%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-color: tokens.$ifxColorBaseTransparent;\n        }\n\n        &:hover {\n            background-color: tokens.$ifxColorEngineering200;\n        }\n\n        &.disabled {\n            background-color: #BFBBBB;\n            border-color: #BFBBBB;\n\n            &.error {\n\n                &:hover,\n                &:focus-visible {\n                    border-color: #CD002F;\n                }\n            }\n        }\n\n        &.checked {\n            border-color: #0A8276;\n\n            &::after {\n                content: \"\";\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n                width: 10px;\n                height: 10px;\n                background-color: #0A8276;\n                border-radius: 50%;\n            }\n\n            &.disabled::after {\n                background-color: #BFBBBB;\n            }\n\n\n            &:hover {\n                border-color: tokens.$ifxColorOcean600;\n\n                & .radioButton__wrapper-mark {\n                    background-color: tokens.$ifxColorOcean600;\n                }\n            }\n\n            &.disabled {\n                background-color: tokens.$ifxColorBaseWhite;\n                border-color: #BFBBBB;\n\n                &.disabled::after {\n                    background-color: #BFBBBB;\n                }\n\n                & .radioButton__wrapper-mark {\n                    background-color: #BFBBBB;\n                }\n            }\n        }\n\n        &.error:not(.disabled) {\n            border-color: #CD002F;\n\n            &:hover,\n            &:focus-visible {\n                border-color: #CD002F;\n            }\n        }\n    }\n\n    .label {\n        display: flex;\n        align-items: center;\n        height: tokens.$ifxSize250;\n        font-style: normal;\n        font-weight: 400;\n        font-size: tokens.$ifxFontSizeS;\n        line-height: tokens.$ifxLineHeightS;\n        color: tokens.$ifxColorBaseBlack;\n        flex: none;\n        order: 1;\n        flex-grow: 0;\n\n        &.label-m {\n            height: tokens.$ifxSize300;\n            font-size: tokens.$ifxFontSizeM;\n            line-height: tokens.$ifxLineHeightM;\n        }\n\n        &.disabled {\n            color: #BFBBBB;\n        }\n\n\n\n        &:hover {\n            cursor: pointer;\n        }\n    }\n}","import { Component, h, Prop, Element, State, Event, EventEmitter, Watch, AttachInternals } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-radio-button',\n  styleUrl: 'radio-button.scss',\n  shadow: true,\n  formAssociated: true\n})\nexport class RadioButton {\n  @Element() el;\n  @Prop() disabled: boolean = false;\n  @Prop() value: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() size: \"s\" | \"m\" = \"s\";\n  @State() internalValue: boolean;\n  @State() hasSlot: boolean = true;\n\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter;\n\n  @AttachInternals() internals: ElementInternals;\n  \n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n    }\n  }\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n    const slot = this.el.innerHTML;\n    if (slot) {\n      this.hasSlot = true;\n    } else this.hasSlot = false;\n  }\n\n  handleRadioButtonClick() {\n    if (!this.disabled && !this.error && !this.internalValue) {\n      this.internalValue = !this.internalValue;\n      this.el.shadowRoot.querySelector('.radioButton__wrapper').focus();\n      this.ifxChange.emit(this.internalValue);\n      this.internals.setFormValue(this.internalValue ? 'on' : null);\n    }\n  }\n\n  formResetCallback() {\n    this.internals.setFormValue(null);\n  }\n\n  render() {\n    return (\n      <div\n        aria-label='a radio button' aria-value={this.value} aria-disabled={this.disabled}\n        class={`radioButton__container ${this.size} ${this.disabled ? 'disabled' : ''}`}\n        onClick={this.handleRadioButtonClick.bind(this)}\n      >\n        <div\n          class={`radioButton__wrapper \n          ${this.internalValue ? 'checked' : ''} \n          ${this.disabled ? 'disabled' : ''} \n          ${this.error ? 'error' : ''}`}\n          tabIndex={this.disabled ? -1 : 0}\n        >\n          {this.internalValue && <div class=\"radioButton__wrapper-mark\"></div>}\n        </div>\n        {this.hasSlot && (\n          <div class={`label ${this.size === \"m\" ? \"label-m\" : \"\"} ${this.disabled ? 'disabled' : ''}`}>\n            <slot />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"names":["RadioButton","valueChanged","newValue","oldValue","this","internalValue","componentWillLoad","value","slot","el","innerHTML","hasSlot","handleRadioButtonClick","disabled","error","shadowRoot","querySelector","focus","ifxChange","emit","internals","setFormValue","formResetCallback","render","h","key","class","size","onClick","bind","tabIndex"],"sourceRoot":""}