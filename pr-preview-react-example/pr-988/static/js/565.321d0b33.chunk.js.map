{"version":3,"file":"static/js/565.321d0b33.chunk.js","mappings":"wKAAA,MCOaA,EAAY,M,wIAGK,E,8CAO5BC,YAAAA,CAAaC,GACXC,KAAKC,KAAKC,aAAa,QAASH,EAASI,W,CAI3CC,wBAAAA,CAAyBC,GACvBL,KAAKM,YAAcD,EAAME,OACzBP,KAAKQ,sBAAsBC,KAAK,CAAEC,WAAYV,KAAKU,WAAYJ,YAAaN,KAAKM,YAAaK,UAAWX,KAAKW,W,CAGhHC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,0BACTF,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,eAAef,KAAKU,aAC/BG,EAAAA,EAAAA,GAAA,oBAAAC,IAAA,8DAAmC,OAAOE,SAAUhB,KAAKgB,SAAUC,MAAOjB,KAAKM,c,+FD/B/D,+P","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/filter-type-group/filter-search/filter-search.scss?tag=ifx-filter-search&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/filter-type-group/filter-search/filter-search.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n\n\n.filter-search-wrapper {\n  display: flex;\n  padding: tokens.$ifxSpace150 tokens.$ifxSpace200 tokens.$ifxSpace200 tokens.$ifxSpace200;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n  gap: tokens.$ifxSpace50;\n  font-family: var(--ifx-font-family);\n  background: tokens.$ifxColorEngineering200;\n}\n\n.filter-name {\n  font-size: tokens.$ifxFontSizeM;\n  line-height: tokens.$ifxLineHeightM;\n  font-weight: 600;\n}","import { Component, h, Listen, Watch, Element, Event, EventEmitter, Prop } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-filter-search',\n  styleUrl: 'filter-search.scss',\n  shadow: true,\n})\nexport class FilterSearch {\n  @Element() host: HTMLElement;\n  @Prop() filterName: string;\n  @Prop() disabled: boolean = false;\n  @Prop({ mutable: true }) filterValue: string;\n  @Prop() filterKey: string;\n\n  @Event() ifxFilterSearchChange: EventEmitter;\n\n  @Watch('value')\n  valueChanged(newValue: boolean) {\n    this.host.setAttribute('value', newValue.toString());\n  }\n\n  @Listen('ifxInput')\n  handleFilterSearchChange(event: CustomEvent) {\n    this.filterValue = event.detail;\n    this.ifxFilterSearchChange.emit({ filterName: this.filterName, filterValue: this.filterValue, filterKey: this.filterKey }); // Emitting filterKey along with other properties\n  }\n\n  render() {\n    return (\n      <div class=\"filter-search-wrapper\">\n        <div class=\"filter-name\">{this.filterName}</div>\n        <ifx-search-field show-delete-icon=\"true\" disabled={this.disabled} value={this.filterValue}>\n        </ifx-search-field>\n      </div>\n    );\n  }\n}\n\n"],"names":["FilterSearch","valueChanged","newValue","this","host","setAttribute","toString","handleFilterSearchChange","event","filterValue","detail","ifxFilterSearchChange","emit","filterName","filterKey","render","h","key","class","disabled","value"],"sourceRoot":""}