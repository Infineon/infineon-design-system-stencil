{"version":3,"file":"static/js/3884.451e3927.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.scss?tag=ifx-multiselect&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/text-field/text-field.scss?tag=ifx-text-field&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/text-field/text-field.tsx"],"sourcesContent":["import { Component, Prop, State, Event, EventEmitter, Element, h, Watch } from '@stencil/core';\nimport { Option } from './interfaces';\n\n// Debounce function\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n@Component({\n  tag: 'ifx-multiselect',\n  styleUrl: 'multiselect.scss',\n  shadow: true\n})\n\n\n\nexport class Multiselect {\n\n  @Prop() options: any[] | string;\n  @Prop() batchSize: number = 50;\n  @Prop() size: string = 'medium (40px)';\n  @Prop() disabled: boolean = false;\n  @Prop() error: boolean = false;\n  @State() internalError: boolean = false;\n  @Prop() errorMessage: string = \"Error\";\n  @State() internalErrorMessage: string;\n  @Prop() label: string = \"\";\n  @State() persistentSelectedOptions: Option[] = [];\n  @Prop() placeholder: string = \"\";\n  @State() listOfOptions: Option[] = [];\n  @State() dropdownOpen = false;\n  @State() dropdownFlipped: boolean;\n  @Prop() maxItemCount: number;\n  @State() zIndex: number = 1; // default z-index value\n  static globalZIndex = 1; // This will be shared among all instances of the component.\n  private currentIndex: number = 0; //needed for option selection using keyboard\n  @State() isLoading: boolean = false;\n  @State() loadedOptions: Option[] = [];\n  @State() filteredOptions: Option[] = [];\n  @Prop() searchEnabled: boolean = true\n\n\n  @Event() ifxSelect: EventEmitter;\n  @Event() ifxMultiselectIsOpen: EventEmitter;\n\n  @Element() el: HTMLElement;\n  dropdownElement!: HTMLElement;\n\n\n  async loadInitialOptions() {\n    this.isLoading = true;\n    this.internalError = this.error;\n    this.internalErrorMessage = this.errorMessage;\n    // Load the first batch of options (e.g., first 20)\n    this.loadedOptions = await this.fetchOptions(0, this.batchSize);\n    this.isLoading = false;\n  }\n\n  async fetchMoreOptions() {\n    this.isLoading = true;\n    const moreOptions = await this.fetchOptions(this.loadedOptions.length, this.batchSize);\n    this.loadedOptions = [...this.loadedOptions, ...moreOptions];\n    this.isLoading = false;\n  }\n\n\n  handleScroll(event: UIEvent) {\n    const element = event.target as HTMLElement;\n    const halfwayPoint = Math.floor((element.scrollHeight - element.clientHeight) / 2); //loading more options when the user has scrolled halfway through the current list\n\n    if (element.scrollTop >= halfwayPoint) {\n      this.fetchMoreOptions();\n    }\n  }\n\n\n\n\n  async fetchOptions(startIndex: number, count: number): Promise<Option[]> {\n    let allOptions: Option[] = [];\n\n    // Parse options if it's a string, or use directly if it's an array\n    if (typeof this.options === 'string') {\n      try {\n        allOptions = JSON.parse(this.options);\n      } catch (err) {\n        console.error('Failed to parse options:', err);\n      }\n    } else if (Array.isArray(this.options)) {\n      allOptions = this.options;\n    } else {\n      console.error('Unexpected value for options:', this.options);\n    }\n\n    // Slice the options array based on startIndex and count\n    const slicedOptions = allOptions.slice(startIndex, startIndex + count);\n\n    // Update the state for initially selected options, if needed\n    if (startIndex === 0) { // Assuming you want to do this only for the first batch\n      const initiallySelected = slicedOptions.filter(option => option.selected);\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...initiallySelected];\n    }\n\n    return slicedOptions;\n  }\n\n\n  handleSearch = debounce((targetElement: HTMLInputElement) => {\n    const searchTerm = targetElement.value.toLowerCase();\n    if (searchTerm === '') {\n      this.filteredOptions = this.loadedOptions;\n    } else {\n      this.filteredOptions = this.loadedOptions.filter(option => option.label.toLowerCase().includes(searchTerm))\n    }\n  }, 300);\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.positionDropdown();\n    }, 500);\n\n    // setInterval(this.handleScroll, 5000); // Runs every 5 seconds (5000 milliseconds)\n\n\n  }\n\n\n  componentWillLoad() {\n    this.loadInitialOptions();\n    this.filteredOptions = [...this.loadedOptions];\n  }\n\n  @Watch('error')\n  updateInternalError() {\n    this.internalError = this.error;\n  }\n\n  @Watch('errorMessage')\n  updateInternalErrorMessage() {\n    this.internalErrorMessage = this.errorMessage;\n  }\n\n  @Watch('loadedOptions')\n  loadedOptionsChanged() {\n    this.filteredOptions = [...this.loadedOptions];\n  }\n\n\n  handleOptionClick(option: Option) {\n    this.internalError = false;\n\n    if (!option.selected && this.isSelectionLimitReached(option)) {\n      option.checkboxRef.toggleCheckedState(false)\n      this.internalError = true;\n      this.internalErrorMessage = \"Please consider the maximum number of items to choose from\";\n      return;\n    }\n    \n    this.updateSelection(option);\n    this.ifxSelect.emit(this.persistentSelectedOptions);\n  }\n\n\n  isSelectionLimitReached(option: Option): boolean {\n    let newOptionsLength = option.children ? option.children.length : 1;\n    return this.maxItemCount && this.persistentSelectedOptions.length + newOptionsLength > this.maxItemCount &&\n      !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value)\n  }\n\n  updateSelection(option: Option) {\n    const wasSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n\n    if (option.children && option.children.length > 0) {\n      this.handleParentOptionClick(option);\n    } else {\n      this.handleChildOptionClick(option, wasSelected);\n    }\n  }\n\n  handleParentOptionClick(option: Option) {\n    const allChildrenSelected = option.children.every(child =>\n      this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value)\n    );\n\n    if (allChildrenSelected) {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions.filter(\n        selectedOption => !option.children.some(child => child.value === selectedOption.value)\n      )];\n\n      option.selected = false;\n      option.children.forEach(child => {\n        child.selected = false;\n      })\n\n    } else {\n      const newChildren = [...option.children.filter(childOption =>\n            !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === childOption.value)\n      )];\n      option.selected = true;\n      option.children.forEach(child => {\n        child.selected = true;\n      })\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...newChildren];\n    }\n  }\n\n  handleChildOptionClick(option: Option, wasSelected: boolean) {\n    if (wasSelected) {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value)];\n      option.selected = false;\n    } else {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, option];\n      option.selected = true;\n    }\n    this.updateParentSelectedState();\n  }\n\n  updateParentSelectedState() {\n    this.loadedOptions.forEach(option => {\n      if(option.children?.length > 0) {\n        if(option.children.every(child => child.selected === true)) option.selected = true;\n        else {\n          option.selected = false;\n          if(this.isOptionIndeterminate(option)) {\n            option.indeterminate = true;\n          }else{\n            option.indeterminate = false;\n          }\n        }\n      }\n    });\n  }\n\n\n\n  handleDocumentClick = (event: Event) => {\n    const path = event.composedPath();\n    if (!path.includes(this.dropdownElement)) {\n      this.dropdownOpen = false;\n      document.removeEventListener('click', this.handleDocumentClick);\n\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }\n  }\n\n  getSizeClass() {\n    return `${this.size}` === \"s\"\n      ? \"small-select\"\n      : \"medium-select\";\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    setTimeout(() => {\n      if (this.dropdownOpen) {\n        document.addEventListener('click', this.handleDocumentClick);\n      }\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }, 0);\n    this.zIndex = Multiselect.globalZIndex++;\n  }\n\n\n  waitForElement(querySelectorFunc: Function, callback: Function, maxTries = 50) {\n    let tries = 0;\n    function request() {\n      requestAnimationFrame(() => {\n        const elements = querySelectorFunc();\n        if (elements.length > 0 || tries > maxTries) {\n          callback(elements);\n        } else {\n          tries++;\n          request();\n        }\n      });\n    }\n    request();\n  }\n\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return; // If it's disabled, don't do anything.\n\n    const options = this.dropdownElement.querySelectorAll('.option');\n\n    switch (event.code) {\n      case 'Enter' || 'Space':\n        if (this.dropdownOpen) {\n          this.selectItem(options);\n        } else {\n          this.toggleDropdown();\n          // Wait a bit for the dropdown to finish rendering\n          this.waitForElement(() => {\n            return this.dropdownElement.querySelectorAll('.option');\n          }, (options) => {\n            this.updateHighlightedOption(options);\n          });\n        }\n        break;\n      case 'ArrowDown':\n        this.handleArrowDown(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n      case 'ArrowUp':\n        this.handleArrowUp(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n    }\n  }\n\n  handleWrapperClick(event: MouseEvent) {\n    // This is your existing logic for positioning the dropdown\n    this.positionDropdown();\n\n    // Check if the event target is the wrapper itself and not a child element.\n    if (event.currentTarget === event.target) {\n      this.toggleDropdown();\n    }\n  }\n\n  clearSelection() {\n    this.persistentSelectedOptions = [];\n    this.ifxSelect.emit(this.persistentSelectedOptions); // if you want to emit empty selection after clearing\n  }\n\n  positionDropdown() {\n    const wrapperRect = this.el.shadowRoot.querySelector('.ifx-multiselect-wrapper')?.getBoundingClientRect();\n    const spaceBelow = window.innerHeight - wrapperRect.bottom;\n    const spaceAbove = wrapperRect.top;\n\n    // If there's more space above than below the trigger and the dropdown doesn't fit below\n    if ((spaceAbove > spaceBelow && wrapperRect.height > spaceBelow) || (wrapperRect.bottom > window.innerHeight)) {\n      this.dropdownFlipped = true;\n    } else {\n      this.dropdownFlipped = false;\n    }\n  }\n\n\n\n  // Helper function to update highlighted option based on currentIndex\n  private updateHighlightedOption(options: NodeList) {\n    // Clear all highlights\n    options.forEach((option: Element) => option.classList.remove('is-highlighted'));\n\n    // Apply highlight to the current option\n    if (this.currentIndex >= 0 && this.currentIndex < options.length) {\n      (options[this.currentIndex] as Element).classList.add('is-highlighted');\n    }\n  }\n\n  // Helper function to handle arrow down navigation\n  private handleArrowDown(options: NodeList) {\n    if (this.currentIndex < options.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0; // Wrap to the beginning.\n    }\n  }\n\n  // Helper function to handle arrow up navigation\n  private handleArrowUp(options: NodeList) {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = options.length - 1; // Wrap to the end.\n    }\n  }\n\n  private selectItem(options: NodeList) {\n    // If there's a previous selection, remove its \"selected\" class\n    const previouslySelected = this.dropdownElement.querySelector('.option.selected');\n    if (previouslySelected) {\n      previouslySelected.classList.remove('selected');\n    }\n\n    // Mark the current item as selected\n    const currentOptionElement = options[this.currentIndex] as Element;\n    currentOptionElement.classList.add('selected');\n\n    const currentOptionValue = currentOptionElement.getAttribute('data-value');\n    const currentListOfOptions = typeof this.options === 'string' //passed in string form via storybook\n      ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n      : this.options.map(option => ({ ...option }));\n\n    const currentOption = this.findInOptions(currentListOfOptions, currentOptionValue); // get the option object based on the currently selected value and the options array\n    this.handleOptionClick(currentOption);\n  }\n\n\n  renderOption(option: Option, index: number) {\n    const isIndeterminate = this.isOptionIndeterminate(option);\n    const isSelected = option.children ? isIndeterminate || this.isOptionSelected(option) : this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`; // Generate a unique ID using the index\n\n    return (\n      <div>\n        <div class={`option ${isSelected ? 'selected' : ''} \n        ${this.getSizeClass()}`}\n          data-value={option.value}\n          onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n          tabindex=\"0\"\n          role={`${option.children?.length > 0 ? \"treeitem\" : \"option\"}`}>\n          <ifx-checkbox ref={(el) => option.checkboxRef = el} id={uniqueId} size=\"s\" value={isIndeterminate ? false : isSelected} indeterminate={isIndeterminate} disabled={disableCheckbox}></ifx-checkbox>\n          <label htmlFor={uniqueId}>{option.label}</label>\n        </div>\n        {option.children && option.children.map((child, childIndex) => this.renderSubOption(child, `${index}-${childIndex}`))}\n      </div>\n    );\n  }\n\n  isOptionSelected(option: Option): boolean {\n    if (!option.children) return false;\n\n    return option.children.every(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    );\n  }\n\n\n  isOptionIndeterminate(option: Option): boolean {\n    if (!option.children) return false;\n\n    const selectedChildren = option.children.filter(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    ).length;\n\n    return selectedChildren > 0 && selectedChildren < option.children.length;\n  }\n\n\n  findInOptions(options: Option[], searchTerm: string): Option | null {\n    for (const option of options) {\n      if (option.value === searchTerm) {\n        return option;\n      }\n      if (option.children) {\n        const foundInChildren = this.findInOptions(option.children, searchTerm);\n        if (foundInChildren) {\n          return foundInChildren;\n        }\n      }\n    }\n    return null;\n  }\n\n\n  renderSubOption(option: Option, index: string) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`;\n\n    return (\n      <div class={`option sub-option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n        data-value={option.value}\n        role={`${option.children?.length > 0 ? \"option\" : \"treeitem\"}`}\n        onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n        tabindex=\"0\">\n        <ifx-checkbox ref={(el) => option.checkboxRef = el} id={uniqueId} size=\"s\" value={isSelected} disabled={disableCheckbox}></ifx-checkbox>\n        <label htmlFor={uniqueId}>{option.label}</label>\n      </div>\n    );\n  }\n\n  render() {\n    // Create a label for the selected options\n    const selectedOptionsLabels = this.persistentSelectedOptions\n      .filter(option => {\n        // check if option is a child and its parent is selected\n        const isChildSelectedWithParent = this.persistentSelectedOptions.some(parentOption =>\n          parentOption.children &&\n          parentOption.children.some(child => child.value === option.value) &&\n          parentOption.selected\n        );\n        return !isChildSelectedWithParent;\n      })\n      .map(option => option.label)\n      .join(', ');\n\n    return (\n      <div class={`ifx-multiselect-container`} ref={el => this.dropdownElement = el as HTMLElement}>\n        {\n          this.label ?\n            <div class=\"ifx-label-wrapper\">\n              <span>{this.label}</span>\n            </div> : null\n        }\n        <div class={`ifx-multiselect-wrapper \n        ${this.getSizeClass()} \n        ${this.dropdownOpen ? 'active' : ''} \n        ${this.dropdownFlipped ? 'is-flipped' : ''}\n        ${this.internalError ? 'error' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n          tabindex=\"0\"\n          onClick={(event) => this.handleWrapperClick(event)}\n          onKeyDown={(event) => this.handleKeyDown(event)} >\n          <div class={`ifx-multiselect-input \n          ${this.persistentSelectedOptions.length === 0 ? 'placeholder' : \"\"}\n          `}\n            onClick={this.disabled ? undefined : () => this.toggleDropdown()}\n          >\n            {this.persistentSelectedOptions.length > 0 ? selectedOptionsLabels : this.placeholder}\n          </div>\n          {this.dropdownOpen && (\n            <div class=\"ifx-multiselect-dropdown-menu\"\n              onScroll={(event) => this.handleScroll(event)}\n              style={{ '--dynamic-z-index': this.zIndex.toString() }}>\n              {this.searchEnabled && <input type=\"text\" role=\"textbox\" class=\"search-input\" onInput={(event) => this.handleSearch(event.target)} placeholder=\"Search...\"></input>}\n              {this.filteredOptions.map((option, index) => this.renderOption(option, index))}\n              {this.isLoading && <div>Loading more options...</div>}\n            </div>\n          )}\n          <div class=\"ifx-multiselect-icon-container\">\n\n            {/* Clear Button - will show only if there's a selection */}\n            {this.persistentSelectedOptions.length > 0 && (\n              <div class=\"ifx-clear-button\" onClick={() => this.clearSelection()}>\n                <ifx-icon icon=\"cremove24\"></ifx-icon>\n              </div>\n            )}\n            <div class=\"icon-wrapper-up\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-up'\n                icon='chevronup-16'></ifx-icon>\n            </div>\n            <div class=\"icon-wrapper-down\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-down'\n                icon='chevron-down-16'></ifx-icon>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.internalError ?\n            <div class=\"ifx-error-message-wrapper\">\n              <span>{this.internalErrorMessage}</span>\n            </div> : null\n        }\n      </div>\n    );\n  }\n\n}\n","// @import '~choices.js/public/assets/styles/choices.css';\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.ifx-multiselect-container {\n  position: relative;\n  box-sizing: border-box;\n  font-family: var(--ifx-font-family);\n\n  &.small-select {\n    height: 36px;\n  }\n\n  &.medium-select {\n    height: 40px;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n\n  .ifx-label-wrapper {\n    font-size: tokens.$ifxFontSizeM;\n    line-height: tokens.$ifxLineHeightM;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-error-message-wrapper {\n    color: #CD002F;\n    font-size: tokens.$ifxFontSizeXs;\n    line-height: tokens.$ifxLineHeightXs;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-multiselect-wrapper {\n    background-color: tokens.$ifxColorBaseWhite;\n    box-sizing: border-box;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid tokens.$ifxColorEngineering400;\n    border-radius: tokens.$ifxBorderRadius12;\n    width: 100%;\n    font-weight: 400;\n    font-style: normal;\n\n\n    &.small-select {\n      height: 36px;\n      padding: 8px 12px;\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n    }\n\n    &.medium-select {\n      height: 40px;\n      padding: 8px 16px;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n    }\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus-visible:not(.active):not(:active) {\n      outline: none;\n\n      &::before {\n        content: '';\n        position: absolute;\n        width: calc(100% + 4px);\n        height: calc(100% + 4px);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 2px solid tokens.$ifxColorOcean500;\n        border-radius: 2px;\n\n      }\n    }\n\n    &.disabled {\n      background: tokens.$ifxColorEngineering200;\n      color: #575352;\n      border-color: #575352;\n      cursor: not-allowed;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    &.error {\n      border-color: #CD002F;\n    }\n\n    &:hover:not(.focus, :focus) {\n      border-color: tokens.$ifxColorEngineering500;\n    }\n\n    &.active {\n      border-color: tokens.$ifxColorOcean500 !important; // Active border color\n\n      & .icon-wrapper-up {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-left: tokens.$ifxSpace100;\n      }\n\n      & .icon-wrapper-down {\n        display: none\n      }\n    }\n\n\n    & .icon-wrapper-up {\n      display: none;\n    }\n\n    & .icon-wrapper-down {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding-left: tokens.$ifxSpace100;\n    }\n\n    &.is-flipped {\n      .ifx-multiselect-dropdown-menu {\n        top: auto;\n        bottom: 100%;\n      }\n    }\n  }\n\n  .ifx-multiselect-input {\n    flex-grow: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &.placeholder {\n      opacity: 0.5;\n    }\n\n  }\n\n\n  .ifx-multiselect-icon-container {\n    margin-left: auto;\n    align-items: center;\n    display: flex;\n  }\n\n\n  .ifx-clear-button {\n    margin-right: tokens.$ifxSpace100; // Space between clear button and icons\n    display: flex;\n  }\n\n  .ifx-multiselect-dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0px 6px 9px 0px rgba(29, 29, 29, 0.10);\n    max-height: 300px;\n    /* Adjust based on your design */\n    overflow-y: auto;\n    z-index: var(--dynamic-z-index, 1); // Fallback to 1\n\n    .search-input {\n      // position: sticky;\n      // top: 0;\n      // z-index: 2;\n      width: 100%;\n      padding: 8px 16px;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      font-style: normal;\n      font-weight: 400;\n      box-sizing: border-box;\n      background-color: tokens.$ifxColorBaseWhite;\n      border: none;\n      border-bottom: 1px solid tokens.$ifxColorEngineering400;\n\n      &:focus {\n        outline: none;\n        border: 1px solid tokens.$ifxColorOcean500;\n      }\n\n      // Optional: Placeholder style\n      &::placeholder {\n        color: #999;\n      }\n    }\n  }\n\n  .option {\n    position: relative;\n    padding: 8px 16px;\n    gap: 8px;\n    align-items: center;\n    display: flex;\n    font-style: normal;\n    font-weight: 400;\n\n    &.small-select {\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n    }\n\n    &.medium-select {\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n    }\n\n    &:hover {\n      background-color: tokens.$ifxColorEngineering200;\n    }\n\n    &:focus {\n      background-color: tokens.$ifxColorEngineering300;\n      outline: none;\n    }\n\n    &.is-highlighted {\n      background-color: tokens.$ifxColorEngineering200;\n      ;\n    }\n\n    &.selected {\n      // color: #0A8276;\n    }\n\n    &.sub-option {\n      padding-left: 30px;\n      /* or however much indentation you want */\n    }\n  }\n\n\n\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.textInput__container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  width: 100%;\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n  font-family: var(--ifx-font-family);\n\n\n  &.disabled {\n    & .textInput__top-wrapper {\n      & label {\n        color: tokens.$ifxColorEngineering500;\n      }\n    }\n\n    & .textInput__bottom-wrapper {\n      input {\n        border: 1px solid tokens.$ifxColorEngineering500;\n        background-color: tokens.$ifxColorEngineering200;\n\n        &::placeholder {\n          font-size: tokens.$ifxFontSizeS;\n          color: tokens.$ifxColorEngineering500;\n        }\n      }\n    }\n  }\n\n  & .textInput__top-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 4px;\n    flex: none;\n    order: 0;\n    align-self: stretch;\n    flex-grow: 0;\n\n    & label {\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      display: flex;\n      align-items: center;\n      color: tokens.$ifxColorBaseBlack;\n      flex: none;\n      order: 0;\n      flex-grow: 0;\n\n      & .optional-required {\n        margin-left: 4px;\n      }\n\n      & .optional {\n        margin-left: 4px;\n      }\n\n      & .required {\n        margin-left: 4px;\n      }\n    }\n  }\n\n  .input-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n\n  & .textInput__bottom-wrapper {\n    flex-grow: 1;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 4px;\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n\n    & input {\n      width: 100%;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n      gap: tokens.$ifxSpace100;\n      height: tokens.$ifxSize500;\n      background-color: tokens.$ifxColorBaseWhite;\n      color: tokens.$ifxColorBaseBlack;\n      font-family: tokens.$ifxFontFamilyBody;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      border: 1px solid tokens.$ifxColorEngineering400;\n      border-radius: tokens.$ifxBorderRadius12;\n      flex: none;\n      order: 0;\n      align-self: stretch;\n      flex-grow: 0;\n      text-overflow: ellipsis;\n\n      &.input-s {\n        height: tokens.$ifxSize450;\n        font-size: tokens.$ifxFontSizeS;\n        line-height: tokens.$ifxLineHeightS;\n\n        &::placeholder {\n          font-size: tokens.$ifxFontSizeS;\n          line-height: tokens.$ifxLineHeightS;\n        }\n\n      }\n\n      &.icon {\n        padding-left: tokens.$ifxSpace500;\n      }\n\n      &.error {\n        border: 1px solid #CD002F;\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      &.success {\n        border: 1px solid #4CA460;\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n\n      &:focus:not(.error, .success) {\n        outline: none;\n        border: 1px solid tokens.$ifxColorOcean500;\n      }\n\n      &:hover:not(:disabled, :focus, .error, .success) {\n        border: 1px solid tokens.$ifxColorEngineering500;\n      }\n\n      &::placeholder {\n        font-style: normal;\n        font-weight: 400;\n        font-size: tokens.$ifxFontSizeM;\n        line-height: tokens.$ifxLineHeightM;\n        color: #8D8786;\n        flex: none;\n        order: 1;\n        flex-grow: 1;\n      }\n    }\n\n    & ifx-icon {\n      // Position the icon within the icon container\n      // Adjust the positioning as needed\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: tokens.$ifxSpace200;\n      /* Adjust this value to control the icon's left offset */\n      transition: .3s;\n      color: tokens.$ifxColorEngineering400;\n    }\n\n    & .textInput__bottom-wrapper-caption {\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeXs;\n      line-height: tokens.$ifxLineHeightXs;\n      letter-spacing: 0.2px;\n      color: tokens.$ifxColorBaseBlack;\n      flex: none;\n      order: 1;\n      align-self: stretch;\n      flex-grow: 0;\n\n      &.error {\n        color: #CD002F;\n\n      }\n\n      &.disabled {\n        color: tokens.$ifxColorEngineering500;\n      }\n    }\n\n  }\n}","import { Component, h, Event, Element, Prop, EventEmitter, Watch, Method } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-text-field',\n  styleUrl: 'text-field.scss',\n  shadow: true\n})\n\nexport class TextField {\n  private inputElement: HTMLInputElement;\n  @Element() el;\n  @Prop() placeholder: string = \"Placeholder\"\n  @Prop({ mutable: true }) value: string = '';\n  @Prop() error: boolean = false;\n  @Prop() label: string = \"\";\n  @Prop() icon: string = \"\";\n  @Prop() caption: string = \"\";\n  @Prop() size: string = 'm';\n  @Prop() required: boolean = false;\n  @Prop() optional: boolean = false;\n  @Prop() success: boolean = false;\n  @Prop() disabled: boolean = false;\n  @Event() ifxInput: EventEmitter<String>;\n  // @Prop({ reflect: true })\n  // resetOnSubmit: boolean = false;\n\n\n  @Watch('value')\n  valueWatcher(newValue: string) {\n    if (newValue !== this.inputElement.value) {\n      this.inputElement.value = newValue;\n    }\n  }\n\n  @Method()\n  async reset() {\n    this.value = '';\n    this.inputElement.value = '';\n  }\n\n\n  handleInput() {\n    const query = this.inputElement.value;\n    this.value = query; // update the value property when input changes\n    this.ifxInput.emit(this.value);\n  }\n\n  render() {\n    return (\n      <div aria-label=\"a text field for user input\" aria-value={this.value} aria-disabled={this.disabled} class={`textInput__container ${this.disabled ? 'disabled' : \"\"}`}>\n        <div class=\"textInput__top-wrapper\">\n          <label htmlFor=\"text-field\">\n            <slot></slot>\n            {this.optional && this.required ? (\n              <span class=\"optional-required\">(optional) *</span>\n            ) : this.optional ? (\n              <span class=\"optional\">(optional)</span>\n            ) : this.required ? (\n              <span class=\"required\">*</span>\n            ) : null}\n          </label>\n        </div>\n\n        <div class=\"textInput__bottom-wrapper\">\n          <div class=\"input-container\">\n            {this.icon && (\n              <ifx-icon icon={this.icon} />\n            )}\n            <input\n              ref={(el) => (this.inputElement = el)}\n              disabled={this.disabled}\n              type=\"text\"\n              id='text-field'\n              value={this.value}\n              onInput={() => this.handleInput()}\n              placeholder={this.placeholder}\n              class={\n                `${this.icon ? 'icon' : \"\"}\n                ${this.error ? 'error' : \"\"} \n              ${this.size === \"s\" ? \"input-s\" : \"\"}\n              ${this.success ? \"success\" : \"\"}`} />\n          </div>\n          {this.caption && !this.error &&\n            <div class={`textInput__bottom-wrapper-caption ${this.disabled} ? disabled : \"\"`}>\n              {this.caption}\n            </div>}\n          {this.error &&\n            <div class=\"textInput__bottom-wrapper-caption error\">\n              {this.caption}\n            </div>}\n        </div>\n      </div>\n    );\n  }\n}\n"],"names":["Multiselect","currentIndex","handleSearch","func","wait","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","later","debounce","targetElement","searchTerm","value","toLowerCase","this","filteredOptions","loadedOptions","filter","option","label","includes","handleDocumentClick","event","composedPath","dropdownElement","dropdownOpen","document","removeEventListener","ifxMultiselectIsOpen","emit","loadInitialOptions","isLoading","internalError","error","internalErrorMessage","errorMessage","fetchOptions","batchSize","fetchMoreOptions","moreOptions","handleScroll","element","target","halfwayPoint","Math","floor","scrollHeight","clientHeight","scrollTop","startIndex","count","allOptions","options","JSON","parse","err","console","isArray","slicedOptions","slice","initiallySelected","selected","persistentSelectedOptions","componentDidLoad","positionDropdown","componentWillLoad","updateInternalError","updateInternalErrorMessage","loadedOptionsChanged","handleOptionClick","isSelectionLimitReached","checkboxRef","toggleCheckedState","updateSelection","ifxSelect","newOptionsLength","children","maxItemCount","some","selectedOption","wasSelected","handleParentOptionClick","handleChildOptionClick","every","child","forEach","newChildren","childOption","updateParentSelectedState","_a","isOptionIndeterminate","indeterminate","getSizeClass","concat","size","toggleDropdown","addEventListener","zIndex","globalZIndex","waitForElement","querySelectorFunc","callback","maxTries","undefined","tries","request","requestAnimationFrame","elements","handleKeyDown","disabled","querySelectorAll","code","selectItem","updateHighlightedOption","handleArrowDown","handleArrowUp","handleWrapperClick","currentTarget","clearSelection","wrapperRect","el","shadowRoot","querySelector","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","top","height","dropdownFlipped","classList","remove","add","previouslySelected","currentOptionElement","currentOptionValue","getAttribute","currentListOfOptions","map","Object","assign","currentOption","findInOptions","renderOption","index","isIndeterminate","isSelected","isOptionSelected","disableCheckbox","uniqueId","h","class","onClick","tabindex","role","ref","id","htmlFor","childIndex","renderSubOption","persistentOption","selectedChildren","foundInChildren","render","selectedOptionsLabels","parentOption","join","onKeyDown","placeholder","onScroll","style","toString","searchEnabled","type","onInput","icon","key","TextField","valueWatcher","newValue","inputElement","reset","handleInput","query","ifxInput","optional","required","success","caption"],"sourceRoot":""}