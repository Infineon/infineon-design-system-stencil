{"version":3,"file":"static/js/3884.b0c56b94.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.scss?tag=ifx-multiselect&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/text-field/text-field.scss?tag=ifx-text-field&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/text-field/text-field.tsx"],"sourcesContent":["import { Component, Prop, State, Event, EventEmitter, Element, h, Watch } from '@stencil/core';\nimport { Option } from './interfaces';\n\n// Debounce function\nfunction debounce(func, wait) {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\n@Component({\n  tag: 'ifx-multiselect',\n  styleUrl: 'multiselect.scss',\n  shadow: true\n})\n\n\n\nexport class Multiselect {\n\n  @Prop() options: any[] | string;\n  @Prop() batchSize: number = 50;\n  @Prop() size: string = 'medium (40px)';\n  @Prop() disabled: boolean = false;\n  @Prop() error: boolean = false;\n  @State() internalError: boolean = false;\n  @Prop() errorMessage: string = \"Error\";\n  @Prop() label: string = \"\";\n  @State() persistentSelectedOptions: Option[] = [];\n  @Prop() placeholder: string = \"\";\n  @State() listOfOptions: Option[] = [];\n  @State() dropdownOpen = false;\n  @State() dropdownFlipped: boolean;\n  @Prop() maxItemCount: number;\n  @State() zIndex: number = 1; // default z-index value\n  static globalZIndex = 1; // This will be shared among all instances of the component.\n  private currentIndex: number = 0; //needed for option selection using keyboard\n  @State() isLoading: boolean = false;\n  @State() loadedOptions: Option[] = [];\n  @State() filteredOptions: Option[] = [];\n  @Prop() searchEnabled: boolean = true\n\n\n  @Event() ifxSelect: EventEmitter;\n  @Event() ifxMultiselectIsOpen: EventEmitter;\n\n  @Element() el: HTMLElement;\n  dropdownElement!: HTMLElement;\n\n\n  async loadInitialOptions() {\n    this.isLoading = true;\n    this.internalError = this.error;\n    // Load the first batch of options (e.g., first 20)\n    this.loadedOptions = await this.fetchOptions(0, this.batchSize);\n    this.isLoading = false;\n  }\n\n  async fetchMoreOptions() {\n    this.isLoading = true;\n    const moreOptions = await this.fetchOptions(this.loadedOptions.length, this.batchSize);\n    this.loadedOptions = [...this.loadedOptions, ...moreOptions];\n    this.isLoading = false;\n  }\n\n\n  handleScroll(event: UIEvent) {\n    const element = event.target as HTMLElement;\n    const halfwayPoint = Math.floor((element.scrollHeight - element.clientHeight) / 2); //loading more options when the user has scrolled halfway through the current list\n\n    if (element.scrollTop >= halfwayPoint) {\n      this.fetchMoreOptions();\n    }\n  }\n\n\n\n\n  async fetchOptions(startIndex: number, count: number): Promise<Option[]> {\n    let allOptions: Option[] = [];\n\n    // Parse options if it's a string, or use directly if it's an array\n    if (typeof this.options === 'string') {\n      try {\n        allOptions = JSON.parse(this.options);\n      } catch (err) {\n        console.error('Failed to parse options:', err);\n      }\n    } else if (Array.isArray(this.options)) {\n      allOptions = this.options;\n    } else {\n      console.error('Unexpected value for options:', this.options);\n    }\n\n    // Slice the options array based on startIndex and count\n    const slicedOptions = allOptions.slice(startIndex, startIndex + count);\n\n    // Update the state for initially selected options, if needed\n    if (startIndex === 0) { // Assuming you want to do this only for the first batch\n      const initiallySelected = slicedOptions.filter(option => option.selected);\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...initiallySelected];\n    }\n\n    return slicedOptions;\n  }\n\n\n  handleSearch = debounce((targetElement: HTMLInputElement) => {\n    const searchTerm = targetElement.value.toLowerCase();\n    if (searchTerm === '') {\n      this.filteredOptions = this.loadedOptions;\n    } else {\n      this.filteredOptions = this.loadedOptions.filter(option => option.label.toLowerCase().includes(searchTerm))\n    }\n  }, 300);\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.positionDropdown();\n    }, 500);\n\n    // setInterval(this.handleScroll, 5000); // Runs every 5 seconds (5000 milliseconds)\n\n\n  }\n\n\n  componentWillLoad() {\n    this.loadInitialOptions();\n    this.filteredOptions = [...this.loadedOptions];\n  }\n\n  @Watch('error')\n  updateInternalError() {\n    this.internalError = this.error;\n  }\n\n  @Watch('loadedOptions')\n  loadedOptionsChanged() {\n    this.filteredOptions = [...this.loadedOptions];\n  }\n\n\n  handleOptionClick(option: Option) {\n    this.internalError = false;\n\n    if (this.isSelectionLimitReached(option)) {\n      console.error('Max item count reached');\n      this.internalError = true;\n      this.errorMessage = \"Please consider the maximum number of items to choose from\";\n      return;\n    }\n\n    this.updateSelection(option);\n    this.ifxSelect.emit(this.persistentSelectedOptions);\n  }\n\n\n  isSelectionLimitReached(option: Option): boolean {\n    let newOptionsLength = option.children ? option.children.length : 1;\n    return this.maxItemCount && this.persistentSelectedOptions.length + newOptionsLength > this.maxItemCount &&\n      !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value)\n  }\n\n  updateSelection(option: Option) {\n    const wasSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n\n    if (option.children && option.children.length > 0) {\n      this.handleParentOptionClick(option);\n    } else {\n      this.handleChildOptionClick(option, wasSelected);\n    }\n  }\n\n  handleParentOptionClick(option: Option) {\n    const allChildrenSelected = option.children.every(child =>\n      this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value)\n    );\n\n    if (allChildrenSelected) {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions.filter(\n        selectedOption => !option.children.some(child => child.value === selectedOption.value)\n      )];\n    } else {\n      const newChildren = [...option.children.filter(childOption =>\n        !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === childOption.value)\n      )];\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...newChildren];\n    }\n  }\n\n  handleChildOptionClick(option: Option, wasSelected: boolean) {\n    if (wasSelected) {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value)];\n    } else {\n      this.persistentSelectedOptions = [...this.persistentSelectedOptions, option];\n    }\n  }\n\n\n\n\n\n\n  handleDocumentClick = (event: Event) => {\n    const path = event.composedPath();\n    if (!path.includes(this.dropdownElement)) {\n      this.dropdownOpen = false;\n      document.removeEventListener('click', this.handleDocumentClick);\n\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }\n  }\n\n  getSizeClass() {\n    return `${this.size}` === \"s\"\n      ? \"small-select\"\n      : \"medium-select\";\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    setTimeout(() => {\n      if (this.dropdownOpen) {\n        document.addEventListener('click', this.handleDocumentClick);\n      }\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }, 0);\n    this.zIndex = Multiselect.globalZIndex++;\n  }\n\n\n  waitForElement(querySelectorFunc: Function, callback: Function, maxTries = 50) {\n    let tries = 0;\n    function request() {\n      requestAnimationFrame(() => {\n        const elements = querySelectorFunc();\n        if (elements.length > 0 || tries > maxTries) {\n          callback(elements);\n        } else {\n          tries++;\n          request();\n        }\n      });\n    }\n    request();\n  }\n\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return; // If it's disabled, don't do anything.\n\n    const options = this.dropdownElement.querySelectorAll('.option');\n\n    switch (event.code) {\n      case 'Enter' || 'Space':\n        if (this.dropdownOpen) {\n          this.selectItem(options);\n        } else {\n          this.toggleDropdown();\n          // Wait a bit for the dropdown to finish rendering\n          this.waitForElement(() => {\n            return this.dropdownElement.querySelectorAll('.option');\n          }, (options) => {\n            this.updateHighlightedOption(options);\n          });\n        }\n        break;\n      case 'ArrowDown':\n        this.handleArrowDown(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n      case 'ArrowUp':\n        this.handleArrowUp(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n    }\n  }\n\n  handleWrapperClick(event: MouseEvent) {\n    // This is your existing logic for positioning the dropdown\n    this.positionDropdown();\n\n    // Check if the event target is the wrapper itself and not a child element.\n    if (event.currentTarget === event.target) {\n      this.toggleDropdown();\n    }\n  }\n\n  clearSelection() {\n    this.persistentSelectedOptions = [];\n    this.ifxSelect.emit(this.persistentSelectedOptions); // if you want to emit empty selection after clearing\n  }\n\n  positionDropdown() {\n    const wrapperRect = this.el.shadowRoot.querySelector('.ifx-multiselect-wrapper')?.getBoundingClientRect();\n    const spaceBelow = window.innerHeight - wrapperRect.bottom;\n    const spaceAbove = wrapperRect.top;\n\n    // If there's more space above than below the trigger and the dropdown doesn't fit below\n    if ((spaceAbove > spaceBelow && wrapperRect.height > spaceBelow) || (wrapperRect.bottom > window.innerHeight)) {\n      this.dropdownFlipped = true;\n    } else {\n      this.dropdownFlipped = false;\n    }\n  }\n\n\n\n  // Helper function to update highlighted option based on currentIndex\n  private updateHighlightedOption(options: NodeList) {\n    // Clear all highlights\n    options.forEach((option: Element) => option.classList.remove('is-highlighted'));\n\n    // Apply highlight to the current option\n    if (this.currentIndex >= 0 && this.currentIndex < options.length) {\n      (options[this.currentIndex] as Element).classList.add('is-highlighted');\n    }\n  }\n\n  // Helper function to handle arrow down navigation\n  private handleArrowDown(options: NodeList) {\n    if (this.currentIndex < options.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0; // Wrap to the beginning.\n    }\n  }\n\n  // Helper function to handle arrow up navigation\n  private handleArrowUp(options: NodeList) {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = options.length - 1; // Wrap to the end.\n    }\n  }\n\n  private selectItem(options: NodeList) {\n    // If there's a previous selection, remove its \"selected\" class\n    const previouslySelected = this.dropdownElement.querySelector('.option.selected');\n    if (previouslySelected) {\n      previouslySelected.classList.remove('selected');\n    }\n\n    // Mark the current item as selected\n    const currentOptionElement = options[this.currentIndex] as Element;\n    currentOptionElement.classList.add('selected');\n\n    const currentOptionValue = currentOptionElement.getAttribute('data-value');\n    const currentListOfOptions = typeof this.options === 'string' //passed in string form via storybook\n      ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n      : this.options.map(option => ({ ...option }));\n\n    const currentOption = this.findInOptions(currentListOfOptions, currentOptionValue); // get the option object based on the currently selected value and the options array\n    this.handleOptionClick(currentOption);\n  }\n\n\n  renderOption(option: Option, index: number) {\n    const isIndeterminate = this.isOptionIndeterminate(option);\n    const isSelected = option.children ? isIndeterminate || this.isOptionSelected(option) : this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`; // Generate a unique ID using the index\n\n    return (\n      <div>\n        <div class={`option ${isSelected ? 'selected' : ''} \n        ${this.getSizeClass()}`}\n          data-value={option.value}\n          onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n          tabindex=\"0\"\n          role={`${option.children?.length > 0 ? \"treeitem\" : \"option\"}`}\n        >\n          <ifx-checkbox id={uniqueId} size=\"s\" value={isIndeterminate ? false : isSelected} indeterminate={isIndeterminate} disabled={disableCheckbox}></ifx-checkbox>\n          <label htmlFor={uniqueId}>{option.label}</label>\n        </div>\n        {option.children && option.children.map((child, childIndex) => this.renderSubOption(child, `${index}-${childIndex}`))}\n      </div>\n    );\n  }\n\n  isOptionSelected(option: Option): boolean {\n    if (!option.children) return false;\n\n    return option.children.every(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    );\n  }\n\n\n  isOptionIndeterminate(option: Option): boolean {\n    if (!option.children) return false;\n\n    const selectedChildren = option.children.filter(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    ).length;\n\n    return selectedChildren > 0 && selectedChildren < option.children.length;\n  }\n\n\n  findInOptions(options: Option[], searchTerm: string): Option | null {\n    for (const option of options) {\n      if (option.value === searchTerm) {\n        return option;\n      }\n      if (option.children) {\n        const foundInChildren = this.findInOptions(option.children, searchTerm);\n        if (foundInChildren) {\n          return foundInChildren;\n        }\n      }\n    }\n    return null;\n  }\n\n\n  renderSubOption(option: Option, index: string) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`;\n\n    return (\n      <div class={`option sub-option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n        data-value={option.value}\n        role={`${option.children?.length > 0 ? \"option\" : \"treeitem\"}`}\n        onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n        tabindex=\"0\">\n        <ifx-checkbox id={uniqueId} size=\"s\" value={isSelected} disabled={disableCheckbox}></ifx-checkbox>\n        <label htmlFor={uniqueId}>{option.label}</label>\n      </div>\n    );\n  }\n\n  render() {\n    // Create a label for the selected options\n    const selectedOptionsLabels = this.persistentSelectedOptions\n      .filter(option => {\n        // check if option is a child and its parent is selected\n        const isChildSelectedWithParent = this.persistentSelectedOptions.some(parentOption =>\n          parentOption.children &&\n          parentOption.children.some(child => child.value === option.value) &&\n          parentOption.selected\n        );\n        return !isChildSelectedWithParent;\n      })\n      .map(option => option.label)\n      .join(', ');\n\n    return (\n      <div class={`ifx-multiselect-container`} ref={el => this.dropdownElement = el as HTMLElement}>\n        {\n          this.label ?\n            <div class=\"ifx-label-wrapper\">\n              <span>{this.label}</span>\n            </div> : null\n        }\n        <div class={`ifx-multiselect-wrapper \n        ${this.getSizeClass()} \n        ${this.dropdownOpen ? 'active' : ''} \n        ${this.dropdownFlipped ? 'is-flipped' : ''}\n        ${this.internalError ? 'error' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n          tabindex=\"0\"\n          onClick={(event) => this.handleWrapperClick(event)}\n          onKeyDown={(event) => this.handleKeyDown(event)} >\n          <div class={`ifx-multiselect-input \n          ${this.persistentSelectedOptions.length === 0 ? 'placeholder' : \"\"}\n          `}\n            onClick={this.disabled ? undefined : () => this.toggleDropdown()}\n          >\n            {this.persistentSelectedOptions.length > 0 ? selectedOptionsLabels : this.placeholder}\n          </div>\n          {this.dropdownOpen && (\n            <div class=\"ifx-multiselect-dropdown-menu\"\n              onScroll={(event) => this.handleScroll(event)}\n              style={{ '--dynamic-z-index': this.zIndex.toString() }}>\n              {this.searchEnabled && <input type=\"text\" role=\"textbox\" class=\"search-input\" onInput={(event) => this.handleSearch(event.target)} placeholder=\"Search...\"></input>}\n              {this.filteredOptions.map((option, index) => this.renderOption(option, index))}\n              {this.isLoading && <div>Loading more options...</div>}\n            </div>\n          )}\n          <div class=\"ifx-multiselect-icon-container\">\n\n            {/* Clear Button - will show only if there's a selection */}\n            {this.persistentSelectedOptions.length > 0 && (\n              <div class=\"ifx-clear-button\" onClick={() => this.clearSelection()}>\n                <ifx-icon icon=\"cremove24\"></ifx-icon>\n              </div>\n            )}\n            <div class=\"icon-wrapper-up\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-up'\n                icon='chevronup-16'></ifx-icon>\n            </div>\n            <div class=\"icon-wrapper-down\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-down'\n                icon='chevron-down-16'></ifx-icon>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.internalError ?\n            <div class=\"ifx-error-message-wrapper\">\n              <span>{this.errorMessage}</span>\n            </div> : null\n        }\n      </div>\n    );\n  }\n\n}\n","// @import '~choices.js/public/assets/styles/choices.css';\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.ifx-multiselect-container {\n  position: relative;\n  box-sizing: border-box;\n  font-family: var(--ifx-font-family);\n\n  &.small-select {\n    height: 36px;\n  }\n\n  &.medium-select {\n    height: 40px;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n\n  .ifx-label-wrapper {\n    font-size: tokens.$ifxFontSizeM;\n    line-height: tokens.$ifxLineHeightM;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-error-message-wrapper {\n    color: #CD002F;\n    font-size: tokens.$ifxFontSizeXs;\n    line-height: tokens.$ifxLineHeightXs;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-multiselect-wrapper {\n    background-color: tokens.$ifxColorBaseWhite;\n    box-sizing: border-box;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid tokens.$ifxColorEngineering400;\n    border-radius: tokens.$ifxBorderRadius12;\n    width: 100%;\n    font-weight: 400;\n    font-style: normal;\n\n\n    &.small-select {\n      height: 36px;\n      padding: 8px 12px;\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n    }\n\n    &.medium-select {\n      height: 40px;\n      padding: 8px 16px;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n    }\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus-visible:not(.active):not(:active) {\n      outline: none;\n\n      &::before {\n        content: '';\n        position: absolute;\n        width: calc(100% + 4px);\n        height: calc(100% + 4px);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 2px solid tokens.$ifxColorOcean500;\n        border-radius: 2px;\n\n      }\n    }\n\n    &.disabled {\n      background: tokens.$ifxColorEngineering200;\n      color: #575352;\n      border-color: #575352;\n      cursor: not-allowed;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    &.error {\n      border-color: #CD002F;\n    }\n\n    &:hover:not(.focus, :focus) {\n      border-color: tokens.$ifxColorEngineering500;\n    }\n\n    &.active {\n      border-color: tokens.$ifxColorOcean500 !important; // Active border color\n\n      & .icon-wrapper-up {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding-left: tokens.$ifxSpace100;\n      }\n\n      & .icon-wrapper-down {\n        display: none\n      }\n    }\n\n\n    & .icon-wrapper-up {\n      display: none;\n    }\n\n    & .icon-wrapper-down {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      padding-left: tokens.$ifxSpace100;\n    }\n\n    &.is-flipped {\n      .ifx-multiselect-dropdown-menu {\n        top: auto;\n        bottom: 100%;\n      }\n    }\n  }\n\n  .ifx-multiselect-input {\n    flex-grow: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &.placeholder {\n      opacity: 0.5;\n    }\n\n  }\n\n\n  .ifx-multiselect-icon-container {\n    margin-left: auto;\n    align-items: center;\n    display: flex;\n  }\n\n\n  .ifx-clear-button {\n    margin-right: tokens.$ifxSpace100; // Space between clear button and icons\n    display: flex;\n  }\n\n  .ifx-multiselect-dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0px 6px 9px 0px rgba(29, 29, 29, 0.10);\n    max-height: 300px;\n    /* Adjust based on your design */\n    overflow-y: auto;\n    z-index: var(--dynamic-z-index, 1); // Fallback to 1\n\n    .search-input {\n      // position: sticky;\n      // top: 0;\n      // z-index: 2;\n      width: 100%;\n      padding: 8px 16px;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      font-style: normal;\n      font-weight: 400;\n      box-sizing: border-box;\n      background-color: tokens.$ifxColorBaseWhite;\n      border: none;\n      border-bottom: 1px solid tokens.$ifxColorEngineering400;\n\n      &:focus {\n        outline: none;\n        border: 1px solid tokens.$ifxColorOcean500;\n      }\n\n      // Optional: Placeholder style\n      &::placeholder {\n        color: #999;\n      }\n    }\n  }\n\n  .option {\n    position: relative;\n    padding: 8px 16px;\n    gap: 8px;\n    align-items: center;\n    display: flex;\n    font-style: normal;\n    font-weight: 400;\n\n    &.small-select {\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n    }\n\n    &.medium-select {\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n    }\n\n    &:hover {\n      background-color: tokens.$ifxColorEngineering200;\n    }\n\n    &:focus {\n      background-color: tokens.$ifxColorEngineering300;\n      outline: none;\n    }\n\n    &.is-highlighted {\n      background-color: tokens.$ifxColorEngineering200;\n      ;\n    }\n\n    &.selected {\n      // color: #0A8276;\n    }\n\n    &.sub-option {\n      padding-left: 30px;\n      /* or however much indentation you want */\n    }\n  }\n\n\n\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.textInput__container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 0px;\n  width: 100%;\n  flex: none;\n  order: 0;\n  align-self: stretch;\n  flex-grow: 0;\n  font-family: var(--ifx-font-family);\n\n\n  &.disabled {\n    & .textInput__top-wrapper {\n      & label {\n        color: tokens.$ifxColorEngineering500;\n      }\n    }\n\n    & .textInput__bottom-wrapper {\n      input {\n        border: 1px solid tokens.$ifxColorEngineering500;\n        background-color: tokens.$ifxColorEngineering200;\n\n        &::placeholder {\n          font-size: tokens.$ifxFontSizeS;\n          color: tokens.$ifxColorEngineering500;\n        }\n      }\n    }\n  }\n\n  & .textInput__top-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 4px;\n    flex: none;\n    order: 0;\n    align-self: stretch;\n    flex-grow: 0;\n\n    & label {\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      display: flex;\n      align-items: center;\n      color: tokens.$ifxColorBaseBlack;\n      flex: none;\n      order: 0;\n      flex-grow: 0;\n\n      & .optional-required {\n        margin-left: 4px;\n      }\n\n      & .optional {\n        margin-left: 4px;\n      }\n\n      & .required {\n        margin-left: 4px;\n      }\n    }\n  }\n\n  .input-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 100%;\n  }\n\n\n  & .textInput__bottom-wrapper {\n    flex-grow: 1;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 0px;\n    gap: 4px;\n    flex: none;\n    order: 1;\n    align-self: stretch;\n    flex-grow: 0;\n\n    & input {\n      width: 100%;\n      box-sizing: border-box;\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n      gap: tokens.$ifxSpace100;\n      height: tokens.$ifxSize500;\n      background-color: tokens.$ifxColorBaseWhite;\n      color: tokens.$ifxColorBaseBlack;\n      font-family: tokens.$ifxFontFamilyBody;\n      font-size: tokens.$ifxFontSizeM;\n      line-height: tokens.$ifxLineHeightM;\n      border: 1px solid tokens.$ifxColorEngineering400;\n      border-radius: tokens.$ifxBorderRadius12;\n      flex: none;\n      order: 0;\n      align-self: stretch;\n      flex-grow: 0;\n      text-overflow: ellipsis;\n\n      &.input-s {\n        height: tokens.$ifxSize450;\n        font-size: tokens.$ifxFontSizeS;\n        line-height: tokens.$ifxLineHeightS;\n\n        &::placeholder {\n          font-size: tokens.$ifxFontSizeS;\n          line-height: tokens.$ifxLineHeightS;\n        }\n\n      }\n\n      &.icon {\n        padding-left: tokens.$ifxSpace500;\n      }\n\n      &.error {\n        border: 1px solid #CD002F;\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n      &.success {\n        border: 1px solid #4CA460;\n\n        &:focus {\n          outline: none;\n        }\n      }\n\n\n      &:focus:not(.error, .success) {\n        outline: none;\n        border: 1px solid tokens.$ifxColorOcean500;\n      }\n\n      &:hover:not(:disabled, :focus, .error, .success) {\n        border: 1px solid tokens.$ifxColorEngineering500;\n      }\n\n      &::placeholder {\n        font-style: normal;\n        font-weight: 400;\n        font-size: tokens.$ifxFontSizeM;\n        line-height: tokens.$ifxLineHeightM;\n        color: #8D8786;\n        flex: none;\n        order: 1;\n        flex-grow: 1;\n      }\n    }\n\n    & ifx-icon {\n      // Position the icon within the icon container\n      // Adjust the positioning as needed\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n      left: tokens.$ifxSpace200;\n      /* Adjust this value to control the icon's left offset */\n      transition: .3s;\n      color: tokens.$ifxColorEngineering400;\n    }\n\n    & .textInput__bottom-wrapper-caption {\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeXs;\n      line-height: tokens.$ifxLineHeightXs;\n      letter-spacing: 0.2px;\n      color: tokens.$ifxColorBaseBlack;\n      flex: none;\n      order: 1;\n      align-self: stretch;\n      flex-grow: 0;\n\n      &.error {\n        color: #CD002F;\n\n      }\n\n      &.disabled {\n        color: tokens.$ifxColorEngineering500;\n      }\n    }\n\n  }\n}","import { Component, h, Event, Element, Prop, EventEmitter, Watch, Method } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-text-field',\n  styleUrl: 'text-field.scss',\n  shadow: true\n})\n\nexport class TextField {\n  private inputElement: HTMLInputElement;\n  @Element() el;\n  @Prop() placeholder: string = \"Placeholder\"\n  @Prop({ mutable: true }) value: string = '';\n  @Prop() error: boolean = false;\n  @Prop() label: string = \"\";\n  @Prop() icon: string = \"\";\n  @Prop() caption: string = \"\";\n  @Prop() size: string = 'm';\n  @Prop() required: boolean = false;\n  @Prop() optional: boolean = false;\n  @Prop() success: boolean = false;\n  @Prop() disabled: boolean = false;\n  @Event() ifxInput: EventEmitter<String>;\n  // @Prop({ reflect: true })\n  // resetOnSubmit: boolean = false;\n\n\n  @Watch('value')\n  valueWatcher(newValue: string) {\n    if (newValue !== this.inputElement.value) {\n      this.inputElement.value = newValue;\n    }\n  }\n\n  @Method()\n  async reset() {\n    this.value = '';\n    this.inputElement.value = '';\n  }\n\n\n  handleInput() {\n    const query = this.inputElement.value;\n    this.value = query; // update the value property when input changes\n    this.ifxInput.emit(this.value);\n  }\n\n  render() {\n    return (\n      <div aria-label=\"a text field for user input\" aria-value={this.value} aria-disabled={this.disabled} class={`textInput__container ${this.disabled ? 'disabled' : \"\"}`}>\n        <div class=\"textInput__top-wrapper\">\n          <label htmlFor=\"text-field\">\n            <slot></slot>\n            {this.optional && this.required ? (\n              <span class=\"optional-required\">(optional) *</span>\n            ) : this.optional ? (\n              <span class=\"optional\">(optional)</span>\n            ) : this.required ? (\n              <span class=\"required\">*</span>\n            ) : null}\n          </label>\n        </div>\n\n        <div class=\"textInput__bottom-wrapper\">\n          <div class=\"input-container\">\n            {this.icon && (\n              <ifx-icon icon={this.icon} />\n            )}\n            <input\n              ref={(el) => (this.inputElement = el)}\n              disabled={this.disabled}\n              type=\"text\"\n              id='text-field'\n              value={this.value}\n              onInput={() => this.handleInput()}\n              placeholder={this.placeholder}\n              class={\n                `${this.icon ? 'icon' : \"\"}\n                ${this.error ? 'error' : \"\"} \n              ${this.size === \"s\" ? \"input-s\" : \"\"}\n              ${this.success ? \"success\" : \"\"}`} />\n          </div>\n          {this.caption && !this.error &&\n            <div class={`textInput__bottom-wrapper-caption ${this.disabled} ? disabled : \"\"`}>\n              {this.caption}\n            </div>}\n          {this.error &&\n            <div class=\"textInput__bottom-wrapper-caption error\">\n              {this.caption}\n            </div>}\n        </div>\n      </div>\n    );\n  }\n}\n"],"names":["Multiselect","currentIndex","handleSearch","func","wait","timeout","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","later","debounce","targetElement","searchTerm","value","toLowerCase","this","filteredOptions","loadedOptions","filter","option","label","includes","handleDocumentClick","event","composedPath","dropdownElement","dropdownOpen","document","removeEventListener","ifxMultiselectIsOpen","emit","loadInitialOptions","isLoading","internalError","error","fetchOptions","batchSize","fetchMoreOptions","moreOptions","handleScroll","element","target","halfwayPoint","Math","floor","scrollHeight","clientHeight","scrollTop","startIndex","count","allOptions","options","JSON","parse","err","console","isArray","slicedOptions","slice","initiallySelected","selected","persistentSelectedOptions","componentDidLoad","positionDropdown","componentWillLoad","updateInternalError","loadedOptionsChanged","handleOptionClick","isSelectionLimitReached","errorMessage","updateSelection","ifxSelect","newOptionsLength","children","maxItemCount","some","selectedOption","wasSelected","handleParentOptionClick","handleChildOptionClick","every","child","newChildren","childOption","getSizeClass","concat","size","toggleDropdown","addEventListener","zIndex","globalZIndex","waitForElement","querySelectorFunc","callback","maxTries","undefined","tries","request","requestAnimationFrame","elements","handleKeyDown","disabled","querySelectorAll","code","selectItem","updateHighlightedOption","handleArrowDown","handleArrowUp","handleWrapperClick","currentTarget","clearSelection","wrapperRect","_a","el","shadowRoot","querySelector","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","top","height","dropdownFlipped","forEach","classList","remove","add","previouslySelected","currentOptionElement","currentOptionValue","getAttribute","currentListOfOptions","map","Object","assign","currentOption","findInOptions","renderOption","index","isIndeterminate","isOptionIndeterminate","isSelected","isOptionSelected","disableCheckbox","uniqueId","h","class","onClick","tabindex","role","id","indeterminate","htmlFor","childIndex","renderSubOption","persistentOption","selectedChildren","foundInChildren","render","selectedOptionsLabels","parentOption","join","ref","onKeyDown","placeholder","onScroll","style","toString","searchEnabled","type","onInput","icon","key","TextField","valueWatcher","newValue","inputElement","reset","handleInput","query","ifxInput","optional","required","success","caption"],"sourceRoot":""}