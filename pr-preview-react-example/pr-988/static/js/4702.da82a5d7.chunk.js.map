{"version":3,"file":"static/js/4702.da82a5d7.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx"],"sourcesContent":["//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.tabs {\n  display: flex;\n  font-family: var(--ifx-font-family);\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$ifxFontWeightSemibold;\n}\n\n.tabs-list:focus-within .active-border {\n  display: none;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tabs.vertical .tab-content {\n  padding-top: 0px;\n  padding-left: 32px;\n}\n\n.tab-item {\n  // Reduced padding values\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n  \n  &.icon__right {\n    flex-direction: row-reverse;\n    justify-content: flex-end;\n  }\n  \n  &:hover {\n    color: tokens.$ifxColorOcean500;\n  }\n  \n  &:active,\n  &.active {\n    color: tokens.$ifxColorOcean500;\n  }\n\n  &:focus,\n  &.focus {\n    outline: none;\n    border-radius: 1px;\n    box-shadow: 0 0 0 2px tokens.$ifxColorBaseWhite, 0 0 0 4px tokens.$ifxColorOcean500;\n    \n    // Assuming .active-border is a sibling of .tab-item\n    +.active-border {\n      display: none; // Hide the active border when the tab is in focus\n    }\n  }\n  \n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n    pointer-events: none;\n  }\n}\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n\n.tab-content {\n  padding-top: 24px;\n  padding-left: 0px;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: tokens.$ifxFontSizeS;\n}","//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Event, EventEmitter, Watch } from '@stencil/core';\n \n\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n\n  @Prop() orientation: string = \"horizontal\";\n  @Prop({ mutable: true }) activeTabIndex: number = 0;\n\n  @State() internalOrientation: string;\n  @State() internalActiveTabIndex: number = 0;\n  @State() internalFocusedTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() disabledTabs: string[] = [];\n  @State() tabObjects: any[] = [];\n\n  @Event() ifxTabChange: EventEmitter;\n\n\n  setActiveAndFocusedTab(index: number) {\n    if (index >= this.tabObjects.length) {\n      index = this.tabObjects.length - 1;\n    }\n    if (!this.tabObjects[index].disabled) {\n      this.internalActiveTabIndex = index;\n      this.internalFocusedTabIndex = index;\n    }\n  }\n\n  @Watch('activeTabIndex')\n  activeTabIndexChanged(newValue: number, oldValue: number) {\n    if (newValue !== oldValue) {\n      this.setActiveAndFocusedTab(newValue);\n    }\n  }\n\n\n\n  componentWillLoad() {\n    this.internalOrientation = this.orientation.toLowerCase() === 'vertical' ? 'vertical' : 'horizontal';\n    if (this.internalActiveTabIndex !== this.activeTabIndex) {\n      this.ifxTabChange.emit({ previousTab: this.internalActiveTabIndex, currentTab: this.activeTabIndex });\n    };\n    this.onSlotChange();\n    this.setActiveAndFocusedTab(this.activeTabIndex);\n    this.updateTabStyles();\n  }\n\n  updateTabStyles() {\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.classList.toggle('active', index === this.internalActiveTabIndex);\n      tab.setAttribute('aria-selected', index === this.internalActiveTabIndex ? 'true' : 'false')\n    });\n  }\n\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.internalActiveTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    this.tabObjects = Array.from(tabs).map((tab) => {\n      return {\n        header: tab?.header,\n        disabled: tab?.disabled === true,\n        icon: tab?.icon,\n        iconPosition: tab?.iconPosition\n      }\n    });\n\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentDidLoad() {\n    this.updateBorderAndFocus();\n    // Add keyboard event listeners for each tab header\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.addEventListener('focus', this.onTabFocus(index));\n    });\n\n  }\n\n  onTabFocus(index) {\n    return () => {\n      this.internalFocusedTabIndex = index;\n    };\n  }\n\n  disconnectedCallback() {\n    // Remove keyboard event listeners when component is unmounted\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.removeEventListener('focus', this.onTabFocus(index));\n    });\n  }\n  componentDidUpdate() {\n    this.updateBorderAndFocus();\n  }\n\n  private updateBorderAndFocus() {\n    this.reRenderBorder()\n    this.updateTabFocusability();\n  }\n\n  private updateTabFocusability() {\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.tabIndex = index === this.internalActiveTabIndex ? 0 : -1;\n    })\n  }\n\n\n  private focusNextTab() {\n    let nextIndex = this.internalFocusedTabIndex + 1;\n    while (nextIndex < this.tabHeaderRefs.length && this.tabObjects[nextIndex].disabled) {\n      nextIndex++;\n    }\n    if (nextIndex >= 0 && nextIndex < this.tabHeaderRefs.length) {\n      this.internalFocusedTabIndex = nextIndex;\n      this.tabHeaderRefs[nextIndex].focus();\n    }\n  }\n\n  private focusPreviousTab() {\n    let prevIndex = this.internalFocusedTabIndex - 1;\n    while ((prevIndex >= 0) && (this.tabObjects[prevIndex].disabled)) {\n      prevIndex--;\n    }\n    if ((prevIndex >= 0) && (prevIndex < this.tabHeaderRefs.length)) {\n      this.internalFocusedTabIndex = prevIndex;\n      this.tabHeaderRefs[prevIndex].focus();\n    }\n  }\n\n\n  private getTabItemClass(index: number) {\n    const isActive = index === this.internalActiveTabIndex && !this.tabObjects[index].disabled;\n    const isDisabled = this.tabObjects[index].disabled;\n    const iconPosition = this.tabObjects[index].iconPosition\n    return `tab-item ${isActive ? 'active' : ''} ${isDisabled ? 'disabled' : ''} ${'icon__'+iconPosition}`;\n  }\n\n  private handleClick(tab, index) {\n    this.ifxTabChange.emit({ previousTab: this.internalActiveTabIndex, currentTab: index })\n    if (!tab.disabled) this.internalActiveTabIndex = index;\n\n  }\n\n\n\n  @Listen('keydown')\n  handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === 'Tab') {\n\n      if (ev.shiftKey) {\n        // Shift + Tab\n        if (this.internalFocusedTabIndex === 0) {\n          // Allow default behavior to move focus out of component\n          return;\n        } else {\n          ev.preventDefault();\n          this.focusPreviousTab();\n        }\n      } else {\n        // Tab\n        if (this.internalFocusedTabIndex === this.tabHeaderRefs.length - 1) {\n          // Allow default behavior to move focus out of component\n          return;\n        } else {\n          ev.preventDefault();\n          this.focusNextTab();\n        }\n      }\n    } else if (ev.key === 'Enter') {\n      if (this.internalFocusedTabIndex !== -1 && !this.tabObjects[this.internalFocusedTabIndex].disabled) {\n        const previouslyActiveTabIndex = this.internalActiveTabIndex;\n        this.internalActiveTabIndex = this.internalFocusedTabIndex;\n        this.ifxTabChange.emit({ previousTab: previouslyActiveTabIndex, currentTab: this.internalFocusedTabIndex })\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div aria-label=\"navigation tabs\" class={`tabs ${this.internalOrientation}`}>\n        <ul role=\"tablist\" class=\"tabs-list\">\n          {this.tabObjects?.map((tab, index) => (\n            <li\n              class={this.getTabItemClass(index)}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n              tabindex=\"0\"\n              onClick={() => this.handleClick(tab, index)}\n              aria-selected={index === this.internalActiveTabIndex ? 'true' : 'false'}\n              aria-disabled={tab.disabled ? 'true' : 'false'}\n              role=\"tab\"\n            > \n              {tab?.icon ? <ifx-icon icon = {tab.icon}></ifx-icon> : ''}\n              {tab?.header}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabObjects).map((_, index) => (\n            <div style={{ display: index === this.internalActiveTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}"],"names":["IfxTabs","setActiveAndFocusedTab","index","this","tabObjects","length","disabled","internalActiveTabIndex","internalFocusedTabIndex","activeTabIndexChanged","newValue","oldValue","componentWillLoad","internalOrientation","orientation","toLowerCase","activeTabIndex","ifxTabChange","emit","previousTab","currentTab","onSlotChange","updateTabStyles","tabHeaderRefs","forEach","tab","classList","toggle","setAttribute","reRenderBorder","borderElement","el","shadowRoot","querySelector","style","left","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","tabs","querySelectorAll","Array","from","map","header","icon","iconPosition","tabRefs","setDefaultOrientation","lowercaseOrientation","includes","componentDidLoad","updateBorderAndFocus","addEventListener","onTabFocus","disconnectedCallback","removeEventListener","componentDidUpdate","updateTabFocusability","tabIndex","focusNextTab","nextIndex","focus","focusPreviousTab","prevIndex","getTabItemClass","handleClick","handleKeyDown","ev","key","shiftKey","preventDefault","previouslyActiveTabIndex","render","h","class","role","_a","ref","tabindex","onClick","_","display","name"],"sourceRoot":""}