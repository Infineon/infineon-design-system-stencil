{"version":3,"file":"static/js/565.a8e1c682.chunk.js","mappings":"wKAAA,MCOaA,EAAY,M,wIAGK,E,mEAGO,C,CAKnCC,YAAAA,CAAaC,GACXC,KAAKC,KAAKC,aAAa,QAASH,EAASI,W,CAI3CC,wBAAAA,CAAyBC,GAEvB,MAAMC,EAAiBN,KAAKC,KAAKM,cAAcC,cAAc,kCAADC,OAAmCT,KAAKU,WAAU,OAC9G,GAAIJ,GAAkBA,IAAmBN,KAAKC,KAC5C,MAAM,IAAIU,MAAM,kCAADF,OAAmCT,KAAKU,WAAU,sBAQnEV,KAAKY,YAAcP,EAAMQ,OACzBb,KAAKc,eAAsC,KAArBd,KAAKY,YAC3BZ,KAAKe,sBAAsBC,KAAK,CAAEN,WAAYV,KAAKU,WAAYE,YAAaZ,KAAKY,YAAaK,UAAWjB,KAAKiB,W,CAIhHC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,0BACTF,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,eAAerB,KAAKU,aAC/BS,EAAAA,EAAAA,GAAA,oBAAAC,IAAA,8DAAoCpB,KAAKc,eAAgBQ,SAAUtB,KAAKsB,SAAUC,MAAOvB,KAAKY,c,+FD7C9E,+P","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/filter-type-group/filter-search/filter-search.scss?tag=ifx-filter-search&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/filter-type-group/filter-search/filter-search.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n\n\n.filter-search-wrapper {\n  display: flex;\n  padding: tokens.$ifxSpace150 tokens.$ifxSpace200 tokens.$ifxSpace200 tokens.$ifxSpace200;\n  flex-direction: column;\n  align-items: flex-start;\n  align-self: stretch;\n  gap: tokens.$ifxSpace50;\n  font-family: var(--ifx-font-family);\n  background: tokens.$ifxColorEngineering200;\n}\n\n.filter-name {\n  font-size: tokens.$ifxFontSizeM;\n  line-height: tokens.$ifxLineHeightM;\n  font-weight: 600;\n}","import { Component, h, Listen, Watch, Element, Event, EventEmitter, Prop, State } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-filter-search',\n  styleUrl: 'filter-search.scss',\n  shadow: true,\n})\nexport class FilterSearch {\n  @Element() host: HTMLElement;\n  @Prop() filterName: string;\n  @Prop() disabled: boolean = false;\n  @Prop({ mutable: true }) filterValue: string;\n  @Prop() filterKey: string;\n  @State() showDeleteIcon: boolean = false;\n\n  @Event() ifxFilterSearchChange: EventEmitter;\n\n  @Watch('value')\n  valueChanged(newValue: boolean) {\n    this.host.setAttribute('value', newValue.toString());\n  }\n\n  @Listen('ifxInput')\n  handleFilterSearchChange(event: CustomEvent) {\n    // Check if a search filter with the same filterName already exists\n    const existingFilter = this.host.parentElement.querySelector(`ifx-filter-search[filter-name=\"${this.filterName}\"]`);\n    if (existingFilter && existingFilter !== this.host) {\n      throw new Error(`A search filter with the name '${this.filterName}' already exists.`);\n    }\n\n    // // Check if the filterName is 'search' and the filter is not the search component\n    // if (this.filterName === 'search' && this.filterKey !== 'text') {\n    //   throw new Error(\"The filter name 'search' is reserved for the search component.\");\n    // }\n\n    this.filterValue = event.detail;\n    this.showDeleteIcon = this.filterValue !== \"\";\n    this.ifxFilterSearchChange.emit({ filterName: this.filterName, filterValue: this.filterValue, filterKey: this.filterKey }); // Emitting filterKey along with other properties\n  }\n\n\n  render() {\n    return (\n      <div class=\"filter-search-wrapper\">\n        <div class=\"filter-name\">{this.filterName}</div>\n        <ifx-search-field show-delete-icon={this.showDeleteIcon} disabled={this.disabled} value={this.filterValue}>\n        </ifx-search-field>\n      </div>\n    );\n  }\n}\n\n"],"names":["FilterSearch","valueChanged","newValue","this","host","setAttribute","toString","handleFilterSearchChange","event","existingFilter","parentElement","querySelector","concat","filterName","Error","filterValue","detail","showDeleteIcon","ifxFilterSearchChange","emit","filterKey","render","h","key","class","disabled","value"],"sourceRoot":""}