{"version":3,"file":"static/js/3249.e3eca56b.chunk.js","mappings":"8MAQaA,EAAQ,W,wGAIS,E,YACH,E,YACA,E,UACF,G,uEAIvB,WACOC,KAAKC,WACRD,KAAKE,eAAiBF,KAAKE,cAC3BF,KAAKG,aAAaC,QAAUJ,KAAKE,cACjCF,KAAKK,UAAUC,KAAKN,KAAKE,e,GAE5B,CAAAK,IAAA,eAAAC,MAGD,SAAaC,EAAmBC,GAC1BD,IAAaC,IACfV,KAAKE,cAAgBO,EACrBT,KAAKG,aAAaC,QAAUJ,KAAKE,c,GAEpC,CAAAK,IAAA,gBAAAC,MAGD,SAAcG,GAEU,KAAlBA,EAAMC,SAAoC,KAAlBD,EAAMC,UAChCZ,KAAKa,iBACLF,EAAMG,iB,GAET,CAAAP,IAAA,oBAAAC,MAED,WACER,KAAKE,cAAgBF,KAAKE,gBAAiB,C,GAC5C,CAAAK,IAAA,SAAAC,MAED,WAAM,IAAAO,EAAA,KAEAC,GAAU,EAMd,OAPahB,KAAKiB,GAAGC,YAInBF,GAAU,IAIVG,EAAAA,EAAAA,GAAA,OAAKC,MAAM,wBACTD,EAAAA,EAAAA,GAAA,SACEE,KAAK,WACLC,QAAM,EACNC,IAAK,SAACN,GAAE,OAAMF,EAAKZ,aAAec,CAAE,EACpCO,KAAMxB,KAAKwB,KACXpB,QAASJ,KAAKE,cACduB,SAAUzB,KAAKa,eAAea,KAAK1B,MACnC2B,GAAG,WACHnB,MAAK,GAAAoB,OAAK5B,KAAKE,kBAGjBiB,EAAAA,EAAAA,GAAA,OACEU,SAAS,IACTC,QAAS9B,KAAKa,eAAea,KAAK1B,MAClC+B,UAAW/B,KAAKgC,cAAcN,KAAK1B,MACnCiC,KAAK,W,aACOjC,KAAKE,cAAa,gBACfF,KAAKC,SAAQ,kBACZ,QAChBmB,MAAK,+BAAAQ,OACL5B,KAAKE,cAAgB,UAAY,GAAE,eAAA0B,OACnC5B,KAAKC,SAAW,WAAa,GAAE,cAAA2B,OAC/B5B,KAAKkC,MAAQ,QAAU,KACtBlC,KAAKE,gBAAiBiB,EAAAA,EAAAA,GAAA,YAAUgB,KAAK,cAEvCnB,IACCG,EAAAA,EAAAA,GAAA,OAAKQ,GAAG,QAAQP,MAAK,SAAAQ,OAAW5B,KAAKkC,MAAQ,QAAU,GAAE,KAAAN,OAAI5B,KAAKC,SAAW,WAAa,GAAE,KAAK6B,QAAS9B,KAAKa,eAAea,KAAK1B,QACjImB,EAAAA,EAAAA,GAAA,c,GAIT,CAAAZ,IAAA,KAAA6B,IAAA,W,4FAjFkB,G,QCRD,ouD","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.scss?tag=ifx-checkbox&encapsulation=shadow"],"sourcesContent":["import { Component, h, Prop, Element, State, Event, EventEmitter, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true\n})\n\nexport class Checkbox {\n  private inputElement: HTMLInputElement;\n\n  @Element() el;\n  @Prop() disabled: boolean = false;\n  @Prop() value: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() name: string = '';\n  @State() internalValue: boolean;\n  @Event({ bubbles: true, composed: true }) ifxChange: EventEmitter;\n\n  handleCheckbox() {\n    if (!this.disabled) {\n      this.internalValue = !this.internalValue;\n      this.inputElement.checked = this.internalValue; // update the checkbox's checked property\n      this.ifxChange.emit(this.internalValue);\n    }\n  }\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n      this.inputElement.checked = this.internalValue; // update the checkbox's checked property\n    }\n  }\n\n\n  handleKeydown(event) {\n    // Keycode 32 corresponds to the Space key, 13 corresponds to the Enter key\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.handleCheckbox();\n      event.preventDefault();  // prevent the default action when space or enter is pressed\n    }\n  }\n\n  componentWillLoad() {\n    this.internalValue = this.internalValue || false\n  }\n\n  render() {\n    const slot = this.el.innerHTML;\n    let hasSlot = false;\n\n    if (slot) {\n      hasSlot = true;\n    }\n\n    return (\n      <div class=\"checkbox__container\">\n        <input\n          type=\"checkbox\"\n          hidden\n          ref={(el) => (this.inputElement = el)}\n          name={this.name}\n          checked={this.internalValue}\n          onChange={this.handleCheckbox.bind(this)} // Listen for changes here\n          id='checkbox'\n          value={`${this.internalValue}`}\n        />\n\n        <div\n          tabindex=\"0\"\n          onClick={this.handleCheckbox.bind(this)}\n          onKeyDown={this.handleKeydown.bind(this)}\n          role=\"checkbox\"  // role attribute\n          aria-value={this.internalValue} // aria attribute\n          aria-disabled={this.disabled} // aria attribute\n          aria-labelledby=\"label\"\n          class={`checkbox__wrapper \n        ${this.internalValue ? 'checked' : \"\"} \n        ${this.disabled ? 'disabled' : \"\"}\n        ${this.error ? 'error' : \"\"}`}>\n          {this.internalValue && <ifx-icon icon=\"check-12\"></ifx-icon>}\n        </div>\n        {hasSlot &&\n          <div id=\"label\" class={`label ${this.error ? 'error' : \"\"} ${this.disabled ? 'disabled' : \"\"} `} onClick={this.handleCheckbox.bind(this)}>\n            <slot />\n          </div>}\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n    display: inline-flex;\n    vertical-align: top;\n}\n\n\n\n.checkbox__container {\n    box-sizing: border-box;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: 8px;\n\n    & .checkbox__wrapper {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 20px;\n        height: 20px;\n        background-color: tokens.$color-bg-white;\n        border: 1px solid #575352;\n        border-radius: 1px;\n        flex: none;\n        order: 0;\n        flex-grow: 0;\n\n        &.error {\n            border-color: #CD002F;\n        }\n\n        &:focus-visible {\n            border: 1px solid #575352;\n            outline: 2px solid #0A8276;\n            outline-offset: 2px;\n        }\n\n        &:hover {\n            background-color: #EEEDED;\n            border: 1px solid #575352;\n            border-radius: 1px;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.disabled {\n            background-color: #BFBBBB;\n            border-color: #BFBBBB;\n            border-radius: 1px;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.checked {\n            background-color: #0A8276;\n            border-radius: 1px;\n            border-color: transparent;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n            color: tokens.$color-white;\n\n            &:focus-visible {\n                border: 1px solid transparent;\n                outline: 2px solid #0A8276;\n                outline-offset: 2px;\n            }\n\n            &:hover {\n                background-color: #08665C;\n                border-radius: 1px;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n\n            &.disabled {\n                background: #BFBBBB;\n                border-radius: 1px;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n        }\n    }\n\n    & .label {\n        width: 25px;\n        height: 20px;\n        font-style: normal;\n        font-weight: 400;\n        font-size: 14px;\n        line-height: 20px;\n        color: tokens.$color-text-black;\n        flex: none;\n        order: 1;\n        flex-grow: 0;\n\n        &.disabled {\n            color: #BFBBBB;\n        }\n\n        &.error {\n            color: #CD002F;\n        }\n    }\n\n    & .checkbox__wrapper,\n    & .label {\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n}"],"names":["Checkbox","this","disabled","internalValue","inputElement","checked","ifxChange","emit","key","value","newValue","oldValue","event","keyCode","handleCheckbox","preventDefault","_this","hasSlot","el","innerHTML","h","class","type","hidden","ref","name","onChange","bind","id","concat","tabindex","onClick","onKeyDown","handleKeydown","role","error","icon","get"],"sourceRoot":""}