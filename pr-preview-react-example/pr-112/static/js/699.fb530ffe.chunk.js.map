{"version":3,"file":"static/js/699.fb530ffe.chunk.js","mappings":"mMAIMA,EAAW,WACf,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,kBAAmBC,EAAAA,EAAAA,GAAYF,KAAM,mBAAoB,GAC9DA,KAAKG,WAAa,EAClBH,KAAKI,MAAQ,GACbJ,KAAKK,UAAOC,EACZN,KAAKO,WAAY,CACnB,CASI,OATHC,EAAAA,EAAAA,GAAAZ,EAAA,EAAAa,IAAA,sBAAAC,MACD,SAAoBC,GAClBX,KAAKC,iBAAiBW,KAAKD,EAC7B,GAAC,CAAAF,IAAA,SAAAC,MACD,WACE,OAAQG,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,gBAAFC,OAAkBf,KAAKK,QAAUQ,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,WAAYE,MAAO,CAAEC,MAAO,GAAFF,OAAKf,KAAKG,WAAU,OAASH,KAAKO,WAA2B,MAAdP,KAAKK,OAAgBQ,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,MAAO,SAAW,GAAFC,OAAKf,KAAKG,WAAU,OAC3N,IAAC,EAAAM,IAAA,WAAAS,IACD,WAAwB,MAAO,CAC7B,WAAc,CAAC,uBACd,KAACtB,CAAA,CAjBW,GAmBjBA,EAAYoB,MArBW,4jB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/ifx-progress-bar.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-a236f246.js';\n\nconst progressBarCss = \".progress-bar{height:16px;border-radius:1px;bottom:0;right:0;top:0;left:0}.progress-bar .label{height:17px;border-radius:1px 0px 0px 1px}.progress-bar.s{height:4px}.progress-bar .progress{height:100%;background-color:#0A8276;position:relative}.progress-bar .progress:after{content:\\\"\\\";background-color:#EEEDED;height:100%;position:absolute}.progress-bar .label{display:flex;align-items:center;justify-content:center;position:absolute;font-style:normal;font-weight:400;font-size:14px;line-height:20px;font-family:\\\"Source Sans Pro\\\";color:#fff;top:0;bottom:0;left:0;right:0}\";\n\nconst ProgressBar = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.percentageChange = createEvent(this, \"percentageChange\", 7);\n    this.percentage = 0;\n    this.label = '';\n    this.size = undefined;\n    this.showLabel = false;\n  }\n  onPercentageChanged(newValue) {\n    this.percentageChange.emit(newValue);\n  }\n  render() {\n    return (h(\"div\", { class: `progress-bar ${this.size}` }, h(\"div\", { class: \"progress\", style: { width: `${this.percentage}%` } }, this.showLabel && this.size !== \"s\" && h(\"span\", { class: \"label\" }, `${this.percentage}%`))));\n  }\n  static get watchers() { return {\n    \"percentage\": [\"onPercentageChanged\"]\n  }; }\n};\nProgressBar.style = progressBarCss;\n\nexport { ProgressBar as ifx_progress_bar };\n"],"names":["ProgressBar","hostRef","_classCallCheck","registerInstance","this","percentageChange","createEvent","percentage","label","size","undefined","showLabel","_createClass","key","value","newValue","emit","h","class","concat","style","width","get"],"sourceRoot":""}