{"version":3,"file":"static/js/5014.a0a9303e.chunk.js","mappings":"8NASaA,EAAmB,W,yGACU,G,oBAmEvC,O,2CA/DD,SAAoBC,GAClB,IAAMC,EAAMC,SAASC,cAAc,OAEnC,OADAF,EAAIG,UAAYJ,EACTC,EAAII,U,GACZ,CAAAC,IAAA,sBAAAC,MAED,SAAoBC,GAQlB,OAPmBC,MAChBC,KAAKF,EAAYG,YAAY,SAAAC,GAAc,MAAQ,CAAEC,KAAjBD,EAAJC,KAA2BN,MAAhBK,EAALL,MAA4B,IAClEO,QAAO,SAACC,EAAKC,GAEZ,OADAD,EAAIC,EAAQH,MAAQG,EAAQT,MACrBQ,C,GACN,CAAC,E,GAGP,CAAAT,IAAA,sBAAAC,MAED,SAAoBU,GAClB,IAAIC,EAAW,GACTC,EAAaC,KAAKC,oBAAoBJ,GACtCK,GAAoBC,EAAAA,EAAAA,GAAE,OAAQJ,GAEpC,GADAD,EAASM,KAAKF,GACXL,EAASZ,WAGV,IAFA,IAAMoB,EAAQR,EAASS,iBAAiB,QAClCC,EAAaV,EAASS,iBAAiB,QAAQE,OAC7CC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CAClC,IAAIC,EAAeV,KAAKC,oBAAoBI,EAAMI,IAC9CE,GAAaR,EAAAA,EAAAA,GAAE,OAAQO,GAC3BZ,EAASM,KAAKO,E,CAGlB,OAAOb,C,GACR,CAAAZ,IAAA,SAAAC,MAED,SAAOyB,GACL,OAAOT,EAAAA,EAAAA,WAAA,UAAKU,MAAM,aAAaC,MAAOd,KAAKe,QAAQD,MAAOE,OAAQhB,KAAKe,QAAQC,OAAQC,MAAM,6BAA6BC,KAAMlB,KAAKe,QAAQG,KAAMC,QAASnB,KAAKe,QAAQI,UAAOC,QAAAC,EAAAA,EAAAA,GAAMT,I,GACvL,CAAA1B,IAAA,gBAAAC,MAED,WACE,GAAGa,KAAKe,QAAS,CACf,IAAMlB,EAAWG,KAAKsB,oBAAoBtB,KAAKe,QAAQQ,YACjDX,EAAUZ,KAAKwB,oBAAoB3B,GACnC4B,EAAMzB,KAAK0B,OAAOd,GAExB,OADAZ,KAAK2B,aAAaC,MAAK,GAChBH,C,CAIP,OAFAI,QAAQC,MAAM,mBACd9B,KAAK2B,aAAaC,MAAK,GAChB,E,GAEV,CAAA1C,IAAA,oBAAAC,MAED,WAEEa,KAAKe,SAAUgB,EAAAA,EAAAA,GAAqB/B,KAAKgC,KADPC,cAAcC,QAAQ,qBAAqB,SAACC,EAAIC,GAAG,OAAKA,CAAG,I,GAE9F,CAAAlD,IAAA,SAAAC,MAED,WACE,OACEgB,EAAAA,EAAAA,GAACkC,EAAAA,EAAI,KACJrC,KAAKsC,gB,KAGT3D,CAAA,CApE6B,G,QCTD,kF","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.scss?tag=ifx-icon"],"sourcesContent":["import { Component, Prop, h, Host, Event, EventEmitter } from '@stencil/core';\nimport { getIcon } from '@infineon/infineon-icons'\n\n\n@Component({\n  tag: 'ifx-icon',\n  styleUrl: './infineonIconStencil.scss'\n})\n\nexport class InfineonIconStencil {\n  @Prop({ mutable: true }) icon: string = \"\"\n  @Prop({ mutable: true }) ifxIcon: any;\n  @Event() consoleError: EventEmitter<boolean>;\n \n  convertStringToHtml(htmlString) { \n    const div = document.createElement('div')\n    div.innerHTML = htmlString\n    return div.firstChild\n  }\n\n  convertHtmlToObject(htmlElement) { \n    let pathToObject = Array\n      .from(htmlElement.attributes, ({ name, value }) => ({ name, value }))\n      .reduce((acc, current) => {\n        acc[current.name] = current.value\n        return acc\n      }, {})\n\n    return pathToObject\n  }\n\n  convertPathsToVnode(htmlPath) { \n    let svgPaths = []\n    const parentPath = this.convertHtmlToObject(htmlPath);\n    const parentPathToVnode = h(\"path\", parentPath);\n    svgPaths.push(parentPathToVnode)\n    if(htmlPath.firstChild) { \n      const paths = htmlPath.querySelectorAll('path');\n      const pathLength = htmlPath.querySelectorAll('path').length;\n      for(let i = 0; i < pathLength; i++) { \n        let pathToObject = this.convertHtmlToObject(paths[i])\n        let objToVnode = h(\"path\", pathToObject)\n        svgPaths.push(objToVnode)\n      }      \n    }\n    return svgPaths\n  }\n\n  getSVG(svgPath) {\n    return <svg class=\"inline-svg\" width={this.ifxIcon.width} height={this.ifxIcon.height} xmlns=\"http://www.w3.org/2000/svg\" fill={this.ifxIcon.fill} viewBox={this.ifxIcon.viewBox}>{...svgPath}</svg>\n  }\n\n  constructIcon() {\n    if(this.ifxIcon) {\n      const htmlPath = this.convertStringToHtml(this.ifxIcon.svgContent)\n      const svgPath = this.convertPathsToVnode(htmlPath)\n      const SVG = this.getSVG(svgPath)\n      this.consoleError.emit(false)\n      return SVG;\n    } else {\n      console.error('Icon not found!')\n      this.consoleError.emit(true)\n      return \"\"\n    }\n  }\n\n  componentWillLoad() {\n    const removeHyphen = (str) => str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr);\n    this.ifxIcon = getIcon(removeHyphen(this.icon));\n  }\n\n  render() {\n    return (\n      <Host>\n      {this.constructIcon()}\n      </Host>\n    );\n  }\n}","\nifx-icon { \n  display: inline-flex;\n  justify-content: center;\n  &:empty { \n    display: none;\n  }\n}"],"names":["InfineonIconStencil","htmlString","div","document","createElement","innerHTML","firstChild","key","value","htmlElement","Array","from","attributes","_ref","name","reduce","acc","current","htmlPath","svgPaths","parentPath","this","convertHtmlToObject","parentPathToVnode","h","push","paths","querySelectorAll","pathLength","length","i","pathToObject","objToVnode","svgPath","class","width","ifxIcon","height","xmlns","fill","viewBox","concat","_toConsumableArray","convertStringToHtml","svgContent","convertPathsToVnode","SVG","getSVG","consoleError","emit","console","error","getIcon","icon","toLowerCase","replace","_m","chr","Host","constructIcon"],"sourceRoot":""}