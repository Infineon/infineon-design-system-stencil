{"version":3,"file":"static/js/5136.9d062e7f.chunk.js","mappings":"0KAAA,MCSaA,EAAY,M,oJACG,E,UACH,I,qBACY,E,mBAIoB,E,CAIvDC,gBAAAA,CAAiBC,GACf,MAAMC,EAAcD,EAAME,OAC1BC,KAAKC,oBAAoBH,E,CAI3BI,+BAAAA,CAAgCL,GAC9BG,KAAKG,oBAAoBC,KAAKP,EAAME,O,CAGtCE,mBAAAA,CAAoBH,GAClB,MAAMO,EAAWC,MAAMC,KAAKP,KAAKQ,GAAGC,iBAAiB,sBACrD,IAAIC,EAAcC,EACdC,EAAQd,EAAYe,cAExB,IAAK,IAAIC,EAAI,EAAGA,EAAIT,EAASU,OAAQD,IACnCJ,EAAeL,EAASS,GACxBH,EAAWD,EAAaM,aAAeN,EAAaO,UAEhDN,EAASE,cAAcK,QAAQN,IAAU,EAC3CF,EAAaS,aAAa,QAAQ,GAElCT,EAAaS,aAAa,QAAQ,E,CAKxCC,mBAAAA,GACEpB,KAAKqB,SAASjB,KAAKJ,KAAKsB,K,CAG1BC,iBAAAA,GACEvB,KAAKwB,cAAgBlB,MAAMC,KAAKP,KAAKQ,GAAGC,iBAAiB,sBACzD,MAAMgB,EAAczB,KAAKQ,GAAGkB,cAAc,oBACpCC,EAAiB3B,KAAKQ,GAAGkB,cAAc,uBAG3C1B,KAAK4B,kBADHH,IAAeE,E,CAMrBE,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAKC,MAAK,yBAAAC,OACRhC,KAAKiC,OAAS,OAAS,GAAE,aAAAD,OACzBhC,KAAK4B,eAAiB,iBAAmB,GAAE,YAAAI,OAC7B,MAAdhC,KAAKsB,KAAe,QAAU,MAE9BQ,EAAAA,EAAAA,GAAA,a,wCDrEgB,ye","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.scss?tag=ifx-dropdown-menu&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n  position: relative;\n  z-index: 1000;\n}\n\n.dropdown-menu {\n  display: none;\n  visibility: hidden;\n  flex-direction: column;\n  width: 224px;\n  max-height: 289px;\n  min-width: 224px;\n  overflow-y: auto;\n  background: tokens.$ifxColorBaseWhite;\n  box-shadow: 0px 6px 9px 0px #1d1d1d1a;\n  border: 1px solid tokens.$ifxColorEngineering200;\n  padding: 8px 0px;\n  font-family: var(--ifx-font-family);\n\n  &.small {\n    max-height: 266px;\n    max-width: 186px;\n    overflow-y: auto;\n  }\n\n  &.hideTopPadding {\n    padding-top: 0px;\n  }\n}\n\n.dropdown-menu.show {\n  display: flex;\n  visibility: visible;\n}","// dropdown-menu.tsx\nimport { Component, h, Prop, Element, State, Event, EventEmitter, Listen } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-dropdown-menu',\n  styleUrl: 'dropdown-menu.scss',\n  shadow: true\n})\n\nexport class DropdownMenu {\n  @Prop() isOpen: boolean = false;\n  @Prop() size: string = 'l'\n  @State() hideTopPadding: boolean = false;\n  @Element() el;\n\n  @Event() menuSize: EventEmitter;\n  @State() filteredItems: HTMLIfxDropdownItemElement[] = [];\n  @Event() ifxDropdownMenuItem: EventEmitter<CustomEvent>;\n\n  @Listen('ifxInput')\n  handleMenuFilter(event: CustomEvent) {\n    const searchValue = event.detail;\n    this.filterDropdownItems(searchValue)\n  }\n\n  @Listen('ifxDropdownItem')\n  handleDropdownItemValueEmission(event: CustomEvent) {\n    this.ifxDropdownMenuItem.emit(event.detail)\n  }\n\n  filterDropdownItems(searchValue: string) {\n    const allItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item'));\n    let dropdownItem, txtValue;\n    let query = searchValue.toUpperCase()\n\n    for (let i = 0; i < allItems.length; i++) {\n      dropdownItem = allItems[i];\n      txtValue = dropdownItem.textContent || dropdownItem.innerText;\n\n      if (txtValue.toUpperCase().indexOf(query) > -1) {\n        dropdownItem.setAttribute('hide', false)\n      } else {\n        dropdownItem.setAttribute('hide', true)\n      }\n    }\n  }\n\n  componentWillUpdate() {\n    this.menuSize.emit(this.size)\n  }\n\n  componentWillLoad() {\n    this.filteredItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item')) as HTMLIfxDropdownItemElement[];\n    const searchField = this.el.querySelector('ifx-search-field')\n    const dropdownHeader = this.el.querySelector('ifx-dropdown-header')\n\n    if (searchField || dropdownHeader) {\n      this.hideTopPadding = true;\n    } else this.hideTopPadding = false;\n  }\n\n\n  render() {\n    return (\n      <div class={`dropdown-menu \n      ${this.isOpen ? 'show' : ''} \n      ${this.hideTopPadding ? 'hideTopPadding' : \"\"}\n      ${this.size === 's' ? 'small' : \"\"}`\n      } >\n        <slot />\n      </div >\n    );\n  }\n}"],"names":["DropdownMenu","handleMenuFilter","event","searchValue","detail","this","filterDropdownItems","handleDropdownItemValueEmission","ifxDropdownMenuItem","emit","allItems","Array","from","el","querySelectorAll","dropdownItem","txtValue","query","toUpperCase","i","length","textContent","innerText","indexOf","setAttribute","componentWillUpdate","menuSize","size","componentWillLoad","filteredItems","searchField","querySelector","dropdownHeader","hideTopPadding","render","h","class","concat","isOpen"],"sourceRoot":""}