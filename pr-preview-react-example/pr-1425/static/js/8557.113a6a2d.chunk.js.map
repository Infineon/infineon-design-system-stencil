{"version":3,"file":"static/js/8557.113a6a2d.chunk.js","mappings":"qLAAA,MCWaA,EAAsB,M,4CAOL,G,gBAKG,G,UAOO,S,CAOpCC,oBAAAA,GACI,OAAOC,KAAKC,sBAAsBC,iBAAiB,wB,CAOvDC,uBAAAA,GACwCH,KAAKD,uBACvBK,SAASC,IACvBA,EAAQC,WAAWC,cAAc,YAAYC,UAAUC,IAAI,YAAYT,KAAKU,OAAO,G,CAS3FC,kBAAAA,GACIX,KAAKG,yB,CAGTS,MAAAA,GACI,OACIC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,UACPF,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,gBACLf,KAAKgB,WAAWC,SAGtBJ,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,oBACPF,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8CAIAd,KAAKkB,QAAQD,SACbJ,EAAAA,EAAAA,GAAA,OAAKE,MAAM,mBACPF,EAAAA,EAAAA,GAAA,YAAUM,KAAK,YAAqB,IAAGnB,KAAKkB,QAAQD,Q,2DD3E1C,2e","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/segmented-controls/segmented-controls-group.scss?tag=ifx-segmented-controls-group&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/segmented-controls/segmented-controls-group.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.group {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: tokens.$ifxSpace150;\n}\n\n.group__label {\n    font: tokens.$ifxBodyBody05;\n\n    &:empty {\n        display: none;\n    }\n}\n\n.group__caption {\n    display: flex;\n    align-items: center;\n    gap: tokens.$ifxSpace100;\n    \n    font: tokens.$ifxBodyBody05;\n}\n\n// temps\n\n.group__controls {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.7px;\n    \n    outline: tokens.$ifxSpace12 solid tokens.$ifxColorEngineering300;\n    border-radius: tokens.$ifxSpace12;\n    \n    width: fit-content;\n    \n    background-color: tokens.$ifxColorEngineering300;\n}\n\n","import { h, \n         Element,\n         Component, \n         Prop } from \"@stencil/core\";\n\n@Component ({\n    tag     : 'ifx-segmented-controls-group',\n    styleUrl: 'segmented-controls-group.scss',\n    shadow  : true\n})\n\nexport class SegmentedControlsGroup {\n\n    @Element() segmentedControlGroup: HTMLIfxSegmentedControlsGroupElement;\n\n    /**\n     * Sets the caption which describe the controls.\n     */\n    @Prop() caption: string = '';\n    \n    /**\n     * Sets the label for the segement controls group.\n     */\n    @Prop() groupLabel: string = '';\n\n    /**\n     * Sets the size of the segmented controls.\n     * \n     * @Default 'regular'\n     */\n    @Prop() size: 'regular' | 'small' = 'regular';\n\n\n    /**\n     * Utiliy functions\n     */\n\n    getSegmentedControls(): NodeList {\n        return this.segmentedControlGroup.querySelectorAll('ifx-segmented-control');\n    }\n\n    /**\n     * Helper functions\n     */\n\n    setSegmentedControlSize() {\n        const segmentedControls: NodeList = this.getSegmentedControls();\n        segmentedControls.forEach((control: HTMLIfxSegmentedControlElement) => {\n            control.shadowRoot.querySelector('.control').classList.add(`control--${this.size}`);\n            // console.log(control.shadowRoot);\n        });\n    }\n\n    /**\n     * Lifecycle methods\n     */\n\n    componentDidRender() {\n        this.setSegmentedControlSize();\n    }\n\n    render() {\n        return (\n            <div class='group'>\n                <div class='group__label'>\n                    { this.groupLabel.trim() }\n                </div>\n                \n                <div class='group__controls'>\n                    <slot />\n                </div>\n                \n                {\n                    this.caption.trim() &&\n                    <div class='group__caption'>\n                        <ifx-icon icon='cinfo16'></ifx-icon> { this.caption.trim() }\n                    </div>\n                }\n            </div>\n        );\n    }\n}"],"names":["SegmentedControlsGroup","getSegmentedControls","this","segmentedControlGroup","querySelectorAll","setSegmentedControlSize","forEach","control","shadowRoot","querySelector","classList","add","size","componentDidRender","render","h","key","class","groupLabel","trim","caption","icon"],"sourceRoot":""}