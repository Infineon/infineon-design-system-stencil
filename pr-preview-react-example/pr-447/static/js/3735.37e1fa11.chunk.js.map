{"version":3,"file":"static/js/3735.37e1fa11.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.scss?tag=ifx-checkbox&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.scss?tag=ifx-icon","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.scss?tag=ifx-multiselect&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/select/multi-select/multiselect.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { Component, h, Prop, Element, State, Event, EventEmitter, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true\n})\n\nexport class Checkbox {\n  private inputElement: HTMLInputElement;\n\n  @Element() el;\n  @Prop() disabled: boolean = false;\n  @Prop() value: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() name: string = '';\n  @State() internalValue: boolean;\n  @Prop() indeterminate: boolean = false;\n  @Event({ bubbles: true, composed: true }) ifxChange: EventEmitter;\n\n  handleCheckbox() {\n    if (!this.disabled) {\n      if (this.inputElement.indeterminate) {\n        this.internalValue = true;\n        this.indeterminate = false;\n      } else {\n        this.internalValue = !this.internalValue;\n      }\n      this.ifxChange.emit(this.el);\n    }\n  }\n\n\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n      this.inputElement.checked = this.internalValue; // update the checkbox's checked property\n    }\n  }\n\n\n  handleKeydown(event) {\n    // Keycode 32 corresponds to the Space key, 13 corresponds to the Enter key\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.handleCheckbox();\n      event.preventDefault();  // prevent the default action when space or enter is pressed\n    }\n  }\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n  }\n\n  componentDidRender() {\n    this.inputElement.indeterminate = this.indeterminate;\n  }\n\n\n  render() {\n    const slot = this.el.innerHTML;\n    let hasSlot = false;\n\n    if (slot) {\n      hasSlot = true;\n    }\n\n    return (\n      <div class=\"checkbox__container\">\n        <input\n          type=\"checkbox\"\n          hidden\n          ref={(el) => (this.inputElement = el)}\n          name={this.name}\n          checked={this.internalValue}\n          onChange={this.handleCheckbox.bind(this)} // Listen for changes here\n          id='checkbox'\n          value={`${this.internalValue}`}\n        />\n\n        <div\n          tabindex=\"0\"\n          onClick={this.handleCheckbox.bind(this)}\n          onKeyDown={this.handleKeydown.bind(this)}\n          role=\"checkbox\"  // role attribute\n          aria-value={this.internalValue}\n          aria-disabled={this.disabled}\n          aria-labelledby=\"label\"\n          class={`checkbox__wrapper \n        ${this.internalValue ? 'checked' : \"\"} \n        ${this.indeterminate ? 'indeterminate' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}\n        ${this.error ? 'error' : \"\"}`}>\n          {this.internalValue && <ifx-icon icon=\"check-12\"></ifx-icon>}\n        </div>\n        {hasSlot &&\n          <div id=\"label\" class={`label ${this.error ? 'error' : \"\"} ${this.disabled ? 'disabled' : \"\"} `} onClick={this.handleCheckbox.bind(this)}>\n            <slot />\n          </div>}\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n    display: inline-flex;\n    vertical-align: top;\n}\n\n\n\n.checkbox__container {\n    box-sizing: border-box;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: tokens.$ifxSpace100;\n\n    & .checkbox__wrapper {\n        display: flex;\n        position: relative; //needs to be added for the indeterminate state of the checkbox\n        justify-content: center;\n        align-items: center;\n        width: tokens.$ifxSize250;\n        height: tokens.$ifxSize250;\n        background-color: tokens.$ifxColorBaseWhite;\n        border: 1px solid #575352;\n        border-radius: tokens.$ifxBorderRadius12;\n        flex: none;\n        order: 0;\n        flex-grow: 0;\n\n        &.error {\n            border-color: #CD002F;\n        }\n\n        &:focus-visible {\n            border: 1px solid #575352;\n            outline: 2px solid #0A8276;\n            outline-offset: 2px;\n        }\n\n        &:hover {\n            background-color: #EEEDED;\n            border: 1px solid #575352;\n            border-radius: tokens.$ifxBorderRadius12;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.disabled {\n            background-color: #BFBBBB;\n            border-color: #BFBBBB;\n            border-radius: tokens.$ifxBorderRadius12;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.checked {\n            background-color: #0A8276;\n            border-radius: tokens.$ifxBorderRadius12;\n            border-color: tokens.$ifxColorBaseTransparent;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n            color: tokens.$ifxColorBaseWhite;\n\n            &:focus-visible {\n                border: 1px solid transparent;\n                outline: 2px solid #0A8276;\n                outline-offset: 2px;\n            }\n\n            &:hover {\n                background-color: #08665C;\n                border-radius: tokens.$ifxBorderRadius12;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n\n            &.disabled {\n                background: #BFBBBB;\n                border-radius: tokens.$ifxBorderRadius12;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n        }\n\n        &.indeterminate {\n            &:before {\n                content: \"\";\n                display: block;\n                width: 70%; // Adjust as needed for the width of the minus sign\n                height: 2px; // Adjust for thickness of the minus sign\n                background-color: #08665C; // Color of the minus sign\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n\n    }\n\n    & .label {\n        width: 25px;\n        height: tokens.$ifxSize250;\n        font-style: normal;\n        font-weight: 400;\n        font-size: tokens.$ifxFontSizeS;\n        line-height: tokens.$ifxLineHeightS;\n        color: tokens.$ifxColorBaseBlack;\n        flex: none;\n        order: 1;\n        flex-grow: 0;\n\n        &.disabled {\n            color: #BFBBBB;\n        }\n\n        &.error {\n            color: #CD002F;\n        }\n    }\n\n    & .checkbox__wrapper,\n    & .label {\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n}","ifx-icon {\n  display: inline-flex;\n  justify-content: center;\n\n  &:empty {\n    display: none;\n  }\n}","import { Component, Prop, h, Host, Event, EventEmitter } from '@stencil/core';\nimport { getIcon } from '@infineon/infineon-icons'\n\n\n@Component({\n  tag: 'ifx-icon',\n  styleUrl: './infineonIconStencil.scss'\n})\n\nexport class InfineonIconStencil {\n  @Prop({ mutable: true }) icon: string = \"\"\n  @Prop({ mutable: true }) ifxIcon: any;\n  @Event() consoleError: EventEmitter<boolean>;\n \n  convertStringToHtml(htmlString) { \n    const div = document.createElement('div')\n    div.innerHTML = htmlString\n    return div.firstChild\n  }\n\n  convertHtmlToObject(htmlElement) { \n    let pathToObject = Array\n      .from(htmlElement.attributes, ({ name, value }) => ({ name, value }))\n      .reduce((acc, current) => {\n        acc[current.name] = current.value\n        return acc\n      }, {})\n\n    return pathToObject\n  }\n\n  convertPathsToVnode(htmlPath) { \n    let svgPaths = []\n    const parentPath = this.convertHtmlToObject(htmlPath);\n    const parentPathToVnode = h(\"path\", parentPath);\n    svgPaths.push(parentPathToVnode)\n    if(htmlPath.firstChild) { \n      const paths = htmlPath.querySelectorAll('path');\n      const pathLength = htmlPath.querySelectorAll('path').length;\n      for(let i = 0; i < pathLength; i++) { \n        let pathToObject = this.convertHtmlToObject(paths[i])\n        let objToVnode = h(\"path\", pathToObject)\n        svgPaths.push(objToVnode)\n      }      \n    }\n    return svgPaths\n  }\n\n  getSVG(svgPath) {\n    return <svg class=\"inline-svg\" width={this.ifxIcon.width} height={this.ifxIcon.height} xmlns=\"http://www.w3.org/2000/svg\" fill={this.ifxIcon.fill} viewBox={this.ifxIcon.viewBox}>{...svgPath}</svg>\n  }\n\n  constructIcon() {\n    if(this.ifxIcon) {\n      const htmlPath = this.convertStringToHtml(this.ifxIcon.svgContent)\n      const svgPath = this.convertPathsToVnode(htmlPath)\n      const SVG = this.getSVG(svgPath)\n      this.consoleError.emit(false)\n      return SVG;\n    } else {\n      console.error('Icon not found!')\n      this.consoleError.emit(true)\n      return \"\"\n    }\n  }\n\n  componentWillLoad() {\n    const removeHyphen = (str) => str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr);\n    this.ifxIcon = getIcon(removeHyphen(this.icon));\n  }\n\n  render() {\n    return (\n      <Host>\n      {this.constructIcon()}\n      </Host>\n    );\n  }\n}","// @import '~choices.js/public/assets/styles/choices.css';\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.ifx-multiselect-container {\n  position: relative;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  &.small-select {\n    height: 36px;\n  }\n\n  &.medium-select {\n    height: 40px;\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n\n  .ifx-label-wrapper {\n    font-size: 16px;\n    line-height: 24px;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-error-message-wrapper {\n    color: #CD002F;\n    font-size: 12px;\n    line-height: 16px;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n    max-width: 100%;\n  }\n\n  .ifx-multiselect-wrapper {\n    box-sizing: border-box;\n    position: relative;\n    display: flex;\n    align-items: center;\n    border: 1px solid #8D8786;\n    width: 100%;\n\n    &.small-select {\n      line-height: 20px;\n      padding: 8px 12px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      padding: 8px 16px;\n      font-size: 16px;\n    }\n\n    &:focus-visible {\n      outline: none;\n    }\n\n    &:focus-visible:not(.active):not(:active) {\n      &::before {\n        content: '';\n        position: absolute;\n        width: calc(100% + 4px);\n        height: calc(100% + 4px);\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        border: 2px solid #0A8276;\n      }\n    }\n\n    &.disabled {\n      background: #EEEDED;\n      color: #575352;\n      border-color: #575352;\n      cursor: not-allowed;\n      -webkit-user-select: none;\n      -ms-user-select: none;\n      user-select: none;\n    }\n\n    &.error {\n      border-color: #CD002F;\n    }\n\n    &:hover:not(.focus, :focus) {\n      border-color: #8D8786;\n    }\n\n    &.active {\n      border: 2px solid #0A8276 !important; // Active border color\n\n      & .icon-wrapper-up {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n\n      & .icon-wrapper-down {\n        display: none\n      }\n    }\n\n\n    & .icon-wrapper-up {\n      display: none;\n    }\n\n    & .icon-wrapper-down {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n    }\n\n    &.is-flipped {\n      .ifx-multiselect-dropdown-menu {\n        top: auto;\n        bottom: 100%;\n      }\n    }\n  }\n\n  .ifx-multiselect-input {\n    flex-grow: 1;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n    &.placeholder {\n      opacity: 0.5;\n    }\n\n  }\n\n\n  .ifx-multiselect-icon-container {\n    margin-left: auto;\n    align-items: center;\n    display: flex;\n  }\n\n\n  .ifx-clear-button {\n    margin-right: 10px; // Space between clear button and icons\n  }\n\n  .ifx-multiselect-dropdown-menu {\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    border: 1px solid #ddd;\n    margin-top: 2px;\n    background-color: #fff;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    max-height: 300px;\n    /* Adjust based on your design */\n    overflow-y: auto;\n    z-index: var(--dynamic-z-index, 1); // Fallback to 1\n\n  }\n\n  .option {\n    position: relative;\n    padding: 8px 16px;\n    gap: 8px;\n    align-items: center;\n    display: flex;\n    font-style: normal;\n    font-weight: 400;\n\n    &.small-select {\n      line-height: 20px;\n      font-size: 14px;\n    }\n\n    &.medium-select {\n      line-height: 24px;\n      font-size: 16px;\n    }\n\n    &:hover {\n      background-color: #EEEDED;\n    }\n\n    &:focus {\n      background-color: #BFBBBB;\n      outline: none;\n      box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);\n\n    }\n\n    &.is-highlighted {\n      background-color: #EEEDED;\n      ;\n    }\n\n    &.selected {\n      // color: #0A8276;\n    }\n\n    &.sub-option {\n      padding-left: 30px;\n      /* or however much indentation you want */\n    }\n  }\n\n\n\n}","import { Component, Watch, Prop, State, Event, EventEmitter, Element, h } from '@stencil/core';\nimport { Option } from './interfaces';\n\n@Component({\n  tag: 'ifx-multiselect',\n  styleUrl: 'multiselect.scss',\n  shadow: true\n})\n\n\nexport class Multiselect {\n\n  @Prop() options: any[] | string;\n  @Prop() size: string = 'medium (40px)';\n  @Prop() disabled: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() errorMessage: string = \"Error\";\n  @Prop() label: string = \"\";\n  @State() persistentSelectedOptions: Option[] = [];\n  @State() listOfOptions: Option[] = [];\n  @State() dropdownOpen = false;\n  @State() dropdownFlipped: boolean;\n  @Prop() maxItemCount: number;\n  @State() zIndex: number = 1; // default z-index value\n  static globalZIndex = 1; // This will be shared among all instances of the component.\n  private currentIndex: number = 0; //needed for option selection using keyboard\n  // this.currentIndex = this.placeholder ? this.currentIndex = 1 : this.currentIndex = 0;\n\n\n\n  @Event() ifxSelect: EventEmitter;\n  @Event() ifxMultiselectIsOpen: EventEmitter;\n\n  @Element() el: HTMLElement;\n  dropdownElement!: HTMLElement;\n\n\n\n  @Watch('options')\n  handleOptionsChange() {\n    if (typeof this.options === 'string') {\n      try {\n        this.listOfOptions = JSON.parse(this.options);\n      } catch (err) {\n        console.error('Failed to parse options:', err);\n      }\n    } else if (Array.isArray(this.options) || typeof this.options === 'object') {\n      this.listOfOptions = this.options;\n    } else {\n      console.error('Unexpected value for options:', this.options);\n    }\n\n    // Update persistentSelectedOptions based on initially selected states\n    const initiallySelected = this.listOfOptions.filter(option => option.selected);\n    this.persistentSelectedOptions = [...this.persistentSelectedOptions, ...initiallySelected];\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.positionDropdown();\n    }, 500);\n  }\n\n\n  componentWillLoad() {\n    this.handleOptionsChange();\n  }\n\n\n\n  handleOptionClick(option: Option) {\n    this.error = false; //reset potential previous errors\n\n    // 1. Prevent action if disabled\n    //check if newly selected option has children => if not, count it as 1, otherwise count the # of children\n    let newOptionsLength = option.children ? option.children.length : 1;\n    if (this.maxItemCount && this.persistentSelectedOptions.length + newOptionsLength > this.maxItemCount && !this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value)) {\n      console.error('Max item count reached');\n      this.error = true;\n      this.errorMessage = \"Please consider the maximum number of items to choose from\";\n      return;\n    }\n\n    // 2. Determine if the current option was previously selected\n    const wasSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n\n    // 3. Handle parent-child relationships\n    if (option.children && option.children.length > 0) {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value && !option.children.some(child => child.value === selectedOption.value));\n      } else {\n        this.persistentSelectedOptions = [...this.persistentSelectedOptions, option, ...option.children];\n      }\n    } else {\n      if (wasSelected) {\n        this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== option.value);\n      } else {\n        this.persistentSelectedOptions.push(option);\n      }\n\n      const parentOption = this.listOfOptions.find(opt => opt.children && opt.children.some(child => child.value === option.value));\n\n      if (parentOption) {\n        const allChildrenSelected = parentOption.children.every(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n        const someChildrenSelected = parentOption.children.some(child => this.persistentSelectedOptions.some(selectedOption => selectedOption.value === child.value));\n\n        if (allChildrenSelected) {\n          if (!this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parentOption.value)) {\n            this.persistentSelectedOptions.push(parentOption);\n          }\n        } else if (someChildrenSelected) {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        } else {\n          this.persistentSelectedOptions = this.persistentSelectedOptions.filter(selectedOption => selectedOption.value !== parentOption.value);\n        }\n      }\n    }\n\n    // 4. Reflect changes in the listOfOptions state\n    this.listOfOptions = this.listOfOptions.map(opt => {\n      if (opt.value === option.value) {\n        return { ...opt, selected: !wasSelected };\n      } else if (opt.children) {\n        const isParentSelected = this.persistentSelectedOptions.includes(opt);\n        opt.children = opt.children.map(child => {\n          if (child.value === option.value || isParentSelected) {\n            return { ...child, selected: true };\n          }\n          return child;\n        });\n        return { ...opt, children: opt.children };\n      }\n      return opt;\n    });\n\n    // 5. Update the selected status in persistentSelectedOptions\n    this.persistentSelectedOptions = this.persistentSelectedOptions.map(pOpt => {\n      const matchingOption = this.listOfOptions.find(loOpt => loOpt.value === pOpt.value) || this.listOfOptions.flatMap(loOpt => loOpt.children || []).find(child => child.value === pOpt.value);\n      if (matchingOption) {\n        return { ...pOpt, selected: matchingOption.selected };\n      }\n      return pOpt;\n    });\n\n    // 6. Emit persistentSelectedOptions without duplicated children\n    const emittedOptions = this.persistentSelectedOptions.map(pOpt => {\n      // If this option is a child, check if its parent is in persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        // If it's a child and its parent is also selected, ensure it's set to selected: true\n        return { ...pOpt, selected: true };\n      }\n      return pOpt;\n    }).filter(pOpt => {\n      // After ensuring the children are selected, now filter out the children whose parents are also in the persistentSelectedOptions\n      const parent = this.listOfOptions.find(loOpt => loOpt.children && loOpt.children.some(child => child.value === pOpt.value));\n      if (parent && this.persistentSelectedOptions.some(selectedOption => selectedOption.value === parent.value)) {\n        return false;  // Exclude this child since its parent is already selected\n      }\n      return true;\n    });\n    this.ifxSelect.emit(emittedOptions);\n  }\n\n  handleDocumentClick = (event: Event) => {\n    const path = event.composedPath();\n    if (!path.includes(this.dropdownElement)) {\n      this.dropdownOpen = false;\n      document.removeEventListener('click', this.handleDocumentClick);\n\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }\n  }\n\n  getSizeClass() {\n    return `${this.size}` === \"s\"\n      ? \"small-select\"\n      : \"medium-select\";\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    setTimeout(() => {\n      if (this.dropdownOpen) {\n        document.addEventListener('click', this.handleDocumentClick);\n      }\n      // Dispatch the ifxMultiselectIsOpen event\n      this.ifxMultiselectIsOpen.emit(this.dropdownOpen);\n    }, 0);\n    this.zIndex = Multiselect.globalZIndex++;\n  }\n\n\n  waitForElement(querySelectorFunc: Function, callback: Function, maxTries = 50) {\n    let tries = 0;\n    function request() {\n      requestAnimationFrame(() => {\n        const elements = querySelectorFunc();\n        if (elements.length > 0 || tries > maxTries) {\n          callback(elements);\n        } else {\n          tries++;\n          request();\n        }\n      });\n    }\n    request();\n  }\n\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return; // If it's disabled, don't do anything.\n\n    const options = this.dropdownElement.querySelectorAll('.option');\n\n    switch (event.code) {\n      case 'Enter' || 'Space':\n        if (this.dropdownOpen) {\n          this.selectItem(options);\n        } else {\n          this.toggleDropdown();\n          // Wait a bit for the dropdown to finish rendering\n          this.waitForElement(() => {\n            return this.dropdownElement.querySelectorAll('.option');\n          }, (options) => {\n            this.updateHighlightedOption(options);\n          });\n        }\n        break;\n      case 'ArrowDown':\n        this.handleArrowDown(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n      case 'ArrowUp':\n        this.handleArrowUp(options);\n        if (this.dropdownOpen) {\n          this.updateHighlightedOption(options);\n        }\n        break;\n    }\n  }\n\n  handleWrapperClick(event: MouseEvent) {\n    // This is your existing logic for positioning the dropdown\n    this.positionDropdown();\n\n    // Check if the event target is the wrapper itself and not a child element.\n    if (event.currentTarget === event.target) {\n      this.toggleDropdown();\n    }\n  }\n\n\n  clearSelection() {\n    this.persistentSelectedOptions = [];\n    this.listOfOptions = this.listOfOptions.map(option => ({ ...option, selected: false }));\n    this.ifxSelect.emit(this.persistentSelectedOptions); // if you want to emit empty selection after clearing\n  }\n\n  positionDropdown() {\n    const wrapperRect = this.el.shadowRoot.querySelector('.ifx-multiselect-wrapper')?.getBoundingClientRect();\n\n    const spaceBelow = window.innerHeight - wrapperRect.bottom;\n    const spaceAbove = wrapperRect.top;\n\n    // If there's more space above than below the trigger and the dropdown doesn't fit below\n    if ((spaceAbove > spaceBelow && wrapperRect.height > spaceBelow) || (wrapperRect.bottom > window.innerHeight)) {\n      this.dropdownFlipped = true;\n    } else {\n      this.dropdownFlipped = false;\n    }\n  }\n\n\n\n  // Helper function to update highlighted option based on currentIndex\n  private updateHighlightedOption(options: NodeList) {\n    // Clear all highlights\n    options.forEach((option: Element) => option.classList.remove('is-highlighted'));\n\n    // Apply highlight to the current option\n    if (this.currentIndex >= 0 && this.currentIndex < options.length) {\n      (options[this.currentIndex] as Element).classList.add('is-highlighted');\n    }\n  }\n\n  // Helper function to handle arrow down navigation\n  private handleArrowDown(options: NodeList) {\n    if (this.currentIndex < options.length - 1) {\n      this.currentIndex++;\n    } else {\n      this.currentIndex = 0; // Wrap to the beginning.\n    }\n  }\n\n  // // Helper function to handle arrow up navigation\n  private handleArrowUp(options: NodeList) {\n    if (this.currentIndex > 0) {\n      this.currentIndex--;\n    } else {\n      this.currentIndex = options.length - 1; // Wrap to the end.\n    }\n  }\n\n  private selectItem(options: NodeList) {\n    // If there's a previous selection, remove its \"selected\" class\n    const previouslySelected = this.dropdownElement.querySelector('.option.selected');\n    if (previouslySelected) {\n      previouslySelected.classList.remove('selected');\n    }\n\n    // Mark the current item as selected\n    const currentOptionElement = options[this.currentIndex] as Element;\n    currentOptionElement.classList.add('selected');\n\n    const currentOptionValue = currentOptionElement.getAttribute('data-value');\n    const currentListOfOptions = typeof this.options === 'string' //passed in string form via storybook\n      ? JSON.parse(this.options).map((option) => ({ value: option.value, label: option.label, children: option.children, selected: option.selected })) // added selected\n      : this.options.map(option => ({ ...option }));\n\n    const currentOption = this.findInOptions(currentListOfOptions, currentOptionValue); // get the option object based on the currently selected value and the options array\n    this.handleOptionClick(currentOption);\n  }\n\n\n\n\n  renderOption(option: Option, index: number) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`; // Generate a unique ID using the index\n    const isIndeterminate = this.isOptionIndeterminate(option);\n\n    return (\n      <div>\n        <div class={`option ${isSelected ? 'selected' : ''} \n        ${this.getSizeClass()}`}\n          data-value={option.value}\n          onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n          tabindex=\"0\"\n          role={`${option.children?.length > 0 ? \"treeitem\" : \"option\"}`}\n        >\n          <ifx-checkbox id={uniqueId} value={isSelected} indeterminate={isIndeterminate} disabled={disableCheckbox}></ifx-checkbox>\n          <label htmlFor={uniqueId}>{option.label}</label>\n        </div>\n        {option.children && option.children.map((child, childIndex) => this.renderSubOption(child, `${index}-${childIndex}`))}\n      </div>\n    );\n  }\n\n\n  isOptionIndeterminate(option: Option): boolean {\n    if (!option.children) return false;\n\n    const selectedChildren = option.children.filter(child =>\n      this.persistentSelectedOptions.some(persistentOption => persistentOption.value === child.value)\n    ).length;\n\n    return selectedChildren > 0 && selectedChildren < option.children.length;\n  }\n\n\n  findInOptions(options: Option[], searchTerm: string): Option | null {\n    for (const option of options) {\n      if (option.value === searchTerm) {\n        return option;\n      }\n      if (option.children) {\n        const foundInChildren = this.findInOptions(option.children, searchTerm);\n        if (foundInChildren) {\n          return foundInChildren;\n        }\n      }\n    }\n    return null;\n  }\n\n\n  renderSubOption(option: Option, index: string) {\n    const isSelected = this.persistentSelectedOptions.some(selectedOption => selectedOption.value === option.value);\n    const disableCheckbox = !isSelected && this.maxItemCount && this.persistentSelectedOptions.length >= this.maxItemCount;\n    const uniqueId = `checkbox-${option.value}-${index}`;\n\n    return (\n      <div class={`option sub-option ${isSelected ? 'selected' : ''} ${this.getSizeClass()}`}\n        data-value={option.value}\n        role={`${option.children?.length > 0 ? \"option\" : \"treeitem\"}`}\n        onClick={() => !disableCheckbox && this.handleOptionClick(option)}\n        tabindex=\"0\">\n        <ifx-checkbox id={uniqueId} value={isSelected} disabled={disableCheckbox}></ifx-checkbox>\n        <label htmlFor={uniqueId}>{option.label}</label>\n      </div>\n    );\n  }\n\n  render() {\n    // Create a label for the selected options\n    const selectedOptionsLabels = this.persistentSelectedOptions.map(option => option.label).join(', ');\n\n    return (\n      <div class={`ifx-multiselect-container ${this.getSizeClass()}`} ref={el => this.dropdownElement = el as HTMLElement}>\n        {\n          this.label ?\n            <div class=\"ifx-label-wrapper\">\n              <span>{this.label}</span>\n            </div> : null\n        }\n        <div class={`ifx-multiselect-wrapper \n        ${this.getSizeClass()} \n        ${this.dropdownOpen ? 'active' : ''} \n        ${this.dropdownFlipped ? 'is-flipped' : ''}\n        ${this.error ? 'error' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n          tabindex=\"0\"\n          onClick={(event) => this.handleWrapperClick(event)}\n          onKeyDown={(event) => this.handleKeyDown(event)} >\n          <div class={`ifx-multiselect-input \n          ${this.persistentSelectedOptions.length === 0 ? 'placeholder' : \"\"}\n          `}\n            onClick={this.disabled ? undefined : () => this.toggleDropdown()}\n          >\n            {this.persistentSelectedOptions.length > 0 ? selectedOptionsLabels : 'Placeholder'}\n          </div>\n          {this.dropdownOpen && (\n            <div class=\"ifx-multiselect-dropdown-menu\" style={{ '--dynamic-z-index': this.zIndex.toString() }}>\n              {this.listOfOptions.map((option, index) => this.renderOption(option, index))}\n            </div>\n          )}\n          <div class=\"ifx-multiselect-icon-container\">\n\n            {/* Clear Button - will show only if there's a selection */}\n            {this.persistentSelectedOptions.length > 0 && (\n              <div class=\"ifx-clear-button\" onClick={() => this.clearSelection()}>\n                <ifx-icon\n                  key='icon-clear'\n                  icon='delete-16'></ifx-icon>\n              </div>\n            )}\n            <div class=\"icon-wrapper-up\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-up'\n                icon='chevronup-16'></ifx-icon>\n            </div>\n            <div class=\"icon-wrapper-down\" onClick={this.disabled ? undefined : () => this.toggleDropdown()}>\n              <ifx-icon\n                key='icon-down'\n                icon='chevron-down-16'></ifx-icon>\n            </div>\n          </div>\n\n        </div>\n        {\n          this.error ?\n            <div class=\"ifx-error-message-wrapper\">\n              <span>{this.errorMessage}</span>\n            </div> : null\n        }\n      </div>\n    );\n  }\n\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["Checkbox","this","disabled","inputElement","indeterminate","internalValue","ifxChange","emit","el","key","value","newValue","oldValue","checked","event","keyCode","handleCheckbox","preventDefault","_this","hasSlot","innerHTML","h","class","type","hidden","ref","name","onChange","bind","id","concat","tabindex","onClick","onKeyDown","handleKeydown","role","error","icon","get","InfineonIconStencil","htmlString","div","document","createElement","firstChild","htmlElement","Array","from","attributes","_ref","reduce","acc","current","htmlPath","svgPaths","parentPath","convertHtmlToObject","parentPathToVnode","push","paths","querySelectorAll","pathLength","length","i","pathToObject","objToVnode","svgPath","width","ifxIcon","height","xmlns","fill","viewBox","_toConsumableArray","convertStringToHtml","svgContent","convertPathsToVnode","SVG","getSVG","consoleError","console","getIcon","toLowerCase","replace","_m","chr","Host","constructIcon","Multiselect","currentIndex","handleDocumentClick","composedPath","includes","_this2","dropdownElement","dropdownOpen","removeEventListener","ifxMultiselectIsOpen","options","listOfOptions","JSON","parse","err","isArray","initiallySelected","filter","option","selected","persistentSelectedOptions","_this3","setTimeout","positionDropdown","handleOptionsChange","_this4","newOptionsLength","children","maxItemCount","some","selectedOption","errorMessage","wasSelected","child","parentOption","find","opt","allChildrenSelected","every","map","Object","assign","isParentSelected","pOpt","matchingOption","loOpt","flatMap","emittedOptions","parent","ifxSelect","size","_this5","addEventListener","zIndex","globalZIndex","querySelectorFunc","callback","maxTries","arguments","undefined","tries","request","requestAnimationFrame","elements","_this6","code","selectItem","toggleDropdown","waitForElement","updateHighlightedOption","handleArrowDown","handleArrowUp","currentTarget","target","wrapperRect","_a","shadowRoot","querySelector","getBoundingClientRect","spaceBelow","window","innerHeight","bottom","top","dropdownFlipped","forEach","classList","remove","add","previouslySelected","currentOptionElement","currentOptionValue","getAttribute","currentListOfOptions","label","currentOption","findInOptions","handleOptionClick","index","_this7","isSelected","disableCheckbox","uniqueId","isIndeterminate","isOptionIndeterminate","getSizeClass","htmlFor","childIndex","renderSubOption","_this8","selectedChildren","persistentOption","searchTerm","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","foundInChildren","_this9","_this10","selectedOptionsLabels","join","handleWrapperClick","handleKeyDown","style","toString","renderOption","clearSelection"],"sourceRoot":""}