{"version":3,"file":"static/js/4867.88a96967.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx"],"sourcesContent":["//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.tabs {\n  display: flex;\n  font-family: tokens.$ifxFontFamilyBody;\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$ifxFontWeightSemibold;\n}\n\n.tabs-list:focus-within .active-border {\n  display: none;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tabs.vertical .tab-content {\n  padding-top: 0px;\n  padding-left: 32px;\n}\n\n.tab-item {\n  // Reduced padding values\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    color: tokens.$ifxColorOcean500;\n  }\n\n  &:active,\n  &.active {\n    color: tokens.$ifxColorOcean500;\n  }\n\n  &:focus,\n  &.focus {\n    outline: none;\n    border-radius: 1px;\n    box-shadow: 0 0 0 2px tokens.$ifxColorBaseWhite, 0 0 0 4px tokens.$ifxColorOcean500;\n\n    // Assuming .active-border is a sibling of .tab-item\n    +.active-border {\n      display: none; // Hide the active border when the tab is in focus\n    }\n  }\n\n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n    pointer-events: none;\n  }\n}\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n\n.tab-content {\n  padding-top: 24px;\n  padding-left: 0px;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: tokens.$ifxFontSizeS;\n}","//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Event, EventEmitter } from '@stencil/core';\n\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n\n  @Prop() tabs: { header: string, disabled?: boolean }[] = [];\n  @Prop() orientation: string = \"horizontal\";\n  @Prop({ mutable: true }) activeTabIndex: number = 0;\n\n  @State() internalOrientation: string;\n  @State() internalActiveTabIndex: number = 0;\n  @State() internalFocusedTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() disabledTabs: string[] = [];\n  @State() tabObjects: any[] = [];\n\n  @Event() ifxTabChange: EventEmitter;\n\n  componentWillLoad() {\n    this.internalOrientation = this.orientation.toLowerCase() === 'vertical' ? 'vertical' : 'horizontal';\n    if (this.internalActiveTabIndex !== this.activeTabIndex) {\n      this.ifxTabChange.emit({ previousTab: this.internalActiveTabIndex, currentTab: this.activeTabIndex });\n    };\n    this.internalActiveTabIndex = this.activeTabIndex;\n    this.internalFocusedTabIndex = this.internalActiveTabIndex;\n    this.updateTabStyles();\n  }\n\n\n\n\n  updateTabStyles() {\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.classList.toggle('active', index === this.internalActiveTabIndex);\n      tab.setAttribute('aria-selected', index === this.internalActiveTabIndex ? 'true' : 'false')\n    });\n  }\n\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.internalActiveTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    this.tabObjects = Array.from(tabs).map((tab) => {\n      return {\n        header: tab?.header,\n        disabled: tab?.disabled === true\n      }\n    });\n\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentDidLoad() {\n    this.onSlotChange();\n    this.updateBorderAndFocus();\n  }\n\n  componentDidUpdate() {\n    this.updateBorderAndFocus();\n  }\n\n  private updateBorderAndFocus() {\n    this.reRenderBorder()\n    this.updateTabFocusability();\n  }\n\n  private updateTabFocusability() {\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.tabIndex = index === this.internalActiveTabIndex ? 0 : -1;\n    })\n  }\n\n\n  private focusNextTab() {\n    let nextIndex = this.internalFocusedTabIndex + 1;\n    while (nextIndex < this.tabHeaderRefs.length && this.tabObjects[nextIndex].disabled) {\n      nextIndex++;\n    }\n    this.internalFocusedTabIndex = nextIndex;\n    if (nextIndex >= 0 && nextIndex < this.tabHeaderRefs.length) {\n      this.tabHeaderRefs[nextIndex].focus();\n    }\n  }\n\n  private focusPreviousTab() {\n    let prevIndex = this.internalFocusedTabIndex - 1;\n    while ((prevIndex >= 0) && (this.tabObjects[prevIndex].disabled)) {\n      prevIndex--;\n    }\n    this.internalFocusedTabIndex = prevIndex;\n    if ((prevIndex >= 0) && (prevIndex < this.tabHeaderRefs.length)) {\n      this.tabHeaderRefs[prevIndex].focus();\n    }\n  }\n\n  private getTabItemClass(index: number) {\n    const isActive = index === this.internalActiveTabIndex && !this.tabObjects[index].disabled;\n    const isDisabled = this.tabObjects[index].disabled;\n    return `tab-item ${isActive ? 'active' : ''} ${isDisabled ? 'disabled' : ''}`;\n  }\n\n  private handleClick(tab, index) {\n    this.ifxTabChange.emit({ previousTab: this.internalActiveTabIndex, currentTab: index })\n    if (!tab.disabled) this.internalActiveTabIndex = index;\n\n  }\n\n\n\n  @Listen('keydown')\n  handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === 'Tab') {\n      if (ev.shiftKey) {\n        // Shift + Tab\n        if (this.internalFocusedTabIndex === 0) {\n          // Allow default behavior to move focus out of component\n          return;\n        } else {\n          ev.preventDefault();\n          this.focusPreviousTab();\n        }\n      } else {\n        // Tab\n        if (this.internalFocusedTabIndex === this.tabHeaderRefs.length - 1) {\n          // Allow default behavior to move focus out of component\n          return;\n        } else {\n          ev.preventDefault();\n          this.focusNextTab();\n        }\n      }\n    } else if (ev.key === 'Enter') {\n      if (this.internalFocusedTabIndex !== -1 && !this.tabObjects[this.internalFocusedTabIndex].disabled) {\n        const previouslyActiveTabIndex = this.internalActiveTabIndex;\n        this.internalActiveTabIndex = this.internalFocusedTabIndex;\n        this.ifxTabChange.emit({ previousTab: previouslyActiveTabIndex, currentTab: this.internalFocusedTabIndex })\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div aria-label=\"navigation tabs\" class={`tabs ${this.internalOrientation}`}>\n        <ul role=\"tablist\" class=\"tabs-list\">\n          {this.tabObjects?.map((tab, index) => (\n            <li\n              class={this.getTabItemClass(index)}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n              tabindex=\"0\"\n              onClick={() => this.handleClick(tab, index)}\n              aria-selected={index === this.internalActiveTabIndex ? 'true' : 'false'}\n              aria-disabled={tab.disabled ? 'true' : 'false'}\n              role=\"tab\"\n            >\n              {tab?.header}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabObjects).map((_, index) => (\n            <div style={{ display: index === this.internalActiveTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}"],"names":["IfxTabs","componentWillLoad","this","internalOrientation","orientation","toLowerCase","internalActiveTabIndex","activeTabIndex","ifxTabChange","emit","previousTab","currentTab","internalFocusedTabIndex","updateTabStyles","tabHeaderRefs","forEach","tab","index","classList","toggle","setAttribute","reRenderBorder","borderElement","el","shadowRoot","querySelector","style","left","concat","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","onSlotChange","tabs","querySelectorAll","tabObjects","Array","from","map","header","disabled","tabRefs","setDefaultOrientation","lowercaseOrientation","includes","componentDidLoad","updateBorderAndFocus","componentDidUpdate","updateTabFocusability","tabIndex","focusNextTab","nextIndex","length","focus","focusPreviousTab","prevIndex","getTabItemClass","isActive","isDisabled","handleClick","handleKeyDown","ev","key","shiftKey","preventDefault","previouslyActiveTabIndex","render","h","class","role","_a","ref","tabindex","onClick","_","display","name"],"sourceRoot":""}