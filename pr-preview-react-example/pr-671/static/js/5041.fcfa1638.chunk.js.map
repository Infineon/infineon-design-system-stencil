{"version":3,"file":"static/js/5041.fcfa1638.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/alert/alert.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/alert/alert.scss?tag=ifx-alert&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.scss?tag=ifx-icon","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.tsx"],"sourcesContent":["import { Component, Prop, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-alert',\n  styleUrl: 'alert.scss',\n  shadow: true,\n})\n\nexport class Alert {\n  @Prop() variant: 'primary' | 'secondary' | 'danger' | 'warning' | 'info' = 'primary';\n  @Prop() icon: string;\n  @Event() ifxClose: EventEmitter;\n\n  handleClose() { \n    this.ifxClose.emit()\n  }\n\n \n  render() {\n    return (\n     this.variant === 'info' \n     ? <div class='alert__info-wrapper'>\n        <div class='info__text-wrapper'>\n          <div class=\"info__headline-wrapper\">\n            <slot name='headline' />\n          </div>\n          <div class=\"info__description-wrapper\">\n            <slot name='desc' />\n          </div>\n        </div>\n        <div class=\"close-icon-wrapper\">\n          <a href=\"javascript:void(0);\" onClick={this.handleClose.bind(this)}>\n            <ifx-icon icon='cross-16' />\n          </a>\n        </div>\n      </div>\n     : <div class={`alert ${this.variant}`}>\n        {this.icon && (\n          <div class='icon-wrapper'>\n            <ifx-icon icon={this.icon} />\n          </div>\n        )\n        }\n        <div class=\"alert-text\">\n          <slot />\n        </div>\n        <div class=\"close-icon-wrapper\">\n          <a href=\"javascript:void(0);\" onClick={this.handleClose.bind(this)}>\n            <ifx-icon icon='cross-16' />\n          </a>\n        </div>\n      </div >\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host { \n  display: block;\n}\n\n.alert__info-wrapper { \n  display: flex;\n  padding: 16px 24px;\n  //justify-content: space-between;\n\n  & .info__text-wrapper { \n    display: flex;\n    flex-direction: column;\n    gap: tokens.$ifxSpace100;\n    width: 100%;\n    \n    & .info__headline-wrapper { \n      display: -webkit-box;\n      -webkit-line-clamp: 1;\n      -webkit-box-orient: vertical;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    & .info__headline-wrapper, .info__description-wrapper { \n      color: #1D1D1D;\n      font-family: Source Sans 3;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 600;\n      line-height: 24px; \n\n      ::slotted(p) {\n        padding: 0;\n        margin: 0;\n      }\n    }\n\n    & .info__description-wrapper { \n      font-weight: 400;\n    }\n  }\n\n  & .close-icon-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    //min-width: tokens.$ifxSize500;\n\n    & a {\n      line-height: 0;\n      color: tokens.$ifxColorBaseBlack;\n    }\n  }\n}\n\n.alert {\n  display: flex;\n  border: 1px solid tokens.$ifxColorOcean500;\n  border-radius: tokens.$ifxBorderRadius12;\n  color: tokens.$ifxColorBaseBlack;\n  background-color: tokens.$ifxColorBaseWhite;\n\n  & .close-icon-wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-width: tokens.$ifxSize500;\n\n    & a {\n      line-height: 0;\n      color: tokens.$ifxColorBaseBlack;\n    }\n  }\n\n  & .icon-wrapper {\n    position: relative;\n    min-width: tokens.$ifxSize600;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  & .alert-text {\n    font-size: 16px;\n    width: 100%;\n    padding: 12px 0px 12px 12px;\n    color: tokens.$ifxColorBaseBlack;\n\n    white-space: pre-wrap;\n    /* wraps text at spaces and within words */\n    word-wrap: break-word;\n    /* breaks text within a word if necessary */\n    overflow-wrap: anywhere;\n    /* breaks text at arbitrary points when needed */\n  }\n\n  &.primary {\n    border: 1px solid tokens.$ifxColorOcean500;\n\n    & .icon-wrapper {\n      background-color: tokens.$ifxColorOcean500;\n      color: tokens.$ifxColorBaseWhite;\n    }\n  }\n\n  &.secondary {\n    border: 1px solid tokens.$ifxColorBerry500;\n\n    & .icon-wrapper {\n      background-color: tokens.$ifxColorBerry500;\n      color: tokens.$ifxColorBaseWhite;\n    }\n  }\n\n  &.danger {\n    border: 1px solid tokens.$ifxColorRed500;\n\n    & .icon-wrapper {\n      background-color: tokens.$ifxColorRed500;\n      color: tokens.$ifxColorBaseWhite;\n    }\n  }\n\n  &.warning {\n    border: 1px solid tokens.$ifxColorOrange500;\n\n    & .icon-wrapper {\n      background-color: tokens.$ifxColorOrange500;\n      color: tokens.$ifxColorBaseWhite;\n    }\n  }\n}","ifx-icon {\n  display: inline-flex;\n  justify-content: center;\n\n  &:empty {\n    display: none;\n  }\n}","import { Component, Prop, h, Host, Event, EventEmitter } from '@stencil/core';\nimport { getIcon } from '@infineon/infineon-icons'\n\n\n@Component({\n  tag: 'ifx-icon',\n  styleUrl: './infineonIconStencil.scss'\n})\n\nexport class InfineonIconStencil {\n  @Prop({ mutable: true }) icon: string = \"\"\n  @Prop({ mutable: true }) ifxIcon: any;\n  @Event() consoleError: EventEmitter<boolean>;\n \n  convertStringToHtml(htmlString) { \n    const div = document.createElement('div')\n    div.innerHTML = htmlString\n    return div.firstChild\n  }\n\n  convertHtmlToObject(htmlElement) { \n    let pathToObject = Array\n      .from(htmlElement.attributes, ({ name, value }) => ({ name, value }))\n      .reduce((acc, current) => {\n        acc[current.name] = current.value\n        return acc\n      }, {})\n\n    return pathToObject\n  }\n\n  convertPathsToVnode(htmlPath) { \n    let svgPaths = []\n    const parentPath = this.convertHtmlToObject(htmlPath);\n    const parentPathToVnode = h(\"path\", parentPath);\n    svgPaths.push(parentPathToVnode)\n    if(htmlPath.firstChild) { \n      const paths = htmlPath.querySelectorAll('path');\n      const pathLength = htmlPath.querySelectorAll('path').length;\n      for(let i = 0; i < pathLength; i++) { \n        let pathToObject = this.convertHtmlToObject(paths[i])\n        let objToVnode = h(\"path\", pathToObject)\n        svgPaths.push(objToVnode)\n      }      \n    }\n    return svgPaths\n  }\n\n  getSVG(svgPath) {\n    return <svg class=\"inline-svg\" width={this.ifxIcon.width} height={this.ifxIcon.height} xmlns=\"http://www.w3.org/2000/svg\" fill={this.ifxIcon.fill} viewBox={this.ifxIcon.viewBox}>{...svgPath}</svg>\n  }\n\n  constructIcon() {\n    if(this.ifxIcon) {\n      const htmlPath = this.convertStringToHtml(this.ifxIcon.svgContent)\n      const svgPath = this.convertPathsToVnode(htmlPath)\n      const SVG = this.getSVG(svgPath)\n      this.consoleError.emit(false)\n      return SVG;\n    } else {\n      console.error('Icon not found!')\n      this.consoleError.emit(true)\n      return \"\"\n    }\n  }\n\n  componentWillLoad() {\n    const removeHyphen = (str) => str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr);\n    this.ifxIcon = getIcon(removeHyphen(this.icon));\n  }\n\n  render() {\n    return (\n      <Host>\n      {this.constructIcon()}\n      </Host>\n    );\n  }\n}"],"names":["Alert","this","ifxClose","emit","key","value","variant","h","class","name","href","onClick","handleClose","bind","icon","concat","InfineonIconStencil","htmlString","div","document","createElement","innerHTML","firstChild","htmlElement","Array","from","attributes","_ref","reduce","acc","current","htmlPath","svgPaths","parentPath","convertHtmlToObject","parentPathToVnode","push","paths","querySelectorAll","pathLength","length","i","pathToObject","objToVnode","svgPath","apply","width","ifxIcon","height","xmlns","fill","viewBox","_toConsumableArray","convertStringToHtml","svgContent","convertPathsToVnode","SVG","getSVG","consoleError","console","error","getIcon","toLowerCase","replace","_m","chr","Host","constructIcon"],"sourceRoot":""}