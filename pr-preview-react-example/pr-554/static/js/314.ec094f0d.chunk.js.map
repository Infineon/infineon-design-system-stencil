{"version":3,"file":"static/js/314.ec094f0d.chunk.js","mappings":"wMAQaA,EAAI,W,gJAGkB,E,kDAIjC,SAAmBC,GACJA,EAAMC,eACTC,SAASC,KAAKC,KACtBD,KAAKE,Y,GAER,CAAAC,IAAA,kCAAAC,MAGD,SAAgCP,GAC9BG,KAAKK,cAAgBR,EAAMS,OAC3BN,KAAKO,gBAAgBC,KAAKX,EAAMS,QAChCN,KAAKS,Y,GACN,CAAAN,IAAA,kBAAAC,MAED,WAEE,OAD4BJ,KAAKC,GAAGS,cAAc,oB,GAEnD,CAAAP,IAAA,aAAAC,MAED,WAC8BJ,KAAKW,kBACXC,QAAS,C,GAChC,CAAAT,IAAA,aAAAC,MAED,WACE,IAAIS,EAAwBb,KAAKW,kBACjCE,EAAsBD,QAAUC,EAAsBD,OACtDZ,KAAKc,iB,GACN,CAAAX,IAAA,kBAAAC,MAED,WAC2BJ,KAAKC,GAAGc,WAAWL,cAAc,yBACzCM,UAAUC,OAAO,O,GACnC,CAAAd,IAAA,SAAAC,MAED,WAAM,IAAAc,EAAA,KACJ,OACEC,EAAAA,EAAAA,GAAA,OAAKC,MAAM,uBACTD,EAAAA,EAAAA,GAAA,OAAKC,MAAM,UAAUC,QAAS,kBAAMH,EAAKT,YAAY,IACnDU,EAAAA,EAAAA,GAAA,OAAKC,MAAM,iBACRpB,KAAKK,cAAgBL,KAAKK,cAAgBL,KAAKsB,cAElDH,EAAAA,EAAAA,GAAA,OAAKC,MAAM,yBACTD,EAAAA,EAAAA,GAAA,YAAUI,KAAK,qBAGnBJ,EAAAA,EAAAA,GAAA,QAAMK,KAAK,S,GAGhB,CAAArB,IAAA,KAAAsB,IAAA,W,0BAxDc,G,QCRD,m5C","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/chips/chip.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/chips/chip.scss?tag=ifx-chip&encapsulation=shadow"],"sourcesContent":["import { Component, h, Element, Prop, Listen, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-chip',\n  styleUrl: 'chip.scss',\n  shadow: true\n})\n\nexport class Chip {\n  @Element() el;\n  @Prop() placeholder: string;\n  @State() selectedValue: string = \"\";\n  @Event() ifxDropdownMenu: EventEmitter<CustomEvent>;\n\n  @Listen('mousedown', { target: 'document' })\n  handleOutsideClick(event: MouseEvent) {\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      this.closedMenu();\n    }\n  }\n\n  @Listen('ifxDropdownItem')\n  handleDropdownItemValueEmission(event: CustomEvent) {\n    this.selectedValue = event.detail;\n    this.ifxDropdownMenu.emit(event.detail);\n    this.toggleMenu()\n  }\n\n  getDropdownMenu() { \n    let dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu');\n    return dropdownMenuComponent\n  }\n\n  closedMenu() {\n    let dropdownMenuComponent = this.getDropdownMenu()\n    dropdownMenuComponent.isOpen = false;\n  }\n\n  toggleMenu() { \n    let dropdownMenuComponent = this.getDropdownMenu()\n    dropdownMenuComponent.isOpen = !dropdownMenuComponent.isOpen;\n    this.toggleCloseIcon()\n  }\n\n  toggleCloseIcon() { \n    const closeIconWrapper = this.el.shadowRoot.querySelector('.wrapper-close-button')\n    closeIconWrapper.classList.toggle('show')\n  }\n\n  render() {\n    return (\n      <div class=\"dropdown container\">\n        <div class=\"wrapper\" onClick={() => this.toggleMenu()}>\n          <div class=\"wrapper-label\">\n            {this.selectedValue ? this.selectedValue : this.placeholder}\n          </div>\n          <div class=\"wrapper-close-button\">\n            <ifx-icon icon=\"chevrondown12\"></ifx-icon>\n          </div>\n        </div>\n        <slot name=\"menu\" />\n      </div>\n    );\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host { \n  display: inline-block;\n}\n\n.container {\n  //display: inline-block;\n  position: relative;\n\n  & .wrapper {\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 8px 16px;\n    gap: tokens.$ifxSpace100;\n\n    background: tokens.$ifxColorBaseWhite;\n\n    border: 1px solid #BFBBBB;\n    border-radius: 100px;\n\n    &:hover {\n      cursor: pointer;\n      border: 1px solid #575352;\n    }\n\n    &:active {\n      border: 1px solid #0A8276;\n    }\n\n    & .wrapper-label {\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n      display: flex;\n      align-items: center;\n      color: tokens.$ifxColorBaseBlack;\n      flex: none;\n      order: 0;\n      flex-grow: 0;\n    }\n\n    & .wrapper-close-button {\n      & ifx-icon {\n        transition: .3s;\n        width: 12px;\n        height: 12px;\n      }\n\n      &.show {\n        & ifx-icon {\n          transition: .3s;\n          transform: rotate(-180deg);\n        }\n      }\n    }\n  }\n}"],"names":["Chip","event","composedPath","includes","this","el","closedMenu","key","value","selectedValue","detail","ifxDropdownMenu","emit","toggleMenu","querySelector","getDropdownMenu","isOpen","dropdownMenuComponent","toggleCloseIcon","shadowRoot","classList","toggle","_this","h","class","onClick","placeholder","icon","name","get"],"sourceRoot":""}