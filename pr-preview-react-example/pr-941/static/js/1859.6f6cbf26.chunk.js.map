{"version":3,"file":"static/js/1859.6f6cbf26.chunk.js","mappings":"qKAAA,MCQaA,EAAQ,M,yFAIS,E,YACH,E,YACA,E,UACF,G,UACA,I,8CAEU,E,kCAKjCC,cAAAA,GACOC,KAAKC,WACJD,KAAKE,aAAaC,eACpBH,KAAKI,eAAgB,EACrBJ,KAAKK,uBAAwB,GAE7BL,KAAKI,eAAiBJ,KAAKI,cAE7BJ,KAAKM,UAAUC,KAAKP,KAAKI,e,CAM7BI,YAAAA,CAAaC,EAAmBC,GAC1BD,IAAaC,IACfV,KAAKI,cAAgBK,EACrBT,KAAKE,aAAaS,QAAUX,KAAKI,c,CAMrCQ,oBAAAA,CAAqBH,EAAmBC,GAClCD,IAAaC,IACfV,KAAKK,sBAAwBI,EAC7BT,KAAKE,aAAaC,cAAgBH,KAAKK,sB,CAI3CQ,aAAAA,CAAcC,GAEU,KAAlBA,EAAMC,SAAoC,KAAlBD,EAAMC,UAChCf,KAAKD,iBACLe,EAAME,iB,CAIVC,iBAAAA,GACEjB,KAAKI,cAAgBJ,KAAKkB,MAC1BlB,KAAKK,sBAAwBL,KAAKG,a,CAGpCgB,kBAAAA,GACEnB,KAAKE,aAAaC,cAAgBH,KAAKK,qB,CAGzCe,mBAAAA,GACE,OAAIpB,KAAKqB,MACHrB,KAAKI,cACA,gBAEA,QAEAJ,KAAKI,cACP,UACK,E,CAIhBkB,MAAAA,GAEE,IAAIC,GAAU,EAMd,OAPavB,KAAKwB,GAAGC,YAInBF,GAAU,IAIVG,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAM,wBACTF,EAAAA,EAAAA,GAAA,SAAAC,IAAA,2CACEE,KAAK,WACLC,QAAM,EACNC,IAAMP,GAAQxB,KAAKE,aAAesB,EAClCQ,KAAMhC,KAAKgC,KACXrB,QAASX,KAAKI,cACd6B,SAAUjC,KAAKD,eAAemC,KAAKlC,MACnCmC,GAAG,WACHjB,MAAK,GAAAkB,OAAKpC,KAAKI,kBAGjBsB,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CACEU,SAAS,IACTC,QAAStC,KAAKD,eAAemC,KAAKlC,MAClCuC,UAAWvC,KAAKa,cAAcqB,KAAKlC,MACnCwC,KAAK,W,aACOxC,KAAKI,cAAa,gBACfJ,KAAKC,SAAQ,kBACZ,QAChB2B,MAAK,iCAAAQ,OACHpC,KAAKoB,sBAAqB,cAAAgB,OACd,MAAdpC,KAAKyC,KAAe,aAAe,GAAE,cAAAL,OACrCpC,KAAKG,cAAgB,gBAAkB,GAAE,cAAAiC,OACzCpC,KAAKC,SAAW,WAAa,KAE5BD,KAAKI,gBAAiBsB,EAAAA,EAAAA,GAAA,YAAUgB,KAAK,cAEvCnB,IACCG,EAAAA,EAAAA,GAAA,OAAKS,GAAG,QAAQP,MAAK,SAAAQ,OAAyB,MAAdpC,KAAKyC,KAAe,UAAY,GAAE,KAAAL,OAAIpC,KAAKC,SAAW,WAAa,GAAE,KAAKqC,QAAStC,KAAKD,eAAemC,KAAKlC,QAC1I0B,EAAAA,EAAAA,GAAA,c,oID1HQ,upE","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.scss?tag=ifx-checkbox&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/checkbox/checkbox.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n    display: inline-flex;\n    vertical-align: top;\n}\n\n\n.checkbox__container {\n    box-sizing: border-box;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: tokens.$ifxSpace100;\n    font-family: var(--ifx-font-family);\n\n    & .checkbox__wrapper {\n        display: flex;\n        position: relative; //needs to be added for the indeterminate state of the checkbox\n        justify-content: center;\n        align-items: center;\n        width: tokens.$ifxSize250;\n        height: tokens.$ifxSize250;\n        background-color: tokens.$ifxColorBaseWhite;\n        border: 1px solid #575352;\n        border-radius: tokens.$ifxBorderRadius12;\n        flex: none;\n        order: 0;\n        flex-grow: 0;\n\n        &.checkbox-m {\n            height: tokens.$ifxSize300;\n            width: tokens.$ifxSize300;\n        }\n\n\n        &.error {\n            border-color: #CD002F;\n        }\n\n        &:focus-visible {\n            border: 1px solid #575352;\n            outline: 2px solid #0A8276;\n            outline-offset: 2px;\n        }\n\n        &:hover {\n            background-color: #EEEDED;\n            border: 1px solid #575352;\n            border-radius: tokens.$ifxBorderRadius12;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.disabled {\n            background-color: #BFBBBB;\n            border-color: #BFBBBB;\n            border-radius: tokens.$ifxBorderRadius12;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n        }\n\n        &.checked {\n            background-color: #0A8276;\n            border-radius: tokens.$ifxBorderRadius12;\n            border-color: tokens.$ifxColorBaseTransparent;\n            flex: none;\n            order: 0;\n            flex-grow: 0;\n            color: tokens.$ifxColorBaseWhite;\n\n            &.error {\n                background-color: #CD002F;\n            }\n\n            &:focus-visible {\n                border: 1px solid transparent;\n                outline: 2px solid #0A8276;\n                outline-offset: 2px;\n            }\n\n            &:hover {\n                background-color: #08665C;\n                border-radius: tokens.$ifxBorderRadius12;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n\n            &.disabled {\n                background: #BFBBBB;\n                border-radius: tokens.$ifxBorderRadius12;\n                flex: none;\n                order: 0;\n                flex-grow: 0;\n            }\n        }\n\n        &.indeterminate {\n            &:before {\n                content: \"\";\n                display: block;\n                width: 70%; // Adjust as needed for the width of the minus sign\n                height: 2px; // Adjust for thickness of the minus sign\n                background-color: #08665C; // Color of the minus sign\n                position: absolute;\n                top: 50%;\n                left: 50%;\n                transform: translate(-50%, -50%);\n            }\n        }\n\n    }\n\n    & .label {\n        height: tokens.$ifxSize250;\n        font-style: normal;\n        font-weight: 400;\n        font-size: tokens.$ifxFontSizeS;\n        line-height: tokens.$ifxLineHeightS;\n        color: tokens.$ifxColorBaseBlack;\n        flex: none;\n        order: 1;\n        flex-grow: 0;\n\n        &.label-m {\n            height: tokens.$ifxSize300;\n            font-size: tokens.$ifxFontSizeM;\n            line-height: tokens.$ifxLineHeightM;\n        }\n\n        &.disabled {\n            color: #BFBBBB;\n        }\n    }\n\n    & .checkbox__wrapper,\n    & .label {\n        &:hover {\n            cursor: pointer;\n        }\n    }\n\n}","import { Component, h, Prop, Element, State, Event, EventEmitter, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true\n})\n\nexport class Checkbox {\n  private inputElement: HTMLInputElement;\n\n  @Element() el;\n  @Prop() disabled: boolean = false;\n  @Prop() value: boolean = false;\n  @Prop() error: boolean = false;\n  @Prop() name: string = '';\n  @Prop() size: string = 'm';\n  @State() internalValue: boolean;\n  @Prop() indeterminate: boolean = false;\n  @State() internalIndeterminate: boolean;\n\n  @Event({ bubbles: true, composed: true }) ifxChange: EventEmitter;\n\n  handleCheckbox() {\n    if (!this.disabled) {\n      if (this.inputElement.indeterminate) {\n        this.internalValue = true;\n        this.internalIndeterminate = false;\n      } else {\n        this.internalValue = !this.internalValue;\n      }\n      this.ifxChange.emit(this.internalValue);\n    }\n  }\n\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n      this.inputElement.checked = this.internalValue; // update the checkbox's checked property\n    }\n  }\n\n\n  @Watch('indeterminate')\n  indeterminateChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalIndeterminate = newValue;\n      this.inputElement.indeterminate = this.internalIndeterminate; // update the checkbox's indeterminate property\n    }\n  }\n\n  handleKeydown(event) {\n    // Keycode 32 corresponds to the Space key, 13 corresponds to the Enter key\n    if (event.keyCode === 32 || event.keyCode === 13) {\n      this.handleCheckbox();\n      event.preventDefault();  // prevent the default action when space or enter is pressed\n    }\n  }\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n    this.internalIndeterminate = this.indeterminate;\n  }\n\n  componentDidRender() {\n    this.inputElement.indeterminate = this.internalIndeterminate;\n  }\n\n  getCheckedClassName() {\n    if (this.error) {\n      if (this.internalValue) {\n        return \"checked error\"\n      } else {\n        return \"error\"\n      }\n    } else if (this.internalValue) {\n      return \"checked\";\n    } else return \"\"\n  }\n\n\n  render() {\n    const slot = this.el.innerHTML;\n    let hasSlot = false;\n\n    if (slot) {\n      hasSlot = true;\n    }\n\n    return (\n      <div class=\"checkbox__container\">\n        <input\n          type=\"checkbox\"\n          hidden\n          ref={(el) => (this.inputElement = el)}\n          name={this.name}\n          checked={this.internalValue}\n          onChange={this.handleCheckbox.bind(this)} // Listen for changes here\n          id='checkbox'\n          value={`${this.internalValue}`}\n        />\n\n        <div\n          tabindex=\"0\"\n          onClick={this.handleCheckbox.bind(this)}\n          onKeyDown={this.handleKeydown.bind(this)}\n          role=\"checkbox\"  // role attribute\n          aria-value={this.internalValue}\n          aria-disabled={this.disabled}\n          aria-labelledby=\"label\"\n          class={`checkbox__wrapper \n          ${this.getCheckedClassName()}\n        ${this.size === \"m\" ? \"checkbox-m\" : \"\"}\n        ${this.indeterminate ? 'indeterminate' : \"\"}\n        ${this.disabled ? 'disabled' : \"\"}`}\n        >\n          {this.internalValue && <ifx-icon icon=\"check-12\"></ifx-icon>}\n        </div>\n        {hasSlot &&\n          <div id=\"label\" class={`label ${this.size === \"m\" ? \"label-m\" : \"\"} ${this.disabled ? 'disabled' : \"\"} `} onClick={this.handleCheckbox.bind(this)}>\n            <slot />\n          </div>}\n      </div>\n    );\n  }\n}\n"],"names":["Checkbox","handleCheckbox","this","disabled","inputElement","indeterminate","internalValue","internalIndeterminate","ifxChange","emit","valueChanged","newValue","oldValue","checked","indeterminateChanged","handleKeydown","event","keyCode","preventDefault","componentWillLoad","value","componentDidRender","getCheckedClassName","error","render","hasSlot","el","innerHTML","h","key","class","type","hidden","ref","name","onChange","bind","id","concat","tabindex","onClick","onKeyDown","role","size","icon"],"sourceRoot":""}