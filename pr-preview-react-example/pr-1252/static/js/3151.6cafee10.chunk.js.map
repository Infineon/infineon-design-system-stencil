{"version":3,"file":"static/js/3151.6cafee10.chunk.js","mappings":"uKAAA,MCOaA,EAAU,M,+BAGrBC,gBAAAA,GACE,MAAMC,EAAUC,KAAKC,GAAGC,WAAWC,WACnCH,KAAKI,0CAA0CL,E,CAIzCK,yCAAAA,CAA0CL,GAChD,IAAKA,EAEH,YADAM,QAAQC,MAAM,qBAGhBP,EAAQQ,UAAY,EAEpB,MAAMC,EAAOT,EAAQU,cAAc,QACnC,GAAGD,EAAM,CACP,MAAME,EAAgBF,EAAKE,gBAE3B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAcE,OAAQD,IAAK,CAC7C,MAAME,EAAOH,EAAcC,GAC3B,GAAsB,wBAAlBE,EAAKC,SAAoC,CAC3C,MAAMC,EAAkBF,EACnBE,EAAgBC,aAAa,SAChCD,EAAgBR,UAAY,EAC5BQ,EAAgBE,iBAAiB,SAAS,KACpCF,EAAgBC,aAAa,QAC/BD,EAAgBG,M,QAS9BC,MAAAA,GACE,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,wDAAgB,+BACdD,EAAAA,EAAAA,GAAA,MAAAC,IAAA,2CAAIC,MAAM,eACRF,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8C,wCDhDY,4Q","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb.scss?tag=ifx-breadcrumb&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.breadcrumb {\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  flex-direction: row;\n  font-family: var(--ifx-font-family);\n  font-size: tokens.$ifxFontSizeS;\n  align-items: flex-start;\n  //gap: tokens.$ifxSpace200; //this is where the gap comes from\n\n}\n\n// .separator {\n//   color: tokens.$ifxColorEngineering300;\n//   margin: 0 16px;\n// }","import { Component, h, Element } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true\n})\nexport class Breadcrumb {\n  @Element() el;\n\n  componentDidLoad() {\n    const element = this.el.shadowRoot.firstChild;\n    this.addEventListenersToHandleCustomFocusState(element);\n\n  }\n\n  private addEventListenersToHandleCustomFocusState(element: HTMLElement) {\n    if (!element) {\n      console.error('element not found');\n      return;\n    }\n    element.tabIndex = -1;\n\n    const slot = element.querySelector('slot');\n    if(slot) { \n      const assignedNodes = slot.assignedNodes();\n  \n      for (let i = 0; i < assignedNodes.length; i++) {\n        const node = assignedNodes[i];\n        if (node.nodeName === 'IFX-BREADCRUMB-ITEM') {\n          const breadcrumbLabel = node as HTMLIfxBreadcrumbItemElement;\n          if (!breadcrumbLabel.hasAttribute('url')) {\n            breadcrumbLabel.tabIndex = -1;\n            breadcrumbLabel.addEventListener('focus', () => {\n              if (breadcrumbLabel.hasAttribute('url')) {\n                breadcrumbLabel.blur();\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <nav aria-label=\"Page navigation breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <slot />\n        </ol>\n      </nav>\n    );\n  }\n}\n"],"names":["Breadcrumb","componentDidLoad","element","this","el","shadowRoot","firstChild","addEventListenersToHandleCustomFocusState","console","error","tabIndex","slot","querySelector","assignedNodes","i","length","node","nodeName","breadcrumbLabel","hasAttribute","addEventListener","blur","render","h","key","class"],"sourceRoot":""}