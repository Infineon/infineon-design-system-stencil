{"version":3,"file":"static/js/6577.c1aff6fc.chunk.js","mappings":"mKAAA,MCQaA,EAAO,M,8GAKa,E,uBACiB,O,qBACZ,E,aACO,U,6BAEXC,C,CAK9BC,iBAAAA,GACIC,KAAKC,kB,CAITC,cAAAA,GACI,MAAMC,EAAwCH,KAAKI,GAAGC,iBAAiB,YACvE,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BH,EAAMG,GAAGE,aAAe,CACpBC,WAAYT,KAAKU,mBACjBC,eAAgBX,KAAKW,eACrBC,QAASZ,KAAKY,QACdC,kBAAmBb,KAAKa,kB,CAMpCC,8BAAAA,GACI,MAAMX,EAAwCH,KAAKI,GAAGC,iBAAiB,YACvEF,EAAMA,EAAMI,OAAS,GAAGQ,UAAW,EACnC,IAAK,IAAIT,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9BH,EAAMG,GAAGU,OAASV,EAAI,EAE1BN,KAAKiB,WAAad,EAAMI,M,CAG5BN,gBAAAA,GACI,IAAIiB,EAAgBC,KAAKC,IAAI,EAAGD,KAAKE,IAAIrB,KAAKiB,YAA+B,YAAjBjB,KAAKY,QAAwB,EAAI,GAAIZ,KAAKS,kBACtEX,IAA5BE,KAAKU,oBAAoCQ,GAAiBlB,KAAKU,oBAC/DV,KAAKsB,oBAAoBC,KAAK,CAAEd,WAAYS,EAAeM,WAAYxB,KAAKiB,aAEhFjB,KAAKU,mBAAqBQ,C,CAG9BO,iBAAAA,GACIzB,KAAKc,iCACLd,KAAKC,mBACLD,KAAKE,gB,CAGTwB,mBAAAA,GACI1B,KAAKE,gB,CAGTyB,MAAAA,GACI,OACIC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAK,WAAAC,OAAa/B,KAAKY,QAAO,KAAAmB,OAAqB,YAAjB/B,KAAKY,QAAwB,WAAWZ,KAAKa,kBAAmB,KAE9E,YAAjBb,KAAKY,UAAyBgB,EAAAA,EAAAA,GAAA,OAAKE,MAAM,qBACrCF,EAAAA,EAAAA,GAAA,OAAKE,MAAM,mBAAiB,GAAAC,OACpBZ,KAAKE,IAAIrB,KAAKU,mBAAoBV,KAAKiB,YAAW,QAAAc,OAAO/B,KAAKiB,eAK9EW,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CAAKC,MAAK,oBACNF,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8C,CAMhBG,kBAAAA,GAEI,GAAoB,WAAhBhC,KAAKY,QAAsB,CACMZ,KAAKI,GAAG6B,WAAWC,cAAc,qBACtDC,MAAMC,YAAY,OAAQ,GAAFL,OAAM/B,KAAKU,mBAAsBV,KAAKiB,WAAe,IAAG,K,wGD1FrF,+vB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/stepper.scss?tag=ifx-stepper&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/stepper.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.stepper{\n    display: flex;\n    align-items: center;\n    \n    &.compact{\n        justify-content: space-between;\n        align-items: center;\n        \n        &.compact-right {\n            flex-direction: row-reverse;\n            text-align: left;\n        }\n\n        .stepper-wrapper{\n            flex-direction: column;\n        }\n    }\n}\n\n.stepper-wrapper{\n    display: flex;\n    flex-direction: row;\n}\n\n.stepper-progress{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font: tokens.$ifxBodyBodySemibold04;\n    min-width: tokens.$ifxSize700;\n    height: tokens.$ifxSize700;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    background: conic-gradient(tokens.$ifxColorOcean500 var(--pb, 0%), tokens.$ifxColorEngineering400 0);\n    \n    .progress-detail{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        width: (tokens.$ifxSize700)-(tokens.$ifxSize100);\n        height: (tokens.$ifxSize700)-(tokens.$ifxSize100);\n        border-radius: tokens.$ifxBorderRadiusRound;\n        background: white;\n    }\n}\n\n","import { Component, h, Prop, Element, State, EventEmitter, Event, Watch } from \"@stencil/core\";\n\n@Component({\n    tag: 'ifx-stepper',\n    styleUrl: 'stepper.scss',\n    shadow: true\n})\n\nexport class Stepper {\n\n    @Element() el: HTMLElement;\n    @Event() ifxActiveStepChange: EventEmitter;\n\n    @Prop() activeStep: number = 1;\n    @Prop() indicatorPosition: 'left' | 'right' = 'left';\n    @Prop() showStepNumber: boolean = false;\n    @Prop() variant: 'default' | 'compact' = 'default';\n\n    @State() internalActiveStep = undefined;\n\n    private stepsCount: number;\n\n    @Watch('activeStep')\n    activeStepHandler() {\n        this.updateActiveStep();\n    }\n\n    // Syncing children (steps) with parent state\n    updateChildren() {\n        const steps: NodeListOf<HTMLIfxStepElement> = this.el.querySelectorAll('ifx-step');\n        for (let i = 0; i < steps.length; i++) {\n            steps[i].stepperState = { \n                activeStep: this.internalActiveStep, \n                showStepNumber: this.showStepNumber, \n                variant: this.variant, \n                indicatorPosition: this.indicatorPosition \n            };\n        }\n\n    }\n\n    addStepIdsToStepsAndCountSteps() {\n        const steps: NodeListOf<HTMLIfxStepElement> = this.el.querySelectorAll('ifx-step');\n        steps[steps.length - 1].lastStep = true;\n        for (let i = 0; i < steps.length; i++) {\n            steps[i].stepId = i + 1;\n        }\n        this.stepsCount = steps.length;\n    }\n\n    updateActiveStep() {\n        let newActiveStep = Math.max(1, Math.min(this.stepsCount + (this.variant !== 'compact' ? 1 : 0), this.activeStep));\n        if (this.internalActiveStep === undefined || newActiveStep != this.internalActiveStep) {\n            this.ifxActiveStepChange.emit({ activeStep: newActiveStep, totalSteps: this.stepsCount });\n        }\n        this.internalActiveStep = newActiveStep;\n    }\n\n    componentWillLoad() {\n        this.addStepIdsToStepsAndCountSteps();\n        this.updateActiveStep();\n        this.updateChildren();\n    }\n\n    componentWillUpdate() {\n        this.updateChildren();\n    }\n\n    render() {\n        return (\n            <div class={`stepper ${this.variant} ${this.variant === 'compact' ? 'compact-'+this.indicatorPosition: ''}`}>\n                {\n                    this.variant === 'compact' && <div class='stepper-progress'>\n                        <div class='progress-detail'>\n                            {`${Math.min(this.internalActiveStep, this.stepsCount)} of ${this.stepsCount}`}\n                        </div>\n                    </div>\n                }\n\n                <div class={`stepper-wrapper`}>\n                    <slot />\n                </div>\n            </div>\n        );\n    };\n\n    componentDidRender() {\n        // Updating progress bar in compact version\n        if (this.variant == 'compact') {\n            const progressBar: HTMLElement = this.el.shadowRoot.querySelector('.stepper-progress')\n            progressBar.style.setProperty('--pb', `${(this.internalActiveStep / (this.stepsCount)) * 100}%`);\n        }\n    }\n}\n"],"names":["Stepper","undefined","activeStepHandler","this","updateActiveStep","updateChildren","steps","el","querySelectorAll","i","length","stepperState","activeStep","internalActiveStep","showStepNumber","variant","indicatorPosition","addStepIdsToStepsAndCountSteps","lastStep","stepId","stepsCount","newActiveStep","Math","max","min","ifxActiveStepChange","emit","totalSteps","componentWillLoad","componentWillUpdate","render","h","key","class","concat","componentDidRender","shadowRoot","querySelector","style","setProperty"],"sourceRoot":""}