{"version":3,"file":"static/js/393.f73601c2.chunk.js","mappings":"4LAIMA,EAAQ,WACZ,SAAAA,EAAYC,IAASC,EAAAA,EAAAA,GAAA,KAAAF,IACnBG,EAAAA,EAAAA,GAAiBC,KAAMH,GACvBG,KAAKC,cAAeC,EAAAA,EAAAA,GAAYF,KAAM,eAAgB,GACtDA,KAAKG,IAAM,EACXH,KAAKI,IAAM,IACXJ,KAAKK,MAAQ,EACbL,KAAKM,UAAW,EAChBN,KAAKO,gBAAiB,EACtBP,KAAKQ,cAAWC,EAChBT,KAAKU,eAAYD,EACjBT,KAAKW,cAAWF,EAChBT,KAAKY,eAAYH,CACnB,CAkBC,OAlBAI,EAAAA,EAAAA,GAAAjB,EAAA,EAAAkB,IAAA,oBAAAT,MACD,SAAkBU,GAChB,IAAMC,EAASD,EAAMC,OACrBhB,KAAKK,MAAQY,SAASD,EAAOX,OAC7BL,KAAKC,aAAaiB,KAAKlB,KAAKK,OAC5BL,KAAKmB,oBACP,GAAC,CAAAL,IAAA,qBAAAT,MACD,WACE,GAAIL,KAAKoB,SAAU,CACjB,IAAMC,GAAYrB,KAAKK,MAAQL,KAAKG,MAAQH,KAAKI,IAAMJ,KAAKG,KAAQ,IACpEH,KAAKoB,SAASE,MAAMC,YAAY,kBAAmB,GAAFC,OAAKH,EAAO,KAC/D,CACF,GAAC,CAAAP,IAAA,mBAAAT,MACD,WACEL,KAAKmB,oBACP,GAAC,CAAAL,IAAA,SAAAT,MACD,WAAS,IAAAoB,EAAA,KACP,OAAQC,EAAAA,EAAAA,GAAE,MAAO,CAAEC,MAAO,aAAe3B,KAAKW,WAAae,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,MAAO,YAAFH,OAAcxB,KAAKM,SAAW,YAAc,KAAQN,KAAKW,UAAYX,KAAKQ,WAAakB,EAAAA,EAAAA,GAAE,WAAY,CAAEE,KAAM5B,KAAKQ,SAAUmB,MAAO,YAAFH,OAAcxB,KAAKM,SAAW,YAAc,OAAUoB,EAAAA,EAAAA,GAAE,QAAS,CAAEG,KAAM,QAAS1B,IAAKH,KAAKG,IAAKC,IAAKJ,KAAKI,IAAKE,SAAUN,KAAKM,SAAUD,MAAOL,KAAKK,MAAOyB,IAAK,SAACC,GAAE,OAAMN,EAAKL,SAAWW,CAAE,EAAGC,QAAS,SAACjB,GAAK,OAAKU,EAAKQ,kBAAkBlB,EAAM,IAAKf,KAAKU,YAAcgB,EAAAA,EAAAA,GAAE,WAAY,CAAEE,KAAM5B,KAAKU,UAAWiB,MAAO,aAAFH,OAAexB,KAAKM,SAAW,YAAc,MAAUN,KAAKY,YAAcc,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,MAAO,aAAFH,OAAexB,KAAKM,SAAW,YAAc,KAAQN,KAAKY,WAAaZ,KAAKO,iBAAmBmB,EAAAA,EAAAA,GAAE,OAAQ,CAAEC,MAAO,qBAAFH,OAAuBxB,KAAKM,SAAW,YAAc,KAAQN,KAAKK,MAAO,KACtxB,KAACT,CAAA,CA/BW,GAiCdA,EAAS0B,MAnCQ,wqD","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/ifx-range.entry.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-940739b3.js';\n\nconst rangeCss = \":host{display:inline-block}.dot{display:inline-block;width:8px;height:8px;border-radius:50%}.left-icon,.right-icon,.left-text,.right-text,.percentage-display{font-family:\\\"Source Sans Pro\\\";font-size:0.8125rem;color:#7d6f72;margin-left:8px}.left-icon.disabled,.right-icon.disabled,.left-text.disabled,.right-text.disabled,.percentage-display.disabled{color:#dcd5d7}.left-icon,.left-text{margin-right:8px}.right-icon,.right-text,.percentage-display{margin-left:8px}.ifx-range{display:flex;align-items:center;padding:2px 16px;border-radius:100px}.ifx-range input[type=range]{-webkit-appearance:none;width:100%;height:3px;background:linear-gradient(to right, #378375 0%, #378375 var(--value-percent, 0%), #ebe9e9 var(--value-percent, 0%), #ebe9e9 100%);outline:none;cursor:pointer;transition:0.2s}.ifx-range input[type=range]:disabled{background:#dcd5d7;cursor:default}.ifx-range input[type=range]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:20px;height:20px;border-radius:50%;background:#378375;cursor:pointer;box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2)}.ifx-range input[type=range]::-webkit-slider-thumb:hover{box-shadow:0px 1px 4px rgba(0, 0, 0, 0.4);background:#2d6357}.ifx-range input[type=range]::-webkit-slider-thumb:active{box-shadow:0px 1px 6px rgba(0, 0, 0, 0.6);background:#28594e}.ifx-range input[type=range]::-moz-range-thumb{width:20px;height:20px;border-radius:50%;background:#378375;cursor:pointer;box-shadow:0px 1px 2px rgba(0, 0, 0, 0.2)}.ifx-range input[type=range]::-moz-range-thumb:hover{box-shadow:0px 1px 4px rgba(0, 0, 0, 0.4);background:#2d6357}.ifx-range input[type=range]::-moz-range-thumb:active{box-shadow:0px 1px 6px rgba(0, 0, 0, 0.6);background:#28594e}\";\n\nconst IfxRange = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.valueChanged = createEvent(this, \"valueChanged\", 7);\n    this.min = 0;\n    this.max = 100;\n    this.value = 0;\n    this.disabled = false;\n    this.showPercentage = false;\n    this.leftIcon = undefined;\n    this.rightIcon = undefined;\n    this.leftText = undefined;\n    this.rightText = undefined;\n  }\n  handleInputChange(event) {\n    const target = event.target;\n    this.value = parseInt(target.value);\n    this.valueChanged.emit(this.value);\n    this.updateValuePercent();\n  }\n  updateValuePercent() {\n    if (this.inputRef) {\n      const percent = ((this.value - this.min) / (this.max - this.min)) * 100;\n      this.inputRef.style.setProperty('--value-percent', `${percent}%`);\n    }\n  }\n  componentDidLoad() {\n    this.updateValuePercent();\n  }\n  render() {\n    return (h(\"div\", { class: \"ifx-range\" }, this.leftText && (h(\"span\", { class: `left-text${this.disabled ? ' disabled' : ''}` }, this.leftText)), this.leftIcon && (h(\"ifx-icon\", { icon: this.leftIcon, class: `left-icon${this.disabled ? ' disabled' : ''}` })), h(\"input\", { type: \"range\", min: this.min, max: this.max, disabled: this.disabled, value: this.value, ref: (el) => (this.inputRef = el), onInput: (event) => this.handleInputChange(event) }), this.rightIcon && (h(\"ifx-icon\", { icon: this.rightIcon, class: `right-icon${this.disabled ? ' disabled' : ''}` })), this.rightText && (h(\"span\", { class: `right-text${this.disabled ? ' disabled' : ''}` }, this.rightText)), this.showPercentage && (h(\"span\", { class: `percentage-display${this.disabled ? ' disabled' : ''}` }, this.value, \"%\"))));\n  }\n};\nIfxRange.style = rangeCss;\n\nexport { IfxRange as ifx_range };\n"],"names":["IfxRange","hostRef","_classCallCheck","registerInstance","this","valueChanged","createEvent","min","max","value","disabled","showPercentage","leftIcon","undefined","rightIcon","leftText","rightText","_createClass","key","event","target","parseInt","emit","updateValuePercent","inputRef","percent","style","setProperty","concat","_this","h","class","icon","type","ref","el","onInput","handleInputChange"],"sourceRoot":""}