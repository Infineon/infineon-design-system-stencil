{"version":3,"file":"static/js/4170.93bb7c00.chunk.js","mappings":"4MAOaA,EAAM,W,qGACQ,E,UACF,G,eACK,E,oBACM,C,iDAIlC,WACEC,KAAKC,cAAgBD,KAAKE,K,GAC3B,CAAAC,IAAA,eAAAD,MAGD,SAAaE,EAAmBC,GAC1BD,IAAaC,IACfL,KAAKC,cAAgBG,E,GAExB,CAAAD,IAAA,SAAAD,MAID,WACMF,KAAKM,WACTN,KAAKC,eAAiBD,KAAKC,cAC3BD,KAAKO,UAAUC,KAAKR,KAAKC,e,GAC1B,CAAAE,IAAA,gBAAAD,MAED,SAAcO,GACRT,KAAKM,UAES,UAAdG,EAAMN,KAAiC,MAAdM,EAAMN,KACjCH,KAAKU,Q,GAER,CAAAP,IAAA,SAAAD,MAGD,WAAM,IAAAS,EAAA,KACJ,OACEC,EAAAA,EAAAA,GAAA,OACEC,MAAK,aAAAC,OAAed,KAAKC,cAAgB,UAAY,GAAE,KAAAa,OAAId,KAAKM,SAAW,WAAa,IACxFS,KAAK,SACLC,SAAS,IAAG,eACEhB,KAAKC,cAAgB,OAAS,QAAO,aACvCD,KAAKiB,KACjBC,QAAS,kBAAMP,EAAKD,QAAQ,EAC5BS,UAAW,SAACV,GAAK,OAAKE,EAAKS,cAAcX,EAAM,IAE/CG,EAAAA,EAAAA,GAAA,OAAKC,MAAM,4BACTD,EAAAA,EAAAA,GAAA,SAAOS,KAAK,WAAWC,QAAM,EAC3BL,KAAMjB,KAAKiB,KACXX,SAAUN,KAAKM,SACfJ,MAAK,GAAAY,OAAKd,KAAKC,kBACjBW,EAAAA,EAAAA,GAAA,OAAKC,MAAK,UAAAC,OAAYd,KAAKC,cAAgB,UAAY,GAAE,KAAAa,OAAId,KAAKM,SAAW,WAAa,QAE5FM,EAAAA,EAAAA,GAAA,OAAKC,MAAK,wBAAAC,OAA0Bd,KAAKM,SAAW,WAAa,MAC/DM,EAAAA,EAAAA,GAAA,SAAOW,QAAQ,WACbX,EAAAA,EAAAA,GAAA,e,IAMT,EAAAT,IAAA,WAAAqB,IAAA,W,qCA9DgB,G,QCPD,s2D","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/switch/switch.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/switch/switch.scss?tag=ifx-switch&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, State, Watch, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  @Prop() value: boolean = false;\n  @Prop() name: string = '';\n  @Prop() disabled: boolean = false;\n  @State() internalValue: boolean = false;\n\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n  }\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n    }\n  }\n\n\n\n  toggle() {\n    if (this.disabled) return;\n    this.internalValue = !this.internalValue;\n    this.ifxChange.emit(this.internalValue);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return;\n    // If the pressed key is either 'Enter' or 'Space' \n    if (event.key === 'Enter' || event.key === ' ') {\n      this.toggle();\n    }\n  }\n\n\n  render() {\n    return (\n      <div\n        class={`container ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`}\n        role=\"switch\"\n        tabindex=\"0\"\n        aria-checked={this.internalValue ? 'true' : 'false'}\n        aria-label={this.name}\n        onClick={() => this.toggle()}\n        onKeyDown={(event) => this.handleKeyDown(event)}\n      >\n        <div class=\"switch_checkbox-wrapper\">\n          <input type=\"checkbox\" hidden\n            name={this.name}\n            disabled={this.disabled}\n            value={`${this.internalValue}`} />\n          <div class={`switch ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`} />\n        </div>\n        <div class={`switch_label-wrapper ${this.disabled ? 'disabled' : ''}`} >\n          <label htmlFor=\"switch\">\n            <slot />\n          </label>\n        </div>\n      </div >\n    )\n\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n/* switch.css */\n:host {\n  display: inline-block;\n  user-select: none;\n}\n\n.container {\n  padding: tokens.$ifxSpace50;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: tokens.$ifxSpace500;\n  // gap: tokens.$ifxSpace200;\n  height: 20px;\n  background-color: tokens.$ifxColorBaseWhite;\n  border: 1px solid tokens.$ifxColorEngineering500;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  outline: none;\n\n  &:focus {\n    outline: 4px solid #0A8276;\n    outline-offset: 2px;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:focus-visible {\n    outline: 2px solid #0A8276;\n    outline-offset: 2px;\n  }\n\n  &.disabled {\n    cursor: default;\n  }\n\n\n}\n\n\n.switch_label-wrapper {\n  margin-left: 46px; //(container witdth - switch width) + label gap (label starts where switch class ends)\n  \n  & label { \n    &:hover { \n      cursor: pointer;\n    }\n  }\n\n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n  }\n}\n\n\n.switch_checkbox-wrapper {\n\n  .switch {\n    // position: absolute;\n    width: tokens.$ifxSpace200;\n    height: tokens.$ifxSpace200;\n    background-color: tokens.$ifxColorEngineering500;\n    border-radius: 50%;\n    transition: transform 0.3s ease;\n\n    &.disabled {\n      background-color: #BFBBBB;\n      border-color: #BFBBBB;\n      cursor: default;\n    }\n  }\n\n  .switch.checked {\n    transform: translateX(20px);\n    background-color: tokens.$ifxColorBaseWhite;\n\n    &.disabled {\n      cursor: default;\n    }\n\n  }\n\n}\n\n.container:hover .toggle-switch {\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n}\n\n\n\n.container.checked {\n  background-color: tokens.$ifxColorOcean500;\n  border-color: tokens.$ifxColorOcean500;\n\n  &.disabled {\n    background-color: #BFBBBB;\n    border-color: #BFBBBB;\n    cursor: default;\n  }\n}"],"names":["Switch","this","internalValue","value","key","newValue","oldValue","disabled","ifxChange","emit","event","toggle","_this","h","class","concat","role","tabindex","name","onClick","onKeyDown","handleKeyDown","type","hidden","htmlFor","get"],"sourceRoot":""}