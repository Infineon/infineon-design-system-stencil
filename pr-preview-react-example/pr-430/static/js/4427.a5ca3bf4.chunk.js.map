{"version":3,"file":"static/js/4427.a5ca3bf4.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb.scss?tag=ifx-breadcrumb&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item.scss?tag=ifx-breadcrumb-item&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item-label.scss?tag=ifx-breadcrumb-item-label&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/breadcrumb/breadcrumb-item-label.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-item/dropdown-item.scss?tag=ifx-dropdown-item&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-item/dropdown-item.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.scss?tag=ifx-dropdown-menu&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.scss?tag=ifx-icon","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.tsx"],"sourcesContent":["import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true\n})\nexport class Breadcrumb {\n\n  render() {\n    return (\n      <nav aria-label=\"Page navigation breadcrumb\">\n        <ol class=\"breadcrumb\">\n          <slot />\n        </ol>\n      </nav>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n.breadcrumb {\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  flex-direction: row;\n  font-family: tokens.$ifxFontFamilyBody;\n  font-size: tokens.$ifxFontSizeS;\n  align-items: flex-start;\n  //gap: tokens.$ifxSpace200; //this is where the gap comes from\n\n}\n\n// .separator {\n//   color: tokens.$ifxColorEngineering300;\n//   margin: 0 16px;\n// }","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n.breadcrumb-parent {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0px;\n  gap: tokens.$ifxSpace150;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  & .breadcrumb-wrapper {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    padding: 0px;\n    gap: tokens.$ifxSpace100;\n    position: relative;\n\n    & .dropdown-menu {\n      display: none;\n      position: absolute;\n      top: 20px;\n\n      &.open {\n        display: block;\n      }\n    }\n\n    & a {\n      text-decoration: none;\n      color: tokens.$ifxColorBaseBlack;\n      font-style: normal;\n      font-weight: 400;\n      font-size: tokens.$ifxFontSizeS;\n      line-height: tokens.$ifxLineHeightS;\n      display: flex;\n      align-items: center;\n      color: tokens.$ifxColorBaseBlack;\n      flex-direction: column;\n      justify-content: center;\n      padding: 0px;\n      border-bottom: 1px solid #1D1D1D;\n    }\n  }\n\n  & .breadcrumb-divider {\n    width: 10px;\n    height: tokens.$ifxSize200;\n    color: tokens.$ifxColorEngineering300;\n    line-height: 13px;\n    font-size: tokens.$ifxFontSizeXl;\n\n    margin-right: 12px;\n  }\n}","import { Component, h, Element, State, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-breadcrumb-item',\n  styleUrl: 'breadcrumb-item.scss',\n  shadow: true,\n})\nexport class BreadcrumbItem {\n\n  @State() isLastItem: boolean = false;\n  @Element() el;\n  private emittedElement: HTMLElement;\n\n  @Listen('mousedown', { target: 'document' })\n  handleOutsideClick(event: MouseEvent) {\n    const path = event.composedPath();\n    if (!path.includes(this.el)) {\n      this.closeDropdownMenu();\n    }\n  }\n\n  getDropdownMenu() {\n    const dropdownMenu = this.el.shadowRoot.querySelector('.dropdown-menu');\n    return dropdownMenu\n  }\n\n  @Listen('breadcrumbMenuIconWrapper')\n  menuWrapperEventReEmitter(event: CustomEvent<HTMLElement>) { \n    this.emittedElement = event.detail;\n  }\n\n  getMenuIconWrapper(): HTMLElement | undefined {\n    return this.emittedElement;\n  }\n\n  handleClassList(el, type, className) {\n    el.classList[type](className)\n  }\n\n  closeDropdownMenu() {\n    const dropdownMenu = this.getDropdownMenu()\n    const menuWrapper = this.getMenuIconWrapper()\n    this.handleClassList(dropdownMenu, 'remove', 'open')\n    this.handleClassList(menuWrapper, 'remove', 'show')\n  }\n\n  toggleDropdownMenu() { \n    const dropdownMenu = this.getDropdownMenu()\n    const menuWrapper = this.getMenuIconWrapper()\n    this.handleClassList(dropdownMenu, 'toggle', 'open')\n    this.handleClassList(menuWrapper, 'toggle', 'show')\n  }\n\n  handleLastItem() { \n    const breadcrumbItems = this.el.closest('ifx-breadcrumb').querySelectorAll('ifx-breadcrumb-item')\n    if(this.el === breadcrumbItems[breadcrumbItems.length-1]) { \n      this.isLastItem = true;\n    } else this.isLastItem = false;\n  }\n\n  componentWillLoad() { \n    this.handleLastItem()\n  }\n\n  componentDidUpdate() {\n    this.handleLastItem()\n  }\n\n  componentDidLoad() { \n    const dropdownMenu = this.el.querySelector('ifx-dropdown-menu')\n  \n    if(!dropdownMenu) { \n      const iconMenuWrapper = this.getMenuIconWrapper();\n      this.handleClassList(iconMenuWrapper, 'toggle', 'hide')\n    } else { \n      dropdownMenu.isOpen = true;\n    }\n  }\n\n  render() {\n    return (\n      <li class='breadcrumb-parent' aria-current={`${this.isLastItem ? 'page' : \"\"}`} onClick={() => this.toggleDropdownMenu()}>\n       <li class=\"breadcrumb-wrapper\">\n          <slot name='label' />\n          <div class=\"dropdown-menu\">\n            <slot />\n          </div>\n        </li>\n        {!this.isLastItem && <span class=\"breadcrumb-divider\">/</span>}\n      </li>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n.breadcrumb-item-label-container {\n  display: flex;\n  align-items: center;\n  gap: tokens.$ifxSpace100;\n  text-decoration: none;\n  color: tokens.$ifxColorBaseBlack;\n\n  &.margin {\n    margin-left: 16px;\n  }\n\n  & ifx-icon:empty {\n    display: none;\n  }\n\n  & .label-icon-wrapper {\n    display: inline-flex;\n  }\n\n  & .menu-icon-wrapper {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: tokens.$ifxSize200;\n    height: tokens.$ifxSize200;\n\n    &.hide {\n      display: none;\n    }\n\n    & ifx-icon {\n      transition: .3s;\n    }\n\n    &.show {\n      & ifx-icon {\n        transition: .3s;\n        transform: rotate(180deg);\n      }\n    }\n  }\n}","import { Component, h, Prop, Element, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-breadcrumb-item-label',\n  styleUrl: 'breadcrumb-item-label.scss',\n  shadow: true,\n})\nexport class BreadcrumbItemLabel {\n  @Prop() icon: string;\n  @Prop() url: string;\n  @Prop() target: string = \"_self\"\n  @Element() el;\n  @Event() breadcrumbMenuIconWrapper: EventEmitter<CustomEvent>;\n\n  componentDidLoad() { \n    const container = this.el.shadowRoot.querySelector('.breadcrumb-item-label-container')\n    const menuWrapper = container.querySelector('.menu-icon-wrapper')\n    this.breadcrumbMenuIconWrapper.emit(menuWrapper)\n  }\n\n  render() {\n    return (\n      <a href={this.url} target={this.target} class=\"breadcrumb-item-label-container\">\n        <ifx-icon icon={this.icon}></ifx-icon>\n        <span class=\"label-wrapper\">\n          <slot />\n        </span>\n       <span class=\"menu-icon-wrapper\">\n        <ifx-icon icon=\"chevron-down-12\"></ifx-icon>\n       </span>\n      </a>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.dropdown-item {\n  text-decoration: none;\n  color: tokens.$ifxColorBaseBlack;\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  gap: tokens.$ifxSize100;\n\n  &.hide { \n    display: none;\n  }\n\n  & span { \n    color: tokens.$ifxColorBaseBlack;\n    font-family: Source Sans 3;\n    font-size: 16px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: 24px; /* 150% */\n  }\n\n  &.small { \n    & span { \n      font-size: 14px;\n    }\n  }\n  \n  &:hover { \n    cursor: pointer;\n    background-color: tokens.$ifxColorEngineering200;\n  }\n\n  &:active { \n    background-color: tokens.$ifxColorEngineering300;\n  }\n}\n\n.icon {\n  margin-right: 4px;\n}\n","// dropdown-item.tsx\nimport { Component, Prop, h, Listen, State } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-dropdown-item',\n  styleUrl: 'dropdown-item.scss',\n  shadow: true\n})\n\nexport class DropdownItem {\n  @Prop() icon: string;\n  @Prop() href: string = \"\"\n  @Prop() target: string = \"_self\"\n  @Prop() hide: boolean = false;\n  @State() size: string = 'l'\n  \n\n  @Listen('menuSize', { target: 'body' })\n  handleMenuSize(event: CustomEvent) { \n    this.size = event.detail;\n  }\n\n  render() {\n    let hrefAttr = this.href ? { href: this.href, target: this.target } : {};\n    return (\n      <a {...hrefAttr} class={`dropdown-item ${this.size === 's' ? 'small' : \"\"} ${this.hide ? 'hide' : \"\"}`}>\n        {this.icon && <ifx-icon class=\"icon\" icon={this.icon}></ifx-icon>}\n        <span>\n          <slot />\n        </span>\n      </a>\n    );\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n  z-index: 9999;\n}\n\n.dropdown-menu {\n  display: none;\n  visibility: hidden;\n  flex-direction: column;\n  width: 224px;\n  max-height: 289px;\n  min-width: 224px;\n  overflow-y: auto;\n  background: tokens.$ifxColorBaseWhite;\n  box-shadow: 0px 6px 9px 0px #1d1d1d1a;\n  border: 1px solid tokens.$ifxColorEngineering200;\n  padding: 8px 0px;\n\n  &.small { \n    max-height: 266px;\n    max-width: 186px;\n    overflow-y: auto;\n  }\n\n  &.hideTopPadding { \n    padding-top: 0px;\n  }\n}\n\n.dropdown-menu.show {\n  display: flex;\n  visibility: visible;\n}","// dropdown-menu.tsx\nimport { Component, h, Prop, Element, State, Event, EventEmitter, Listen } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-dropdown-menu',\n  styleUrl: 'dropdown-menu.scss',\n  shadow: true\n})\n\nexport class DropdownMenu {\n  @Prop() isOpen: boolean = false;\n  @Prop() size: string = 'l'\n  @State() hideTopPadding: boolean = false;\n  @Element() el;\n  @Event() menuSize: EventEmitter;\n  @State() filteredItems: HTMLIfxDropdownItemElement[] = [];\n\n  @Listen('ifxInput')\n  handleMenuFilter(event: CustomEvent) { \n    const searchValue = event.detail;\n    this.filterDropdownItems(searchValue)\n  }\n\n  filterDropdownItems(searchValue: string) {\n  const allItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item'));\n  let dropdownItem, txtValue;\n  let query = searchValue.toUpperCase()\n\n  for (let i = 0; i < allItems.length; i++) {\n      dropdownItem = allItems[i];\n      txtValue = dropdownItem.textContent || dropdownItem.innerText;\n\n      if(txtValue.toUpperCase().indexOf(query) > -1) { \n        dropdownItem.setAttribute('hide', false)\n      } else { \n        dropdownItem.setAttribute('hide', true)\n      }\n    }\n  }\n  \n  componentWillUpdate() { \n    this.menuSize.emit(this.size)\n  }\n\n  componentWillLoad() { \n    this.filteredItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item')) as HTMLIfxDropdownItemElement[];\n    const searchField = this.el.querySelector('ifx-search-field')\n    const dropdownHeader = this.el.querySelector('ifx-dropdown-header')\n\n    if(searchField || dropdownHeader) { \n      this.hideTopPadding = true;\n    } else this.hideTopPadding = false;\n  }\n\n  componentDidLoad() { \n    this.menuSize.emit(this.size)\n  }\n\n\n  render() {\n    return (\n      <div class={`dropdown-menu \n      ${this.isOpen ? 'show' : ''} \n      ${this.hideTopPadding ? 'hideTopPadding' : \"\"}\n      ${this.size === 's' ? 'small' : \"\"}`}>\n        <slot />\n      </div >\n    );\n  }\n}","ifx-icon {\n  display: inline-flex;\n  justify-content: center;\n\n  &:empty {\n    display: none;\n  }\n}","import { Component, Prop, h, Host, Event, EventEmitter } from '@stencil/core';\nimport { getIcon } from '@infineon/infineon-icons'\n\n\n@Component({\n  tag: 'ifx-icon',\n  styleUrl: './infineonIconStencil.scss'\n})\n\nexport class InfineonIconStencil {\n  @Prop({ mutable: true }) icon: string = \"\"\n  @Prop({ mutable: true }) ifxIcon: any;\n  @Event() consoleError: EventEmitter<boolean>;\n \n  convertStringToHtml(htmlString) { \n    const div = document.createElement('div')\n    div.innerHTML = htmlString\n    return div.firstChild\n  }\n\n  convertHtmlToObject(htmlElement) { \n    let pathToObject = Array\n      .from(htmlElement.attributes, ({ name, value }) => ({ name, value }))\n      .reduce((acc, current) => {\n        acc[current.name] = current.value\n        return acc\n      }, {})\n\n    return pathToObject\n  }\n\n  convertPathsToVnode(htmlPath) { \n    let svgPaths = []\n    const parentPath = this.convertHtmlToObject(htmlPath);\n    const parentPathToVnode = h(\"path\", parentPath);\n    svgPaths.push(parentPathToVnode)\n    if(htmlPath.firstChild) { \n      const paths = htmlPath.querySelectorAll('path');\n      const pathLength = htmlPath.querySelectorAll('path').length;\n      for(let i = 0; i < pathLength; i++) { \n        let pathToObject = this.convertHtmlToObject(paths[i])\n        let objToVnode = h(\"path\", pathToObject)\n        svgPaths.push(objToVnode)\n      }      \n    }\n    return svgPaths\n  }\n\n  getSVG(svgPath) {\n    return <svg class=\"inline-svg\" width={this.ifxIcon.width} height={this.ifxIcon.height} xmlns=\"http://www.w3.org/2000/svg\" fill={this.ifxIcon.fill} viewBox={this.ifxIcon.viewBox}>{...svgPath}</svg>\n  }\n\n  constructIcon() {\n    if(this.ifxIcon) {\n      const htmlPath = this.convertStringToHtml(this.ifxIcon.svgContent)\n      const svgPath = this.convertPathsToVnode(htmlPath)\n      const SVG = this.getSVG(svgPath)\n      this.consoleError.emit(false)\n      return SVG;\n    } else {\n      console.error('Icon not found!')\n      this.consoleError.emit(true)\n      return \"\"\n    }\n  }\n\n  componentWillLoad() {\n    const removeHyphen = (str) => str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr);\n    this.ifxIcon = getIcon(removeHyphen(this.icon));\n  }\n\n  render() {\n    return (\n      <Host>\n      {this.constructIcon()}\n      </Host>\n    );\n  }\n}"],"names":["Breadcrumb","h","class","BreadcrumbItem","event","composedPath","includes","this","el","closeDropdownMenu","key","value","shadowRoot","querySelector","emittedElement","detail","type","className","classList","dropdownMenu","getDropdownMenu","menuWrapper","getMenuIconWrapper","handleClassList","breadcrumbItems","closest","querySelectorAll","length","isLastItem","handleLastItem","isOpen","iconMenuWrapper","_this","concat","onClick","toggleDropdownMenu","name","get","BreadcrumbItemLabel","breadcrumbMenuIconWrapper","emit","href","url","target","icon","DropdownItem","size","hrefAttr","Object","assign","hide","DropdownMenu","searchValue","filterDropdownItems","dropdownItem","allItems","Array","from","query","toUpperCase","i","textContent","innerText","indexOf","setAttribute","menuSize","filteredItems","searchField","dropdownHeader","hideTopPadding","InfineonIconStencil","htmlString","div","document","createElement","innerHTML","firstChild","htmlElement","attributes","_ref","reduce","acc","current","htmlPath","svgPaths","parentPath","convertHtmlToObject","parentPathToVnode","push","paths","pathLength","pathToObject","objToVnode","svgPath","width","ifxIcon","height","xmlns","fill","viewBox","_toConsumableArray","convertStringToHtml","svgContent","convertPathsToVnode","SVG","getSVG","consoleError","console","error","getIcon","toLowerCase","replace","_m","chr","Host","constructIcon"],"sourceRoot":""}