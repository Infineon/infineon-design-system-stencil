{"version":3,"file":"static/js/7519.52b363e1.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/global/utils/focus-trap.ts","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.scss?tag=ifx-modal&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.tsx"],"sourcesContent":["/**\n * Copy/pasted from https://github.com/andreasbm/focus-trap\n */\n\n/**\n * Traverses the slots of the open shadowroots and returns all children matching the query.\n * We need to traverse each child-depth one at a time because if an element should be skipped\n * (for example because it is hidden) we need to skip all of it's children. If we use querySelectorAll(\"*\")\n * the information of whether the children is within a hidden parent is lost.\n * @param {ShadowRoot | HTMLElement} root\n * @param skipNode\n * @param isMatch\n * @param {number} maxDepth\n * @param {number} depth\n * @returns {HTMLElement[]}\n */\nexport function queryShadowRoot(\n  root: ShadowRoot | HTMLElement,\n  skipNode: ($elem: HTMLElement) => boolean,\n  isMatch: ($elem: HTMLElement) => boolean,\n  maxDepth: number = 20,\n  depth: number = 0\n): HTMLElement[] {\n  const matches: HTMLElement[] = [];\n\n  // If the depth is above the max depth, abort the searching here.\n  if (depth >= maxDepth) {\n    return matches;\n  }\n\n  // Traverses a slot element\n  const traverseSlot = ($slot: HTMLSlotElement) => {\n    // Only check nodes that are of the type Node.ELEMENT_NODE\n    // Read more here https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n    const assignedNodes = $slot\n      .assignedNodes()\n      .filter((node) => node.nodeType === 1);\n    if (assignedNodes.length > 0) {\n      const $slotParent = assignedNodes[0].parentElement!;\n      return queryShadowRoot(\n        $slotParent,\n        skipNode,\n        isMatch,\n        maxDepth,\n        depth + 1\n      );\n    }\n\n    return [];\n  };\n\n  // Go through each child and continue the traversing if necessary\n  // Even though the typing says that children can't be undefined, Edge 15 sometimes gives an undefined value.\n  // Therefore we fallback to an empty array if it is undefined.\n  const children = Array.from(root.children || []) as HTMLElement[];\n  for (const $child of children) {\n    // Check if the element and its descendants should be skipped\n    if (skipNode($child)) {\n      // console.log('-- SKIP', $child);\n      continue;\n    }\n\n    // console.log('$child', $child);\n\n    // If the element matches we always add it\n    if (isMatch($child)) {\n      matches.push($child);\n    }\n\n    if ($child.shadowRoot != null) {\n      // If the element has a shadow root we need to traverse it\n      matches.push(\n        ...queryShadowRoot(\n          $child.shadowRoot,\n          skipNode,\n          isMatch,\n          maxDepth,\n          depth + 1\n        )\n      );\n    } else if ($child.tagName === 'SLOT') {\n      // If the child is a slot we need to traverse each assigned node\n      matches.push(...traverseSlot($child as HTMLSlotElement));\n    } else {\n      // Traverse the children of the element\n      matches.push(\n        ...queryShadowRoot($child, skipNode, isMatch, maxDepth, depth + 1)\n      );\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns whether the element is hidden.\n * @param $elem\n */\nexport function isHidden($elem: HTMLElement): boolean {\n  return (\n    $elem.hasAttribute('hidden') ||\n    ($elem.hasAttribute('aria-hidden') &&\n      $elem.getAttribute('aria-hidden') !== 'false') ||\n    // A quick and dirty way to check whether the element is hidden.\n    // For a more fine-grained check we could use \"window.getComputedStyle\" but we don't because of bad performance.\n    // If the element has visibility set to \"hidden\" or \"collapse\", display set to \"none\" or opacity set to \"0\" through CSS\n    // we won't be able to catch it here. We accept it due to the huge performance benefits.\n    $elem.style.display === `none` ||\n    $elem.style.opacity === `0` ||\n    $elem.style.visibility === `hidden` ||\n    $elem.style.visibility === `collapse`\n  );\n\n  // If offsetParent is null we can assume that the element is hidden\n  // https://stackoverflow.com/questions/306305/what-would-make-offsetparent-null\n  // || $elem.offsetParent == null;\n}\n\n/**\n * Returns whether the element is disabled.\n * @param $elem\n */\nexport function isDisabled($elem: HTMLElement): boolean {\n  return (\n    $elem.hasAttribute('disabled') ||\n    ($elem.hasAttribute('aria-disabled') &&\n      $elem.getAttribute('aria-disabled') !== 'false')\n  );\n}\n\n/**\n * Determines whether an element is focusable.\n * Read more here: https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194\n * Or here: https://stackoverflow.com/questions/18261595/how-to-check-if-a-dom-element-is-focusable\n * @param $elem\n */\nexport function isFocusable($elem: HTMLElement): boolean {\n  // Discard elements that are removed from the tab order.\n  if (\n    $elem.getAttribute('tabindex') === '-1' ||\n    isHidden($elem) ||\n    isDisabled($elem)\n  ) {\n    return false;\n  }\n\n  return (\n    // At this point we know that the element can have focus (eg. won't be -1) if the tabindex attribute exists\n    $elem.hasAttribute('tabindex') ||\n    // Anchor tags or area tags with a href set\n    (($elem instanceof HTMLAnchorElement || $elem instanceof HTMLAreaElement) &&\n      $elem.hasAttribute('href')) ||\n    // Form elements which are not disabled\n    $elem instanceof HTMLButtonElement ||\n    $elem instanceof HTMLInputElement ||\n    $elem instanceof HTMLTextAreaElement ||\n    $elem instanceof HTMLSelectElement ||\n    // IFrames\n    $elem instanceof HTMLIFrameElement\n  );\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: block;\n}\n\n.modal-container {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n.modal-container.open {\n  display: block;\n}\n\n.modal-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: tokens.$ifxColorBaseBlack;\n  opacity: 0.5;\n  z-index: 0;\n}\n\n.modal-content-container {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  height: 218px;\n  background-color: #fff;\n  border-radius: tokens.$ifxBorderRadiusNone;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  box-sizing: border-box;\n  font-family: tokens.$ifxFontFamilyBody;\n\n}\n\n/* Add desktop size here */\n@media screen and (min-width: 768px) {\n  .modal-content-container {\n    width: 540px;\n    height: 220px;\n  }\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n\n.modal-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  background-color: tokens.$ifxColorOcean500;\n  height: 100%;\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  & ifx-icon {\n    color: tokens.$ifxColorBaseWhite;\n  }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px;\n  height: 76px;\n  box-sizing: border-box;\n  border-radius: 1px 1px 0px 0px;\n  border-bottom: 1px solid tokens.$ifxColorEngineering200;\n\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-weight: tokens.$ifxFontWeightSemibold;\n  font-size: tokens.$ifxFontSizeXl;\n  line-height: 28px;\n}\n\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding: 0;\n  cursor: pointer;\n}\n\n.modal-body {\n  padding: 16px 24px;\n  height: 56px;\n  box-sizing: border-box;\n  flex: 1;\n\n  & slot[name=content] {\n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n.modal-footer {\n  display: flex;\n  //justify-content: flex-end;\n  align-items: center;\n  padding-top: 16px;\n  padding-bottom: 32px;\n  padding-right: 24px;\n  gap: 1em;\n  height: 88px;\n  box-sizing: border-box;\n\n  margin-left: auto;\n}\n\n.modal-footer ::slotted(*) {\n  display: flex;\n  //justify-content: space-between;\n  gap: 24px;\n}\n\n\n.modal-border {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5em;\n  flex-grow: 1;\n\n  &.primary {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.secondary {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.success {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.warning {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.orange {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.ocean {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.grey {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.grey-200 {\n    background-color: tokens.$ifxColorEngineering200;\n  }\n\n  &.red {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.green {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.berry {\n    background-color: tokens.$ifxColorBerry500;\n  }\n}","import { Component, Prop, Element, State, Method, Event, Host, EventEmitter, h, Watch } from '@stencil/core';\nimport { queryShadowRoot, isHidden, isFocusable } from '../../global/utils/focus-trap';\n// import { animateTo, KEYFRAMES } from '../../global/utils/animate';\n\ntype CloseEventTrigger = 'CLOSE_BUTTON' | 'ESCAPE_KEY' | 'BACKDROP';\n\nexport interface BeforeCloseEventDetail {\n  trigger: CloseEventTrigger;\n}\n@Component({\n  tag: 'ifx-modal',\n  styleUrl: 'modal.scss',\n  shadow: true\n})\nexport class IfxModal {\n  @Prop({ reflect: true, mutable: true }) opened?: boolean = false;\n  @State() showModal: boolean = this.opened || false;\n\n  @Prop() caption: string = 'Modal Title';\n  @Prop() closeOnOverlayClick: boolean = true;\n\n  @Event() ifxModalOpen: EventEmitter;\n  @Event() ifxModalClose: EventEmitter;\n\n  @Prop() variant: 'default' | 'alert-brand' | 'alert-danger' = 'default';\n\n  @Prop() alertIcon: string = '';\n  @Prop() okButtonLabel: string = 'OK';\n  @Prop() cancelButtonLabel: string = 'Cancel';\n  @Element() hostElement: HTMLElement;\n\n  private focusableElements: HTMLElement[] = [];\n  private closeButton: HTMLButtonElement | HTMLIfxButtonElement;\n\n  componentDidLoad() {\n    // Query all focusable elements and store them in `focusableElements`.\n    // Needed for the \"focus trap\" functionality.\n    this.focusableElements = queryShadowRoot(\n      this.hostElement.shadowRoot,\n      (el) => isHidden(el) || el.matches('[data-focus-trap-edge]'),\n      isFocusable\n    );\n\n  }\n\n  getFirstFocusableElement(): HTMLElement | null {\n    return this.focusableElements[0];\n  }\n\n  getLastFocusableElement(): HTMLElement | null {\n    return this.focusableElements[this.focusableElements.length - 1];\n  }\n\n  handleTopFocus = () => {\n    this.attemptFocus(this.getLastFocusableElement());\n  };\n\n  handleBottomFocus = () => {\n    this.attemptFocus(this.getFirstFocusableElement());\n  };\n\n\n  attemptFocus(element: HTMLElement | null) {\n    if (element == null) {\n      setTimeout(() => { //wait until DOM is fully loaded\n        this.closeButton.focus();\n      }, 0);\n      return;\n    }\n\n    setTimeout(() => { //wait until DOM is fully loaded\n      element.focus();\n    }, 0);\n  }\n\n\n  @Method()\n  async open() {\n    this.showModal = true;\n\n    this.attemptFocus(this.getFirstFocusableElement());\n    this.ifxModalOpen.emit();\n\n    this.hostElement.addEventListener('keydown', this.handleKeypress);\n\n  }\n\n  @Method()\n  async close() {\n    this.showModal = false;\n    try {\n      this.ifxModalClose.emit();\n      this.hostElement.removeEventListener('keydown', this.handleKeypress);\n    } catch (err) {\n      this.ifxModalClose.emit();\n    }\n  }\n\n  handleKeypress = (event: KeyboardEvent) => {\n    if (!this.showModal) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      this.handleKey('ESCAPE_KEY');\n    }\n  };\n\n\n  handleKey(trigger: CloseEventTrigger) {\n    const triggers = [];\n    triggers.push(trigger);\n    const prevented = triggers.some((event) => event.defaultPrevented);\n    if (!prevented) {\n      this.opened = false;\n    }\n  }\n\n\n\n  @Watch('opened')\n  openedChanged(newValue) {\n    if (newValue === true) {\n      this.open();\n    } else {\n      this.close()\n    }\n  }\n\n\n  handleOverlayClick() {\n    if (this.closeOnOverlayClick) {\n      this.handleKey('BACKDROP')\n    }\n  }\n\n\n\n  render() {\n    const isAlertVariant = this.variant !== 'default';\n    return (\n      <Host>\n        <div\n          class={`modal-container ${this.showModal ? 'open' : ''}`}\n        >\n          <div\n            class=\"modal-overlay\"\n            onClick={() => this.handleOverlayClick()}\n          ></div>\n          <div\n            data-focus-trap-edge\n            onFocus={this.handleTopFocus}\n            tabindex=\"0\"\n          ></div>\n          <div class={`modal-content-container`}\n\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-label={this.caption}>\n            {isAlertVariant ? (\n              <div class={`modal-icon-container ${this.variant === 'alert-brand' ? '' : 'danger'}`}>\n                {this.alertIcon ? <ifx-icon icon={this.alertIcon} /> : null}\n              </div>\n            ) : null}\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h2>{this.caption}</h2>\n                <ifx-icon-button icon=\"cross-24\" variant=\"tertiary\" onClick={() => this.handleKey('CLOSE_BUTTON')}\n                ></ifx-icon-button>\n              </div>\n              <div class=\"modal-body\">\n                <slot name=\"content\" /*onSlotchange={() => console.log('slots children modified')}*/ />\n              </div>\n              <div class=\"modal-footer\">\n                <slot name=\"buttons\">\n                  <ifx-button aria-label={this.okButtonLabel}>{this.okButtonLabel}</ifx-button>\n                  <ifx-button ref={(el) => (this.closeButton = el)} variant='secondary' aria-label={this.cancelButtonLabel}>{this.cancelButtonLabel}</ifx-button>\n                </slot>\n              </div>\n            </div>\n          </div>\n          <div\n            data-focus-trap-edge\n            onFocus={this.handleBottomFocus}\n            tabindex=\"0\"\n          ></div>\n        </div>\n      </Host>\n\n    );\n  }\n}\n"],"names":["queryShadowRoot","root","skipNode","isMatch","maxDepth","arguments","length","undefined","depth","matches","traverseSlot","$slot","assignedNodes","filter","node","nodeType","parentElement","_i","_children","Array","from","children","$child","push","shadowRoot","apply","_toConsumableArray","tagName","isHidden","$elem","hasAttribute","getAttribute","style","display","opacity","visibility","isFocusable","isDisabled","HTMLAnchorElement","HTMLAreaElement","HTMLButtonElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","HTMLIFrameElement","IfxModal","focusableElements","handleTopFocus","_this","attemptFocus","getLastFocusableElement","handleBottomFocus","getFirstFocusableElement","handleKeypress","event","showModal","key","handleKey","this","opened","hostElement","el","value","element","_this2","setTimeout","focus","closeButton","_open","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","ifxModalOpen","emit","addEventListener","stop","_close","_callee2","_context2","ifxModalClose","removeEventListener","err","trigger","triggers","some","defaultPrevented","newValue","open","close","closeOnOverlayClick","_this3","isAlertVariant","variant","h","Host","class","concat","onClick","handleOverlayClick","onFocus","tabindex","role","caption","alertIcon","icon","name","okButtonLabel","ref","cancelButtonLabel","get"],"sourceRoot":""}