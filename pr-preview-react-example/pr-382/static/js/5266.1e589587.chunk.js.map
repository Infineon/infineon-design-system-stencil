{"version":3,"file":"static/js/5266.1e589587.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.scss?tag=ifx-tooltip&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  tag: 'ifx-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true\n})\nexport class Tooltip {\n\n  @Element() el: HTMLElement;\n  @State() tooltipVisible: boolean = false;\n  @Prop() header: string = '';\n  @Prop() text: string = '';\n  @Prop({ mutable: true }) position: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n  @Prop() variant: 'compact' | 'dismissable' | 'textPlusIcon' = 'compact';\n  @Prop() icon: string;\n\n  tooltipEl: HTMLElement;\n  referenceEl: HTMLElement;\n  popperInstance: any = null;\n\n  initializePopper() {\n    if (this.popperInstance) return;\n\n    this.referenceEl = this.el;\n    this.tooltipEl;\n    if (this.variant === 'compact') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-compact');\n    }\n    else if (this.variant === 'dismissable') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-dismissable');\n    }\n    else {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-text-icon');\n\n    }\n\n    const effectivePosition = this.position === 'auto' ? this.determineBestPosition() : this.position;\n\n    if (this.tooltipEl && this.referenceEl) {\n      this.popperInstance = createPopper(this.referenceEl, this.tooltipEl, {\n        placement: effectivePosition,\n        modifiers: [\n          {\n            name: 'offset',\n            options: {\n              offset: [0, 8]  // this offset should be adjusted to ensure the tooltip doesn't overlap its reference element\n            }\n          }\n        ]\n      });\n    }\n\n    // Add this line to set the 'data-placement' attribute on the tooltip\n    this.tooltipEl.setAttribute('data-placement', effectivePosition);\n  }\n\n  determineBestPosition() {\n    // This is a simplified version, you can enhance this based on available viewport space.\n    const rect = this.el.getBoundingClientRect();\n    if (rect.top > window.innerHeight / 2) {\n      return 'top';\n    } else {\n      return 'bottom';\n    }\n    // Add more conditions for left and right if needed.\n  }\n\n  @Watch('position')\n  positionChanged() {\n    this.popperInstance?.destroy();\n    this.popperInstance = null; // Force re-initialization on next mouse enter\n  }\n\n  onMouseEnter = () => {\n    this.initializePopper(); // Lazy initialization\n    this.tooltipVisible = true;\n    this.popperInstance?.update();\n  }\n\n  onMouseLeave = () => {\n    this.tooltipVisible = false;\n  }\n\n  disconnectedCallback() {\n    this.popperInstance?.destroy();\n  }\n\n  onClick = () => {\n    if (this.variant === 'dismissable') {\n      this.initializePopper();\n      this.tooltipVisible = !this.tooltipVisible;\n      this.popperInstance?.update();\n    }\n  }\n\n  render() {\n    const tooltipDismissable = {\n      'tooltip-dismissable': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipCompact = {\n      'tooltip-compact': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipTextPlusIcon = {\n      'tooltip-text-icon': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const eventHandlers = this.variant === 'compact' || this.variant === 'textPlusIcon' ? {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n    } : {\n      onClick: this.onClick,\n    };\n\n    return (\n      <div class=\"tooltip__container\" {...eventHandlers}>\n        <slot></slot>\n\n        {this.variant === 'dismissable' && <div class={tooltipDismissable}>\n          <ifx-icon icon=\"cross16\" class=\"close-button\"></ifx-icon>\n          <div class=\"tooltip-dismissable-content\">\n            <div class=\"tooltip-dismissable-header\">{this.header}</div>\n            <div class=\"tooltip-dismissable-body\">{this.text}</div>\n          </div>\n          <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n          </svg>\n        </div>\n        }\n        {this.variant === 'compact' &&\n          <div class={tooltipCompact}>\n            {this.text}\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div>\n        }\n        {this.variant === 'textPlusIcon' &&\n          <div class={tooltipTextPlusIcon}>\n            <slot name=\"icon\">\n              {this.icon ? <div class=\"text-plus-icon_icon\"><ifx-icon icon={this.icon}></ifx-icon></div> :\n                <svg class=\"text-plus-icon_icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M20.5 2.5h-16a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-16a2 2 0 0 0-2-2Z\" />\n                  <path stroke=\"#fff\" d=\"M19 17H6l2.5-4 2.097 2.516.405.486.379-.506 4.118-5.49.003-.002L19 17Z\" />\n                  <path fill=\"#fff\" d=\"M10 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\" />\n                </svg>\n              }\n            </slot>\n            <div class=\"tooltip-text-icon-content\">\n              <div class=\"tooltip-text-icon-header\">{this.header}</div>\n              <div class=\"tooltip-text-icon-body\">{this.text}</div>\n            </div>\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div >\n        }\n      </div>\n    );\n  }\n\n\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.tooltip__container {\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n\n}\n\n%tooltip-common {\n  background-color: tokens.$ifxColorBaseBlack;\n  border: 1px solid black;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s;\n  position: relative;\n  font-family: Source Sans 3;\n  font-size: 13px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  color: tokens.$ifxColorBaseWhite;\n\n  &.visible {\n    opacity: 1;\n  }\n}\n\n.tooltip-dismissable {\n  @extend %tooltip-common;\n  width: 310px;\n\n  .close-button {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    cursor: pointer;\n  }\n\n  .tooltip-dismissable-content {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 12px;\n    flex-grow: 1;\n  }\n\n  .tooltip-dismissable-header,\n  .tooltip-dismissable-body {\n    font-family: \"Source Sans 3\";\n    font-size: 13px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-dismissable-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-dismissable-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n.tooltip-compact {\n  @extend %tooltip-common;\n  padding: 4px 8px;\n  text-align: center;\n  flex-grow: 1;\n}\n\n\n.tooltip-text-icon {\n  @extend %tooltip-common;\n  width: 310px;\n  padding-left: 36px; // Added this line, adjust as per your icon width\n\n\n  .text-plus-icon_icon {\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    top: 12px;\n    left: 12px;\n    cursor: pointer;\n  }\n\n  .tooltip-text-icon-content {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 12px;\n    flex-grow: 1;\n  }\n\n  .tooltip-text-icon-header,\n  .tooltip-text-icon-body {\n    font-family: \"Source Sans 3\";\n    font-size: 13px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-text-icon-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-text-icon-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n\n.tooltip__container .tooltip-arrow-svg {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n}\n\n\n%tooltip-arrow-positions {\n\n  // For 'top' placement\n  &[data-placement=\"top\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    left: 50%;\n    transform: rotate(180deg) translateX(-50%);\n  }\n\n  // For 'top-start' placement\n  &[data-placement=\"top-start\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    right: 10px; // Adjust as needed\n    transform: rotate(180deg)\n  }\n\n  // For 'top-end' placement\n  &[data-placement=\"top-end\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    left: 10px; // Adjust as needed\n    transform: rotate(180deg);\n  }\n\n  // For 'bottom' placement\n  &[data-placement=\"bottom\"]>.tooltip-arrow-svg {\n    top: -8px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  // For 'bottom-start' placement\n  &[data-placement=\"bottom-start\"]>.tooltip-arrow-svg {\n    top: -8px;\n    left: 10px; // Adjust as needed\n  }\n\n  // For 'bottom-end' placement\n  &[data-placement=\"bottom-end\"]>.tooltip-arrow-svg {\n    top: -8px;\n    right: 10px; // Adjust as needed\n  }\n\n  // For 'left' placement\n  &[data-placement=\"left\"]>.tooltip-arrow-svg {\n    right: -4px;\n    top: 50%;\n    transform: rotate(90deg) translateY(-50%) translateX(-50%);\n  }\n\n  // For 'right' placement\n  &[data-placement=\"right\"]>.tooltip-arrow-svg {\n    left: -4px;\n    top: 50%;\n    transform: rotate(270deg) translateY(-50%) translateX(50%);\n  }\n}\n\n\n.tooltip-compact {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-dismissable {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-text-icon {\n  @extend %tooltip-arrow-positions;\n}"],"names":["Tooltip","popperInstance","onMouseEnter","_this","initializePopper","tooltipVisible","_a","update","onMouseLeave","onClick","variant","this","referenceEl","el","tooltipEl","shadowRoot","querySelector","effectivePosition","position","determineBestPosition","createPopper","placement","modifiers","name","options","offset","setAttribute","key","value","getBoundingClientRect","top","window","innerHeight","destroy","tooltipDismissable","tooltipCompact","tooltipTextPlusIcon","eventHandlers","h","Object","assign","class","icon","header","text","width","height","viewBox","fill","xmlns","id","d","stroke","get"],"sourceRoot":""}