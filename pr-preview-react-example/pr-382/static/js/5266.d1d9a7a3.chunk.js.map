{"version":3,"file":"static/js/5266.d1d9a7a3.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.scss?tag=ifx-tooltip&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  tag: 'ifx-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true\n})\nexport class Tooltip {\n\n  @Element() el: HTMLElement;\n  @State() tooltipVisible: boolean = false;\n  @Prop() header: string = '';\n  @Prop() text: string = '';\n  @Prop({ mutable: true }) position: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n  @Prop() variant: 'compact' | 'dismissable' = 'compact';\n\n  tooltipEl: HTMLElement;\n  referenceEl: HTMLElement;\n  popperInstance: any = null;\n\n  initializePopper() {\n    if (this.popperInstance) return;\n\n    this.referenceEl = this.el;\n    this.tooltipEl = this.variant === 'compact' ? this.el.shadowRoot.querySelector('.tooltip-compact') : this.el.shadowRoot.querySelector('.tooltip-dismissable');\n\n    const effectivePosition = this.position === 'auto' ? this.determineBestPosition() : this.position;\n\n    if (this.tooltipEl && this.referenceEl) {\n      this.popperInstance = createPopper(this.referenceEl, this.tooltipEl, {\n        placement: effectivePosition,\n        modifiers: [\n          {\n            name: 'offset',\n            options: {\n              offset: [0, 8]  // this offset should be adjusted to ensure the tooltip doesn't overlap its reference element\n            }\n          }\n        ]\n      });\n    }\n\n    // Add this line to set the 'data-placement' attribute on the tooltip\n    this.tooltipEl.setAttribute('data-placement', effectivePosition);\n  }\n\n  determineBestPosition() {\n    // This is a simplified version, you can enhance this based on available viewport space.\n    const rect = this.el.getBoundingClientRect();\n    if (rect.top > window.innerHeight / 2) {\n      return 'top';\n    } else {\n      return 'bottom';\n    }\n    // Add more conditions for left and right if needed.\n  }\n\n  @Watch('position')\n  positionChanged() {\n    this.popperInstance?.destroy();\n    this.popperInstance = null; // Force re-initialization on next mouse enter\n  }\n\n  onMouseEnter = () => {\n    this.initializePopper(); // Lazy initialization\n    this.tooltipVisible = true;\n    this.popperInstance?.update();\n  }\n\n  onMouseLeave = () => {\n    this.tooltipVisible = false;\n  }\n\n  disconnectedCallback() {\n    this.popperInstance?.destroy();\n  }\n\n  onClick = () => {\n    if (this.variant === 'dismissable') {\n      this.initializePopper();\n      this.tooltipVisible = !this.tooltipVisible;\n      this.popperInstance?.update();\n    }\n  }\n\n  render() {\n\n    const tooltipDismissable = {\n      'tooltip-dismissable': true,\n      'visible': this.tooltipVisible,\n      'dismissable': this.variant === 'dismissable'\n    };\n\n\n    const tooltipCompact = {\n      'tooltip-compact': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const eventHandlers = this.variant === 'compact' ? {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n    } : {\n      onClick: this.onClick,\n    };\n\n    return (\n      <div class=\"tooltip__container\" {...eventHandlers}>\n        <slot></slot>\n\n        {this.variant === 'dismissable' && <div class={tooltipDismissable}>\n          <ifx-icon icon=\"cross16\" class=\"close-button\"></ifx-icon>\n          <div class=\"tooltip-content\">\n            <div class=\"tooltip-header\">{this.header}</div>\n            <div class=\"tooltip-body\">{this.text}</div>\n          </div>\n          <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n          </svg>\n        </div>\n        }\n        {this.variant === 'compact' &&\n          <div class={tooltipCompact}>\n            {this.text}\n            <svg width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div>\n        }\n      </div>\n    );\n  }\n\n\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.tooltip__container {\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n\n}\n\n%tooltip-common {\n  background-color: tokens.$ifxColorBaseBlack;\n  border: 1px solid black;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s;\n  position: relative;\n  font-family: Source Sans 3;\n  font-size: 13px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  color: tokens.$ifxColorBaseWhite;\n\n  &.visible {\n    opacity: 1;\n  }\n}\n\n.tooltip-dismissable {\n  @extend %tooltip-common;\n  width: 310px;\n\n  &.dismissable {\n    padding: 12px;\n  }\n\n\n  .close-button {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    cursor: pointer;\n  }\n\n  .tooltip-content {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 12px;\n    flex-grow: 1;\n\n  }\n\n  .tooltip-header,\n  .tooltip-body {\n    font-family: \"Source Sans 3\";\n    font-size: 13px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n.tooltip-compact {\n  @extend %tooltip-common;\n  padding: 4px 8px;\n  text-align: center;\n  flex-grow: 1;\n\n}\n\n.tooltip__container svg {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n}\n\n\n%tooltip-arrow-positions {\n\n  // For 'top' placement\n  &[data-placement=\"top\"]>svg {\n    bottom: -8px;\n    left: 50%;\n    transform: rotate(180deg) translateX(-50%);\n  }\n\n  // For 'top-start' placement\n  &[data-placement=\"top-start\"]>svg {\n    bottom: -8px;\n    right: 10px; // Adjust as needed\n    transform: rotate(180deg)\n  }\n\n  // For 'top-end' placement\n  &[data-placement=\"top-end\"]>svg {\n    bottom: -8px;\n    left: 10px; // Adjust as needed\n    transform: rotate(180deg);\n  }\n\n  // For 'bottom' placement\n  &[data-placement=\"bottom\"]>svg {\n    top: -8px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  // For 'bottom-start' placement\n  &[data-placement=\"bottom-start\"]>svg {\n    top: -8px;\n    left: 10px; // Adjust as needed\n  }\n\n  // For 'bottom-end' placement\n  &[data-placement=\"bottom-end\"]>svg {\n    top: -8px;\n    right: 10px; // Adjust as needed\n  }\n\n  // For 'left' placement\n  &[data-placement=\"left\"]>svg {\n    right: -4px;\n    top: 50%;\n    transform: rotate(90deg) translateY(-50%) translateX(-50%);\n  }\n\n  // For 'right' placement\n  &[data-placement=\"right\"]>svg {\n    left: -4px;\n    top: 50%;\n    transform: rotate(270deg) translateY(-50%) translateX(50%);\n  }\n}\n\n\n.tooltip-compact {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-dismissable {\n  @extend %tooltip-arrow-positions;\n}"],"names":["Tooltip","popperInstance","onMouseEnter","_this","initializePopper","tooltipVisible","_a","update","onMouseLeave","onClick","variant","this","referenceEl","el","tooltipEl","shadowRoot","querySelector","effectivePosition","position","determineBestPosition","createPopper","placement","modifiers","name","options","offset","setAttribute","key","value","getBoundingClientRect","top","window","innerHeight","destroy","tooltipDismissable","tooltipCompact","eventHandlers","h","Object","assign","class","icon","header","text","width","height","viewBox","fill","xmlns","id","d","get"],"sourceRoot":""}