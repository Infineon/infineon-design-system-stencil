{"version":3,"file":"static/js/5266.30439871.chunk.js","mappings":"sNAQaA,EAAO,W,yDAclB,KAAAC,eAAsB,KAmEtB,KAAAC,aAAe,W,MACbC,EAAKC,mBACLD,EAAKE,gBAAiB,EACH,QAAnBC,EAAAH,EAAKF,sBAAc,IAAAK,GAAAA,EAAEC,Q,EAGvB,KAAAC,aAAe,WACbL,EAAKE,gBAAiB,C,EAOxB,KAAAI,QAAU,W,MAC2B,gBAA/BN,EAAKO,QAAQC,gBACfR,EAAKC,mBACLD,EAAKE,gBAAkBF,EAAKE,eACT,QAAnBC,EAAAH,EAAKF,sBAAc,IAAAK,GAAAA,EAAEC,S,uBAhGU,E,YACV,G,UACF,G,cACoG,O,sBACS,O,aAE1E,U,gEAO1D,WACE,IAAIK,KAAKX,eAAT,CAEAW,KAAKC,YAAcD,KAAKE,GAEW,YAA/BF,KAAKF,QAAQC,cACfC,KAAKG,UAAYH,KAAKE,GAAGE,WAAWC,cAAc,oBAEZ,gBAA/BL,KAAKF,QAAQC,cACpBC,KAAKG,UAAYH,KAAKE,GAAGE,WAAWC,cAAc,wBAGlDL,KAAKG,UAAYH,KAAKE,GAAGE,WAAWC,cAAc,qBAIpD,IAAMC,EAAsC,SAAlBN,KAAKO,SAAsBP,KAAKQ,wBAA0BR,KAAKO,SAGzFP,KAAKS,iBAAmBH,EAEpBN,KAAKG,WAAaH,KAAKC,cACzBD,KAAKX,gBAAiBqB,EAAAA,EAAAA,GAAaV,KAAKC,YAAaD,KAAKG,UAAW,CACnEQ,UAAWX,KAAKS,iBAChBG,UAAW,CACT,CACEC,KAAM,SACNC,QAAS,CACPC,OAAQ,CAAC,EAAG,KAGhB,CACEF,KAAM,QACNC,QAAS,CACPE,QAAS,2BAQnBhB,KAAKG,UAAUc,aAAa,iBAAkBX,EAzCf,C,GA0ChC,CAAAY,IAAA,wBAAAC,MAED,WAGE,OADanB,KAAKE,GAAGkB,wBACZC,IAAMC,OAAOC,YAAc,EAC3B,MAEA,Q,GAGV,CAAAL,IAAA,kBAAAC,MAGD,SAAgBK,G,MACdxB,KAAKS,iBAAmBe,EACL,QAAnB9B,EAAAM,KAAKX,sBAAc,IAAAK,GAAAA,EAAE+B,UACrBzB,KAAKX,eAAiB,I,GACvB,CAAA6B,IAAA,uBAAAC,MAcD,W,MACqB,QAAnBzB,EAAAM,KAAKX,sBAAc,IAAAK,GAAAA,EAAE+B,S,GACtB,CAAAP,IAAA,SAAAC,MAUD,WACE,IAAMO,EAAqB,CACzB,uBAAuB,EACvB,QAAW1B,KAAKP,gBAGZkC,EAAiB,CACrB,mBAAmB,EACnB,QAAW3B,KAAKP,gBAGZmC,EAAkB,CACtB,oBAAoB,EACpB,QAAW5B,KAAKP,gBAGZoC,EAA+C,YAA/B7B,KAAKF,QAAQC,eAA8D,aAA/BC,KAAKF,QAAQC,cAA+B,CAC5GT,aAAcU,KAAKV,aACnBM,aAAcI,KAAKJ,cACjB,CACFC,QAASG,KAAKH,SAGhB,OACEiC,EAAAA,EAAAA,GAAA,MAAAC,OAAAC,OAAA,CAAKC,MAAM,sBAAyBJ,IAClCC,EAAAA,EAAAA,GAAA,aAEgC,gBAA/B9B,KAAKF,QAAQC,gBAAmC+B,EAAAA,EAAAA,GAAA,OAAKG,MAAOP,IAC3DI,EAAAA,EAAAA,GAAA,YAAUI,KAAK,UAAUD,MAAM,kBAC/BH,EAAAA,EAAAA,GAAA,OAAKG,MAAM,+BACRjC,KAAKmC,SAAUL,EAAAA,EAAAA,GAAA,OAAKG,MAAM,8BAA8BjC,KAAKmC,SAC9DL,EAAAA,EAAAA,GAAA,OAAKG,MAAM,4BAA4BjC,KAAKoC,QAE9CN,EAAAA,EAAAA,GAAA,OAAKG,MAAM,oBAAoBI,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,+BACxFX,EAAAA,EAAAA,GAAA,QAAMY,GAAG,YAAYC,EAAE,qBAAqBH,KAAK,cAIrB,YAA/BxC,KAAKF,QAAQC,gBACZ+B,EAAAA,EAAAA,GAAA,OAAKG,MAAON,GACT3B,KAAKoC,MACNN,EAAAA,EAAAA,GAAA,OAAKG,MAAM,oBAAoBI,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,+BACxFX,EAAAA,EAAAA,GAAA,QAAMY,GAAG,YAAYC,EAAE,qBAAqBH,KAAK,cAIvB,aAA/BxC,KAAKF,QAAQC,gBACZ+B,EAAAA,EAAAA,GAAA,OAAKG,MAAOL,IACVE,EAAAA,EAAAA,GAAA,QAAMjB,KAAK,QACRb,KAAKkC,MAAOJ,EAAAA,EAAAA,GAAA,OAAKG,MAAM,kBAAgBH,EAAAA,EAAAA,GAAA,YAAUI,KAAMlC,KAAKkC,SAC3DJ,EAAAA,EAAAA,GAAA,OAAKG,MAAM,gBAAgBQ,MAAM,6BAA6BJ,MAAM,KAAKC,OAAO,KAAKE,KAAK,OAAOD,QAAQ,cACvGT,EAAAA,EAAAA,GAAA,QAAMc,OAAO,OAAM,iBAAgB,QAAO,kBAAiB,QAAQD,EAAE,sFACrEb,EAAAA,EAAAA,GAAA,QAAMc,OAAO,OAAOD,EAAE,4EACtBb,EAAAA,EAAAA,GAAA,QAAMU,KAAK,OAAOG,EAAE,oDAI1Bb,EAAAA,EAAAA,GAAA,OAAKG,MAAM,4BACRjC,KAAKmC,SAAUL,EAAAA,EAAAA,GAAA,OAAKG,MAAM,2BAA2BjC,KAAKmC,SAC3DL,EAAAA,EAAAA,GAAA,OAAKG,MAAM,yBAAyBjC,KAAKoC,QAE3CN,EAAAA,EAAAA,GAAA,OAAKG,MAAM,oBAAoBI,MAAM,KAAKC,OAAO,IAAIC,QAAQ,WAAWC,KAAK,OAAOC,MAAM,+BACxFX,EAAAA,EAAAA,GAAA,QAAMY,GAAG,YAAYC,EAAE,qBAAqBH,KAAK,c,GAM5D,CAAAtB,IAAA,KAAA2B,IAAA,W,kGA3KiB,G,QCRD,6nH","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.scss?tag=ifx-tooltip&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  tag: 'ifx-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true\n})\nexport class Tooltip {\n\n  @Element() el: HTMLElement;\n  @State() tooltipVisible: boolean = false;\n  @Prop() header: string = '';\n  @Prop() text: string = '';\n  @Prop() position: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n  @State() internalPosition: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n\n  @Prop() variant: 'compact' | 'dismissible' | 'extended' = 'compact';\n  @Prop() icon: string;\n\n  tooltipEl: HTMLElement;\n  referenceEl: HTMLElement;\n  popperInstance: any = null;\n\n  initializePopper() {\n    if (this.popperInstance) return;\n\n    this.referenceEl = this.el;\n    this.tooltipEl;\n    if (this.variant.toLowerCase() === 'compact') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-compact');\n    }\n    else if (this.variant.toLowerCase() === 'dismissible') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-dismissible');\n    }\n    else {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-extended');\n\n    }\n\n    const effectivePosition = this.position === 'auto' ? this.determineBestPosition() : this.position;\n\n    // Set the internalPosition\n    this.internalPosition = effectivePosition;\n\n    if (this.tooltipEl && this.referenceEl) {\n      this.popperInstance = createPopper(this.referenceEl, this.tooltipEl, {\n        placement: this.internalPosition,\n        modifiers: [\n          {\n            name: 'offset',\n            options: {\n              offset: [0, 8]  // this offset should be adjusted to ensure the tooltip doesn't overlap its reference element\n            }\n          },\n          {\n            name: 'arrow',\n            options: {\n              element: '.tooltip-arrow-svg'\n            }\n          }\n        ]\n      });\n    }\n\n    // Add this line to set the 'data-placement' attribute on the tooltip\n    this.tooltipEl.setAttribute('data-placement', effectivePosition);\n  }\n\n  determineBestPosition() {\n    // This is a simplified version, you can enhance this based on available viewport space.\n    const rect = this.el.getBoundingClientRect();\n    if (rect.top > window.innerHeight / 2) {\n      return 'top';\n    } else {\n      return 'bottom';\n    }\n    // Add more conditions for left and right if needed.\n  }\n\n  @Watch('position')\n  positionChanged(newVal: any) {\n    this.internalPosition = newVal;\n    this.popperInstance?.destroy();\n    this.popperInstance = null; // Force re-initialization on next mouse enter\n  }\n\n\n\n  onMouseEnter = () => {\n    this.initializePopper(); // Lazy initialization\n    this.tooltipVisible = true;\n    this.popperInstance?.update();\n  }\n\n  onMouseLeave = () => {\n    this.tooltipVisible = false;\n  }\n\n  disconnectedCallback() {\n    this.popperInstance?.destroy();\n  }\n\n  onClick = () => {\n    if (this.variant.toLowerCase() === 'dismissible') {\n      this.initializePopper();\n      this.tooltipVisible = !this.tooltipVisible;\n      this.popperInstance?.update();\n    }\n  }\n\n  render() {\n    const tooltipDismissible = {\n      'tooltip-dismissible': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipCompact = {\n      'tooltip-compact': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipExtended = {\n      'tooltip-extended': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const eventHandlers = this.variant.toLowerCase() === 'compact' || this.variant.toLowerCase() === 'extended' ? {\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n    } : {\n      onClick: this.onClick,\n    };\n\n    return (\n      <div class=\"tooltip__container\" {...eventHandlers}>\n        <slot></slot>\n\n        {this.variant.toLowerCase() === 'dismissible' && <div class={tooltipDismissible}>\n          <ifx-icon icon=\"cross16\" class=\"close-button\"></ifx-icon>\n          <div class=\"tooltip-dismissible-content\">\n            {this.header && <div class=\"tooltip-dismissible-header\">{this.header}</div>}\n            <div class=\"tooltip-dismissible-body\">{this.text}</div>\n          </div>\n          <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n          </svg>\n        </div>\n        }\n        {this.variant.toLowerCase() === 'compact' &&\n          <div class={tooltipCompact}>\n            {this.text}\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div>\n        }\n        {this.variant.toLowerCase() === 'extended' &&\n          <div class={tooltipExtended}>\n            <slot name=\"icon\">\n              {this.icon ? <div class=\"extended_icon\"><ifx-icon icon={this.icon}></ifx-icon></div> :\n                <svg class=\"extended_icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M20.5 2.5h-16a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-16a2 2 0 0 0-2-2Z\" />\n                  <path stroke=\"#fff\" d=\"M19 17H6l2.5-4 2.097 2.516.405.486.379-.506 4.118-5.49.003-.002L19 17Z\" />\n                  <path fill=\"#fff\" d=\"M10 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\" />\n                </svg>\n              }\n            </slot>\n            <div class=\"tooltip-extended-content\">\n              {this.header && <div class=\"tooltip-extended-header\">{this.header}</div>}\n              <div class=\"tooltip-extended-body\">{this.text}</div>\n            </div>\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div >\n        }\n      </div>\n    );\n  }\n\n\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.tooltip__container {\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n\n}\n\n%tooltip-common {\n  background-color: tokens.$ifxColorBaseBlack;\n  border: 1px solid black;\n  z-index: 1;\n  opacity: 0;\n  transition: opacity 0.3s;\n  position: relative;\n  font-family: Source Sans 3;\n  font-size: 13px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  color: tokens.$ifxColorBaseWhite;\n\n  &.visible {\n    opacity: 1;\n  }\n}\n\n.tooltip-dismissible {\n  @extend %tooltip-common;\n  width: 310px;\n\n  .close-button {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    cursor: pointer;\n  }\n\n  .tooltip-dismissible-content {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 12px;\n    flex-grow: 1;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n\n  }\n\n  .tooltip-dismissible-header,\n  .tooltip-dismissible-body {\n    font-family: \"Source Sans 3\";\n    font-size: 13px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-dismissible-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-dismissible-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n.tooltip-compact {\n  @extend %tooltip-common;\n  padding: 4px 8px;\n  text-align: center;\n  flex-grow: 1;\n}\n\n\n.tooltip-extended {\n  @extend %tooltip-common;\n  width: 310px;\n  padding-left: 36px; // Added this line, adjust as per your icon width\n\n\n  .extended_icon {\n    position: absolute;\n    width: 24px;\n    height: 24px;\n    top: 12px;\n    left: 12px;\n    cursor: pointer;\n  }\n\n\n\n  .tooltip-extended-content {\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 12px;\n    flex-grow: 1;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n\n  .tooltip-extended-header,\n  .tooltip-extended-body {\n    font-family: \"Source Sans 3\";\n    font-size: 13px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-extended-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-extended-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n\n.tooltip__container .tooltip-arrow-svg {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n}\n\n\n%tooltip-arrow-positions {\n\n  // For 'top' placement\n  &[data-placement=\"top\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    left: 50%;\n    transform: rotate(180deg) translateX(-50%);\n  }\n\n  // For 'top-start' placement\n  &[data-placement=\"top-start\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    left: 10px; // Adjust as needed\n    transform: rotate(180deg)\n  }\n\n  // For 'top-end' placement\n  &[data-placement=\"top-end\"]>.tooltip-arrow-svg {\n    bottom: -8px;\n    right: 10px; // Adjust as needed\n    transform: rotate(180deg);\n  }\n\n  // For 'bottom' placement\n  &[data-placement=\"bottom\"]>.tooltip-arrow-svg {\n    top: -8px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  // For 'bottom-start' placement\n  &[data-placement=\"bottom-start\"]>.tooltip-arrow-svg {\n    top: -8px;\n    left: 10px; // Adjust as needed\n  }\n\n  // For 'bottom-end' placement\n  &[data-placement=\"bottom-end\"]>.tooltip-arrow-svg {\n    top: -8px;\n    right: 10px; // Adjust as needed\n  }\n\n  // For 'left' placement\n  &[data-placement=\"left\"]>.tooltip-arrow-svg {\n    right: -4px;\n    top: 50%;\n    transform: rotate(90deg) translateY(-50%) translateX(-50%);\n  }\n\n  // For 'right' placement\n  &[data-placement=\"right\"]>.tooltip-arrow-svg {\n    left: -4px;\n    top: 50%;\n    transform: rotate(270deg) translateY(-50%) translateX(50%);\n  }\n}\n\n\n.tooltip-compact {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-dismissible {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-extended {\n  @extend %tooltip-arrow-positions;\n}"],"names":["Tooltip","popperInstance","onMouseEnter","_this","initializePopper","tooltipVisible","_a","update","onMouseLeave","onClick","variant","toLowerCase","this","referenceEl","el","tooltipEl","shadowRoot","querySelector","effectivePosition","position","determineBestPosition","internalPosition","createPopper","placement","modifiers","name","options","offset","element","setAttribute","key","value","getBoundingClientRect","top","window","innerHeight","newVal","destroy","tooltipDismissible","tooltipCompact","tooltipExtended","eventHandlers","h","Object","assign","class","icon","header","text","width","height","viewBox","fill","xmlns","id","d","stroke","get"],"sourceRoot":""}