{"version":3,"file":"static/js/2750.df2db9e1.chunk.js","mappings":"mNASaA,EAAY,W,6IACG,E,UACH,I,qBACY,E,mBAGoB,E,gDAIvD,SAAiBC,GACf,IAAMC,EAAcD,EAAME,OAC1BC,KAAKC,oBAAoBH,E,GAC1B,CAAAI,IAAA,kCAAAC,MAGD,SAAgCC,GAC9B,IAAMC,EAAcD,EAAEL,OACtBC,KAAKM,SAASC,KAAKF,E,GACpB,CAAAH,IAAA,sBAAAC,MAED,SAAoBL,GAKpB,IAJA,IACIU,EADEC,EAAWC,MAAMC,KAAKX,KAAKY,GAAGC,iBAAiB,sBAEjDC,EAAQhB,EAAYiB,cAEfC,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,MACjCR,EAAeC,EAASO,IACAE,aAAeV,EAAaW,WAExCJ,cAAcK,QAAQN,IAAU,EAC1CN,EAAaa,aAAa,QAAQ,GAElCb,EAAaa,aAAa,QAAQ,E,GAGvC,CAAAnB,IAAA,sBAAAC,MAED,WACEH,KAAKsB,SAASf,KAAKP,KAAKuB,K,GACzB,CAAArB,IAAA,oBAAAC,MAED,WACEH,KAAKwB,cAAgBd,MAAMC,KAAKX,KAAKY,GAAGC,iBAAiB,sBACzD,IAAMY,EAAczB,KAAKY,GAAGc,cAAc,oBACpCC,EAAiB3B,KAAKY,GAAGc,cAAc,uBAG3C1B,KAAK4B,kBADJH,IAAeE,E,GAGnB,CAAAzB,IAAA,mBAAAC,MAED,WACEH,KAAKsB,SAASf,KAAKP,KAAKuB,K,GACzB,CAAArB,IAAA,SAAAC,MAGD,WACE,OACE0B,EAAAA,EAAAA,GAAA,OAAKC,MAAK,yBAAAC,OACR/B,KAAKgC,OAAS,OAAS,GAAE,aAAAD,OACzB/B,KAAK4B,eAAiB,iBAAmB,GAAE,YAAAG,OAC7B,MAAd/B,KAAKuB,KAAe,QAAU,MAC9BM,EAAAA,EAAAA,GAAA,a,GAGL,CAAA3B,IAAA,KAAA+B,IAAA,W,0BAlEsB,G,QCTD,ob","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/dropdown/dropdown-menu/dropdown-menu.scss?tag=ifx-dropdown-menu&encapsulation=shadow"],"sourcesContent":["// dropdown-menu.tsx\nimport { Component, h, Prop, Element, State, Event, EventEmitter, Listen } from \"@stencil/core\";\n\n@Component({\n  tag: 'ifx-dropdown-menu',\n  styleUrl: 'dropdown-menu.scss',\n  shadow: true\n})\n\nexport class DropdownMenu {\n  @Prop() isOpen: boolean = false;\n  @Prop() size: string = 'l'\n  @State() hideTopPadding: boolean = false;\n  @Element() el;\n  @Event() menuSize: EventEmitter;\n  @State() filteredItems: HTMLIfxDropdownItemElement[] = [];\n  @Event() ifxValue: EventEmitter;\n\n  @Listen('ifxInput')\n  handleMenuFilter(event: CustomEvent) { \n    const searchValue = event.detail;\n    this.filterDropdownItems(searchValue)\n  }\n\n  @Listen('ifxDropdownItemValue')\n  handleDropdownItemValueEmission(e) { \n    const optionValue = e.detail;\n    this.ifxValue.emit(optionValue)\n  }\n\n  filterDropdownItems(searchValue: string) {\n  const allItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item'));\n  let dropdownItem, txtValue;\n  let query = searchValue.toUpperCase()\n\n  for (let i = 0; i < allItems.length; i++) {\n      dropdownItem = allItems[i];\n      txtValue = dropdownItem.textContent || dropdownItem.innerText;\n\n      if(txtValue.toUpperCase().indexOf(query) > -1) { \n        dropdownItem.setAttribute('hide', false)\n      } else { \n        dropdownItem.setAttribute('hide', true)\n      }\n    }\n  }\n  \n  componentWillUpdate() { \n    this.menuSize.emit(this.size)\n  }\n\n  componentWillLoad() { \n    this.filteredItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item')) as HTMLIfxDropdownItemElement[];\n    const searchField = this.el.querySelector('ifx-search-field')\n    const dropdownHeader = this.el.querySelector('ifx-dropdown-header')\n\n    if(searchField || dropdownHeader) { \n      this.hideTopPadding = true;\n    } else this.hideTopPadding = false;\n  }\n\n  componentDidLoad() { \n    this.menuSize.emit(this.size)\n  }\n\n\n  render() {\n    return (\n      <div class={`dropdown-menu \n      ${this.isOpen ? 'show' : ''} \n      ${this.hideTopPadding ? 'hideTopPadding' : \"\"}\n      ${this.size === 's' ? 'small' : \"\"}`}>\n        <slot />\n      </div >\n    );\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n:host {\n  z-index: 9999;\n}\n\n.dropdown-menu {\n  display: none;\n  visibility: hidden;\n  flex-direction: column;\n  width: 224px;\n  max-height: 289px;\n  min-width: 224px;\n  overflow-y: auto;\n  background: tokens.$ifxColorBaseWhite;\n  box-shadow: 0px 6px 9px 0px #1d1d1d1a;\n  border: 1px solid tokens.$ifxColorEngineering200;\n  padding: 8px 0px;\n\n  &.small { \n    max-height: 266px;\n    max-width: 186px;\n    overflow-y: auto;\n  }\n\n  &.hideTopPadding { \n    padding-top: 0px;\n  }\n}\n\n.dropdown-menu.show {\n  display: flex;\n  visibility: visible;\n}"],"names":["DropdownMenu","event","searchValue","detail","this","filterDropdownItems","key","value","e","optionValue","ifxValue","emit","dropdownItem","allItems","Array","from","el","querySelectorAll","query","toUpperCase","i","length","textContent","innerText","indexOf","setAttribute","menuSize","size","filteredItems","searchField","querySelector","dropdownHeader","hideTopPadding","h","class","concat","isOpen","get"],"sourceRoot":""}