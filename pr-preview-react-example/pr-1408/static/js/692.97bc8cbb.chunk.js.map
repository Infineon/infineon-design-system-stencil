{"version":3,"file":"static/js/692.97bc8cbb.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.scss?tag=ifx-icon","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/icon/infineonIconStencil.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/link/link.scss?tag=ifx-link&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/link/link.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/step/step.scss?tag=ifx-step&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/step/step.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/stepper.scss?tag=ifx-stepper&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/stepper/stepper.tsx","../node_modules/@infineon/infineon-design-system-stencil/node_modules/classnames/index.js"],"sourcesContent":["ifx-icon {\n  display: inline-flex;\n  justify-content: center;\n\n  &:empty {\n    display: none;\n  }\n}","import { Component, Prop, h, Host, Event, EventEmitter } from '@stencil/core';\nimport { getIcon } from '@infineon/infineon-icons'\n\n\n@Component({\n  tag: 'ifx-icon',\n  styleUrl: './infineonIconStencil.scss'\n})\n\nexport class InfineonIconStencil {\n  @Prop({ mutable: true }) icon: string = \"\"\n  @Prop({ mutable: true }) ifxIcon: any;\n  @Event() consoleError: EventEmitter<boolean>;\n \n  convertStringToHtml(htmlString) { \n    const div = document.createElement('div')\n    div.innerHTML = htmlString\n    return div.firstChild\n  }\n\n  convertHtmlToObject(htmlElement) { \n    let pathToObject = Array\n      .from(htmlElement.attributes, ({ name, value }) => ({ name, value }))\n      .reduce((acc, current) => {\n        acc[current.name] = current.value\n        return acc\n      }, {})\n\n    return pathToObject\n  }\n\n  convertPathsToVnode(htmlPath) { \n    let svgPaths = []\n    const parentPath = this.convertHtmlToObject(htmlPath);\n    const parentPathToVnode = h(\"path\", parentPath);\n    svgPaths.push(parentPathToVnode)\n    if(htmlPath.firstChild) { \n      const paths = htmlPath.querySelectorAll('path');\n      const pathLength = htmlPath.querySelectorAll('path').length;\n      for(let i = 0; i < pathLength; i++) { \n        let pathToObject = this.convertHtmlToObject(paths[i])\n        let objToVnode = h(\"path\", pathToObject)\n        svgPaths.push(objToVnode)\n      }      \n    }\n    return svgPaths\n  }\n\n  getSVG(svgPath) {\n    return <svg class=\"inline-svg\" width={this.ifxIcon.width} height={this.ifxIcon.height} xmlns=\"http://www.w3.org/2000/svg\" fill={this.ifxIcon.fill} viewBox={this.ifxIcon.viewBox}>{...svgPath}</svg>\n  }\n\n  constructIcon() {\n    if(this.ifxIcon) {\n      const htmlPath = this.convertStringToHtml(this.ifxIcon.svgContent)\n      const svgPath = this.convertPathsToVnode(htmlPath)\n      const SVG = this.getSVG(svgPath)\n      this.consoleError.emit(false)\n      return SVG;\n    } else if(this.icon !== \"\") {\n      console.error('Icon not found!')\n      this.consoleError.emit(true)\n      return;\n    }  else { \n      return;\n    }\n  }\n\n  componentWillLoad() {\n    const removeHyphen = (str) => str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (_m, chr) => chr);\n    this.ifxIcon = getIcon(removeHyphen(this.icon));\n  }\n\n  render() {\n    return (\n      <Host>\n      {this.constructIcon()}\n      </Host>\n    );\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: inline-flex;\n}\n\n.link {\n  display: inline-flex;\n  align-items: center;\n  font-weight: 400;\n  font-size: tokens.$ifxFontSizeM;\n  text-decoration: none;\n  color: tokens.$ifxColorOcean500;\n  gap: tokens.$ifxSpace100;\n  line-height: 1.6;\n  font-family: var(--ifx-font-family);\n\n  &:focus {\n    outline-width: 2px;\n    outline-style: solid;\n    outline-color: #0A8276;\n    outline-offset: 4px;\n    border-radius: 3px;\n  }\n\n  &.bold {\n    font-weight: tokens.$ifxFontWeightSemibold;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n    &:active {\n      color: #08665C;\n      font-style: normal;\n      font-weight: 600;\n      text-decoration: underline;\n    }\n\n  }\n\n  &.underlined {\n    text-decoration: underline;\n    text-decoration-color: tokens.$ifxColorOcean500;\n    color: #1D1D1D;\n    text-underline-offset: 8px;\n    \n    &:hover {\n      color: tokens.$ifxColorOcean500;;\n    }\n    \n    &:active {\n      color: #0A8276;\n    }\n\n    &:disabled,\n    &.disabled {\n      text-decoration-color: tokens.$ifxColorEngineering300;\n    }\n  }\n\n  &.title {\n    text-decoration: none;\n    font-weight: tokens.$ifxFontWeightSemibold;\n    color: #1D1D1D;\n\n    &:hover {\n      color: tokens.$ifxColorOcean500;\n    }\n\n    &:active {\n      color: #08665C;\n    }\n  }\n\n  &.menu {\n    font-weight: 400;\n    font-style: normal;\n    line-height: 26px;\n    color: #1D1D1D;\n\n    &:hover {\n      color: tokens.$ifxColorOcean500;\n    }\n\n    &:active {\n      color: #08665C;\n    }\n  }\n\n\n\n  &.small {\n    font-size: tokens.$ifxFontSizeS;\n  }\n\n  &.medium {\n    font-size: tokens.$ifxFontSizeM;\n  }\n\n  &.large {\n    font-size: tokens.$ifxFontSizeL;\n  }\n\n  &.extraLarge {\n    font-size: tokens.$ifxFontSizeXl;\n  }\n\n  // &.bold {\n  //   font-weight: tokens.$ifxFontWeightSemibold;\n  // }\n\n  // &.primary {\n  //   color: tokens.$ifxColorOcean500;\n  // }\n\n  // &.secondary {\n  //   color: tokens.$ifxColorBerry500;\n  // }\n\n  // &.warning {\n  //   color: tokens.$ifxColorOrange500;\n  // }\n\n  // &.danger {\n  //   color: tokens.$ifxColorRed500;\n  // }\n\n  // &.success {\n  //   color: tokens.$ifxColorGreen500;\n  // }\n\n  &.underline {\n    text-decoration: underline;\n  }\n\n  &:disabled,\n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n    cursor: default;\n    pointer-events:  none;\n  }\n\n}","import { Component, Prop, h, State } from \"@stencil/core\";\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'ifx-link',\n  styleUrl: 'link.scss',\n  shadow: true\n})\n\nexport class Link {\n  @Prop() href: string = undefined;\n  @Prop() target: string = '_self';\n  @Prop() variant: string = 'bold';\n  @Prop() size: string;\n  @Prop() disabled: boolean = false;\n  @State() internalHref: string ='';\n  @State() internalTarget: string = '';\n  @State() internalVariant: string = '';\n\n  setInternalStates() {\n    if(this.href){\n      this.internalHref = this.href.trim();\n    }else{\n      this.internalHref = undefined;\n    }\n    this.internalTarget = this.target.trim();\n    this.internalVariant = this.variant.trim().toLowerCase();\n  }\n\n  componentWillRender(){\n    this.setInternalStates();\n  }\n\n  render() {\n    return (\n      <a aria-label='a navigation link button' href={this.internalHref} target={this.internalTarget} class={this.linkClassNames()}>\n        <slot></slot>\n      </a>\n    )\n  }\n\n  getSizeClass() {\n    const small = this.size === 's' ? 'small' : null;\n    const medium = this.size === 'm' ? 'medium' : null;\n    const large = this.size === 'l' ? 'large' : null;\n    const extraLarge = this.size === 'xl' ? 'extraLarge' : null;\n\n    if (small) {\n      return small;\n    } else if (medium) {\n      return medium;\n    } else if (large) {\n      return large;\n    } else if (extraLarge && this.internalVariant === 'underlined') {\n      return 'large';\n    } else if (extraLarge && this.internalVariant !== 'underlined') {\n      return extraLarge;\n    } else return \"\";\n  }\n\n  getVariantClass() {\n    const bold = this.internalVariant === 'bold' ? 'bold' : null;\n    const title = this.internalVariant === 'title' ? 'title' : null;\n    const underlined = this.internalVariant === 'underlined' ? 'underlined' : null;\n    const menu = this.internalVariant === 'menu' ? 'menu' : null;\n\n    if (bold) {\n      return bold\n    } else if (title) {\n      return title;\n    } else if (underlined) {\n      return underlined;\n    } else if (menu) {\n      return menu;\n    } else return bold;\n  }\n\n  linkClassNames() {\n    return classNames(\n      'link',\n      'primary',\n      this.getVariantClass(),\n      this.getSizeClass(),\n      this.disabled ? 'disabled' : '',\n    );\n  }\n}\n\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../../global/font.scss\";\n\n.step-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: tokens.$ifxSize100;\n    max-width: tokens.$ifxSize2000;\n    font: tokens.$ifxBodyBody03;\n    \n    &.compact{\n        gap: 0;\n        max-width: 100%;\n        .step-label{\n            max-width: 100%;\n        }\n        \n        &.indicator-left {\n            align-items: flex-end;\n            text-align: right;\n        }\n        \n        &.indicator-right {\n            align-items: flex-start;\n        }\n        \n        .step-label{\n            cursor: auto;\n        }\n    }\n\n    .step-label{\n        max-width: tokens.$ifxSize1800;\n        color: tokens.$ifxColorEngineering400; \n        word-wrap: break-word;\n        &.curr-label{\n            font: tokens.$ifxHeadingHeadingCompact04; \n        }\n        &.next-label{\n            font: tokens.$ifxBodyBody05;\n        }\n    }\n    \n    &.first-step{\n        .step-connector-l{\n            height: 0px;\n        }\n    }\n    \n    &.last-step{\n        .step-connector-r{\n            height: 0px;\n        }\n    }\n    \n    &.complete, &.active{\n        .step-connector-l, .step-connector-r, .step-icon {\n            background: tokens.$ifxColorOcean500;\n            &.active, &.error {\n                background: tokens.$ifxColorEngineering400;\n            }\n        }\n        .step-label{\n            color: tokens.$ifxColorBaseBlack;\n        }\n    } \n    \n    &.complete, &.clickable{\n        .step-label{\n            cursor: pointer;\n        }\n    }\n    \n    &.active{\n        .step-label{\n            cursor: auto;\n        }\n    }\n\n    &.error:not(.active){\n        color: tokens.$ifxColorRed500;\n        .step-label{\n            color: tokens.$ifxColorRed500;\n        }\n    }\n}\n\n.active-indic{\n    width: tokens.$ifxSize200;\n    height: tokens.$ifxSize200;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    background: white;\n}\n\n.step-icon-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.step-icon{\n    width: tokens.$ifxSize300;\n    height: tokens.$ifxSize300;\n    background-color: tokens.$ifxColorEngineering400;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n}\n\n.step-connector-r, .step-connector-l{\n    height: 2px;\n    width: tokens.$ifxSize800 + tokens.$ifxSize50;\n    background-color: tokens.$ifxColorEngineering400;\n}","import { h, \n         Component, \n         Listen, \n         Prop, \n         State, \n         Watch } from \"@stencil/core\";\nimport { StepperState } from \"../interfaces\";\n\n@Component({\n    tag     : 'ifx-step',\n    styleUrl: 'step.scss',\n    shadow  : true\n})\n\nexport class Step {\n\n    /**\n     * Sets the complete status of the step.\n     * \n     * @Default false\n     */\n    @Prop() complete?: boolean = false;\n\n    /**\n     * Disables the step - makes the step unclickable\n     * \n     * @Default false\n     */\n    @Prop() disabled?: boolean = false;\n\n    /**\n     * Sets the error status of the step.\n     * \n     * @Default false\n     */\n    @Prop({ mutable: true }) error?: boolean = false;\n\n    /**\n     * An internal prop to identify the last step of the stepper.\n     */\n    @Prop({ reflect: false }) lastStep: boolean = false;\n\n    /**\n     * An unique step id assigned to every step in the stepper.\n     */\n    @Prop() stepId: number = 1;\n\n    /**\n     * An internal prop to store the current state of the parent (stepper) components.\n     */\n    @Prop({ reflect: false }) stepperState: StepperState = { activeStep: 1, \n                                                             showStepNumber: false, \n                                                             variant: 'default', \n                                                             indicatorPosition: 'left' };\n\n    /**\n     * Stores the active state of the step.\n     */\n    @State() active: boolean;\n\n    /**\n     * Internal state which sets to true when the step is clickable.\n     */\n    @State() clickable: boolean = false;\n\n    @Listen('ifxChange', { target: 'document' })\n    onStepChange(event: CustomEvent) {\n        const previousActiveStep = event.detail.previousActiveStep;\n        if (previousActiveStep === this.stepId && this.error) {\n            this.clickable = true;\n        }\n    } \n\n    @Watch('stepperState')\n    updateCurrentStep(newStepperState) {\n        this.active = (newStepperState.activeStep === this.stepId)\n    }\n\n    @Watch('active')\n    updateErrorState(){\n        if (this.active && this.error) {\n            this.error = false;\n        }\n    }\n\n    /* Handle the click event on step label. */\n    handleStepClick() {\n        if (!this.disabled && this.stepperState.variant === 'default' && (this.clickable || this.complete)) {\n            this.stepperState.setActiveStep(this.stepId)\n        } \n    }\n\n    /* Handle the 'Enter' key press on step label. */\n    handleStepKeyDown(event: KeyboardEvent) {\n        if (!this.disabled && this.stepperState.variant === 'default' && (this.clickable || this.complete) && event.key === 'Enter') {\n            this.stepperState.setActiveStep(this.stepId)\n        } \n    }\n    \n    /**\n     * Lifecycle methods\n     */\n\n    render() {\n        return (\n            <div aria-current = {this.active ? 'step': false}\n                aria-disabled = {this.active || this.complete ? false : true}\n                class = {`step-wrapper ${this.stepId === 1 ? 'first-step': ''} \n                        ${this.error ? 'error': ''}\n                        ${this.stepperState.variant}\n                        ${this.complete ? 'complete': ''}\n                        ${this.lastStep ? 'last-step': ''}\n                        indicator-${this.stepperState.indicatorPosition}\n                        ${this.active ? 'active' : ''}\n                        ${this.clickable ? 'clickable' : ''}`}>\n\n                <div class = 'step-icon-wrapper'>\n                    {/* Left connector */}\n                    {this.stepperState.variant === 'default' && <span class = 'step-connector-l'/>}\n\n                    {\n                        /* Active, complete or incomplete */\n                        (this.stepperState.variant === 'default' && (!this.error || (this.error && this.active))) && \n                        <div class = 'step-icon'>\n                            {(this.stepperState.showStepNumber && !this.complete && !this.active) ? this.stepId : ''}\n                            {(this.complete && !this.active) && <ifx-icon icon='check16'></ifx-icon>}\n                            {this.active && <span class = 'active-indic'></span>}\n                        </div>\n                    }\n\n                    {/* Special error state */}\n                    {(this.stepperState.variant ==='default' && this.error && !this.active) && <ifx-icon icon='warningf24'></ifx-icon>}\n                    \n                    {/* Right connector */}\n                    {this.stepperState.variant === 'default' && <span class = {`step-connector-r ${this.active ? 'active' : ''}`}/>}\n                </div>\n\n                {\n                    /* Step labels */\n                    (this.stepperState.variant === 'default' || (this.stepperState.variant === 'compact' && (this.active || this.stepId === this.stepperState.activeStep+1))) && \n                    <div tabIndex={!this.disabled && this.complete && !this.active ? 0 : -1} \n                        class = {`step-label ${this.stepperState.variant === 'compact' ? (this.active ? 'curr-label' : 'next-label') : ''}`} \n                        onClick={() => { this.handleStepClick() }} \n                        onKeyDown={(e) => { this.handleStepKeyDown(e) }}>\n\n                        {\n                            (this.stepperState.variant === 'default') &&\n                            <ifx-link variant='menu'>\n                                <slot/>\n                            </ifx-link>\n                        }\n\n                        {this.stepperState.variant === 'compact' &&  !this.active  ? 'Next: ' : ''}\n                        {this.stepperState.variant === 'compact' && <slot/>}\n                    </div>\n                }\n\n            </div>\n        );\n    };\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.stepper{\n    display: flex;\n    align-items: center;\n    \n    &.compact{\n        justify-content: space-between;\n        align-items: center;\n        \n        &.compact-right {\n            flex-direction: row-reverse;\n            text-align: left;\n        }\n\n        .stepper-wrapper{\n            flex-direction: column;\n        }\n    }\n}\n\n.stepper-wrapper{\n    display: flex;\n    flex-direction: row;\n}\n\n.stepper-progress{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font: tokens.$ifxBodyBodySemibold04;\n    min-width: tokens.$ifxSize700;\n    height: tokens.$ifxSize700;\n    border-radius: tokens.$ifxBorderRadiusRound;\n    background: conic-gradient(tokens.$ifxColorOcean500 var(--pb, 0%), tokens.$ifxColorEngineering400 0);\n    \n    .progress-detail{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        width: (tokens.$ifxSize700)-(tokens.$ifxSize100);\n        height: (tokens.$ifxSize700)-(tokens.$ifxSize100);\n        border-radius: tokens.$ifxBorderRadiusRound;\n        background: white;\n    }\n}\n\n","import { h, \n         Component, \n         Element, \n         Event, \n         EventEmitter, \n         Listen, \n         Prop, \n         State, \n         Watch } from \"@stencil/core\";\nimport { StepperState } from \"./interfaces\";\n\n@Component({\n    tag     : 'ifx-stepper',\n    styleUrl: 'stepper.scss',\n    shadow  : true\n})\n\nexport class Stepper {\n\n    /**\n     * Reference to the host element.\n     */\n    @Element() el: HTMLElement;\n\n    /**\n     * An event emmited when the active step is changed.\n     */\n    @Event() ifxChange: EventEmitter;\n\n    /**\n     * Represents the active step of the stepper.\n     */\n    @Prop({ mutable: true }) activeStep: number = 1;\n\n    /**\n     * (Optional) Defines the position of the indicator in a compact variant.\n     * \n     * @Default 'left'\n     */\n    @Prop() indicatorPosition?: 'left' | 'right' = 'left';\n\n    /**\n     * (Optional) Control whether to show step number or not in a DEFAULT variant.\n     * \n     * @Default false\n     */\n    @Prop() showStepNumber?: boolean = false;\n\n    /**\n     * (Optional) Defines the variant of the stepper.\n     * \n     * @Default 'default'\n     */\n    @Prop() variant?: 'default' | 'compact' = 'default';\n\n    /**\n     * An internal state for activeStep prop.\n     */\n    @State() internalActiveStep: number = undefined;\n\n    /**\n     * Stores total number of steps in a stepper.\n     */\n    @State() stepsCount: number;\n\n    @Listen('ifxChange') \n    onStepChange(event: CustomEvent) {\n        const steps = this.getSteps();\n        const previousActiveStep = steps[event.detail.previousActiveStep-1];\n        if (previousActiveStep && !previousActiveStep.complete) {\n            previousActiveStep.setAttribute('error', 'true');\n        }\n    } \n\n    @Watch('activeStep')\n    handleActiveStep() {\n        this.updateActiveStep();\n    }\n\n    /* Assigns step Id's to ifx-steps. */\n    addStepIdsToStepsAndCountSteps() {\n        const steps = this.getSteps()\n        steps[steps.length - 1].lastStep = true;\n        for (let i = 0; i < steps.length; i++) {\n            steps[i].stepId = i + 1;\n        }\n        this.stepsCount = steps.length;\n    }\n\n    /* Returns the reference to all steps from DOM. */\n    getSteps() {\n        const steps: NodeListOf<HTMLIfxStepElement> = this.el.querySelectorAll('ifx-step');\n        return steps;\n    }\n\n    /* Sets the specified step as an active step. */\n    setActiveStep(stepId: number) {\n        this.updateActiveStep(stepId);\n    }\n\n    /* Sets the step before active to step to complete by default (on load). */\n    setStepsBeforeActiveToComplete() {\n        const steps = this.getSteps();\n        steps.forEach( (step, stepId) => {\n            if (stepId+1 < this.activeStep) step.complete = true;\n        });\n    }\n\n    /* Sync steps with parent state. */\n    syncIfxSteps() {\n        const steps = this.getSteps()\n        for (let i = 0; i < steps.length; i++) {\n            const stepperState: StepperState = { \n                activeStep: this.internalActiveStep, \n                indicatorPosition: (this.indicatorPosition !== 'right' ? 'left' : 'right'), \n                showStepNumber: this.showStepNumber, \n                variant: (this.variant !== 'compact' ? 'default' : 'compact'), \n                setActiveStep: this.setActiveStep.bind(this)\n            };\n            steps[i].stepperState = stepperState;\n        }\n    }\n\n    /* Sets the initial active step or assigns new active step. */\n    updateActiveStep(stepId: number = null) {\n        let newActiveStep = stepId ? stepId : Math.max(1, Math.min(this.stepsCount + (this.variant !== 'compact' ? 1 : 0), this.activeStep));\n        if (newActiveStep != this.internalActiveStep) {\n            if (this.internalActiveStep !== undefined) {\n                this.ifxChange.emit({ activeStep: newActiveStep, \n                                      previousActiveStep: this.internalActiveStep, \n                                      totalSteps: this.stepsCount });\n            }\n        }\n        this.internalActiveStep = newActiveStep;\n        this.activeStep = newActiveStep;\n    }\n\n    /**\n     * Lifecycle methods\n     */\n\n    componentWillLoad() {\n        this.addStepIdsToStepsAndCountSteps();\n        this.updateActiveStep();\n        this.setStepsBeforeActiveToComplete();\n        this.syncIfxSteps();\n    }\n\n    componentWillUpdate() {\n        this.syncIfxSteps();\n    }\n\n    render() {\n        return (\n            <div aria-label = 'a stepper' \n                role = 'navigation' \n                class = {`stepper ${this.variant !== 'compact' ? 'default' : 'compact'} ${this.variant === 'compact' ? 'compact-'+this.indicatorPosition: ''}`}>\n                {\n                    /* Progress bar for compact variant. */\n                    (this.variant === 'compact') && \n                    <div class = 'stepper-progress'>\n                        <div class = 'progress-detail'>\n                            {`${Math.min(this.internalActiveStep, this.stepsCount)} of ${this.stepsCount}`}\n                        </div>\n                    </div>\n                }\n                \n                {/* Slot for ifx-steps. */}\n                <div class = {`stepper-wrapper`}>\n                    <slot />\n                </div>\n            </div>\n        );\n    };\n\n    componentDidRender() {\n        /* Updating progress bar in compact version. */\n        if (this.variant == 'compact') {\n            const progressBar: HTMLElement = this.el.shadowRoot.querySelector('.stepper-progress');\n            progressBar.style.setProperty('--pb', `${(this.internalActiveStep / (this.stepsCount)) * 100}%`);\n        }\n    }\n}\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["InfineonIconStencil","convertStringToHtml","htmlString","div","document","createElement","innerHTML","firstChild","convertHtmlToObject","htmlElement","Array","from","attributes","_ref","name","value","reduce","acc","current","convertPathsToVnode","htmlPath","svgPaths","parentPath","this","parentPathToVnode","h","push","paths","querySelectorAll","pathLength","length","i","pathToObject","objToVnode","getSVG","svgPath","class","width","ifxIcon","height","xmlns","fill","viewBox","constructIcon","svgContent","SVG","consoleError","emit","icon","console","error","componentWillLoad","getIcon","toLowerCase","replace","_m","chr","render","Host","key","Link","undefined","setInternalStates","href","internalHref","trim","internalTarget","target","internalVariant","variant","componentWillRender","linkClassNames","getSizeClass","small","size","medium","large","extraLarge","getVariantClass","bold","title","underlined","menu","classNames","disabled","Step","activeStep","showStepNumber","indicatorPosition","onStepChange","event","detail","previousActiveStep","stepId","clickable","updateCurrentStep","newStepperState","active","updateErrorState","handleStepClick","stepperState","complete","setActiveStep","handleStepKeyDown","lastStep","tabIndex","onClick","onKeyDown","e","Stepper","getSteps","setAttribute","handleActiveStep","updateActiveStep","addStepIdsToStepsAndCountSteps","steps","stepsCount","el","setStepsBeforeActiveToComplete","forEach","step","syncIfxSteps","internalActiveStep","bind","arguments","newActiveStep","Math","max","min","ifxChange","totalSteps","componentWillUpdate","role","componentDidRender","shadowRoot","querySelector","style","setProperty","hasOwn","hasOwnProperty","classes","arg","appendClass","parseValue","isArray","apply","toString","Object","prototype","includes","call","newClass","module","exports","default","window"],"sourceRoot":""}