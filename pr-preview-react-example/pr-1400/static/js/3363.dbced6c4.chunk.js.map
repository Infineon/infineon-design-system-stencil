{"version":3,"file":"static/js/3363.dbced6c4.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.scss?tag=ifx-tooltip&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tooltip/tooltip.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: inline-flex;\n}\n\n.tooltip__container {\n  display: inline-flex;\n  flex-direction: column;\n  position: relative;\n  font-family: var(--ifx-font-family);\n\n}\n\n%tooltip-common {\n  background-color: tokens.$ifxColorBaseBlack;\n  border: 1px solid black;\n  z-index: 1080;\n  display: none;\n  transition: opacity 0.3s;\n  position: relative;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 20px;\n  color: tokens.$ifxColorBaseWhite;\n\n  &.visible {\n    display: flex !important;\n    align-items: start;\n    //min-width: 100px;\n    //width: auto;\n  }\n}\n\n\n\n.tooltip-dismissible {\n  @extend %tooltip-common;\n  min-width: 110px;\n  width: auto;\n\n    .close-button {\n      all: unset;\n      //position: absolute;\n      //top: tokens.$ifxSpace150;\n      //right: tokens.$ifxSpace150;\n      cursor: pointer;\n      position: relative;\n      order: 2;\n      padding-top: 12px;\n      padding-right: 12px;\n    }\n\n  .tooltip-dismissible-content {\n    display: flex;\n    flex-direction: column;\n    gap: tokens.$ifxSpace150;\n    padding: tokens.$ifxSpace150;\n    flex-grow: 1;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n\n  }\n\n  .tooltip-dismissible-header,\n  .tooltip-dismissible-body {\n    font-size: 14px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-dismissible-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-dismissible-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n.tooltip-compact {\n  @extend %tooltip-common;\n  padding: 4px 8px;\n  text-align: center;\n  flex-grow: 1;\n}\n\n\n.tooltip-extended {\n  @extend %tooltip-common;\n  min-width: 100px;\n  width: auto;\n  //padding-left: 36px; // Added this line, adjust as per your icon width\n  //padding-left: tokens.$ifxSpace150; // Added this line, adjust as per your icon width\n  align-items: center;\n  padding: tokens.$ifxSpace150;\n  gap: 10px;\n\n  .extended_icon {\n    display: flex;\n    align-self: flex-start;\n    align-items: center;\n    //padding-top: tokens.$ifxSpace150;\n    cursor: pointer;\n  }\n\n\n\n  .tooltip-extended-content {\n    display: flex;\n    flex-direction: column;\n    gap: tokens.$ifxSpace150;\n    //padding: tokens.$ifxSpace150;\n    flex-grow: 1;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    overflow-wrap: anywhere;\n  }\n\n  .tooltip-extended-header,\n  .tooltip-extended-body {\n    font-size: 14px;\n    font-style: normal;\n    line-height: 20px;\n  }\n\n  .tooltip-extended-header {\n    font-weight: tokens.$ifxFontWeightSemibold;\n  }\n\n  .tooltip-extended-body {\n    font-weight: tokens.$ifxFontWeightRegular;\n  }\n}\n\n\n.tooltip__container .tooltip-arrow-svg {\n  position: absolute;\n  width: 8px;\n  height: 8px;\n}\n\n\n%tooltip-arrow-positions {\n\n  // For 'top' placement\n  &[data-placement=\"top\"]>.tooltip-arrow-svg {\n    bottom: -7px;\n    left: 50%;\n    transform: rotate(180deg) translateX(-50%);\n  }\n\n  // For 'top-start' placement\n  &[data-placement=\"top-start\"]>.tooltip-arrow-svg {\n    bottom: -7px;\n    left: 10px; // Adjust as needed\n    transform: rotate(180deg)\n  }\n\n  // For 'top-end' placement\n  &[data-placement=\"top-end\"]>.tooltip-arrow-svg {\n    bottom: -7px;\n    right: 10px; // Adjust as needed\n    transform: rotate(180deg);\n  }\n\n  // For 'bottom' placement\n  &[data-placement=\"bottom\"]>.tooltip-arrow-svg {\n    top: -7px;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  // For 'bottom-start' placement\n  &[data-placement=\"bottom-start\"]>.tooltip-arrow-svg {\n    top: -7px;\n    left: 10px; // Adjust as needed\n  }\n\n  // For 'bottom-end' placement\n  &[data-placement=\"bottom-end\"]>.tooltip-arrow-svg {\n    top: -7px;\n    right: 10px; // Adjust as needed\n  }\n\n  // For 'left' placement\n  &[data-placement=\"left\"]>.tooltip-arrow-svg {\n    right: -3px;\n    top: 50%;\n    transform: rotate(90deg) translateY(-50%) translateX(-50%);\n  }\n\n  // For 'right' placement\n  &[data-placement=\"right\"]>.tooltip-arrow-svg {\n    left: -3px;\n    top: 50%;\n    transform: rotate(270deg) translateY(-50%) translateX(50%);\n  }\n}\n\n\n.tooltip-compact {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-dismissible {\n  @extend %tooltip-arrow-positions;\n}\n\n.tooltip-extended {\n  @extend %tooltip-arrow-positions;\n}","import { Component, Prop, h, Element, State, Watch } from '@stencil/core';\nimport { createPopper } from '@popperjs/core';\n\n@Component({\n  tag: 'ifx-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true\n})\nexport class Tooltip {\n\n  @Element() el: HTMLElement;\n  @State() tooltipVisible: boolean = false;\n  @Prop() header: string = '';\n  @Prop() text: string = '';\n  @Prop() position: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n  @State() internalPosition: 'bottom-start' | 'top-start' | 'left' | 'bottom-end' | 'top-end' | 'right' | 'bottom' | 'top' | 'auto' = 'auto';\n\n  @Prop() variant: 'compact' | 'dismissible' | 'extended' = 'compact';\n  @Prop() icon: string;\n\n  tooltipEl: HTMLElement;\n  referenceEl: HTMLElement;\n  popperInstance: any = null;\n\n\n  componentWillLoad() { \n    if(this.variant.toLowerCase().trim() === \"\") { \n      this.variant = 'compact'\n    }\n  }\n  \n  componentDidLoad() {\n    const slotElement = this.el.shadowRoot.querySelector('.tooltip__container').firstChild;\n    \n    if(this.variant.toLowerCase() === 'compact' || this.variant.toLowerCase() === 'extended') {\n      slotElement.addEventListener('mouseenter', this.onMouseEnter)\n      slotElement.addEventListener('mouseleave', this.onMouseLeave)\n    }else{\n      slotElement.addEventListener('click', this.onClick);\n    }\n  }\n\n  initializePopper() {\n    if (this.popperInstance) return;\n\n    this.referenceEl = this.el;\n    this.tooltipEl;\n    if (this.variant.toLowerCase() === 'compact') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-compact');\n    }\n    else if (this.variant.toLowerCase() === 'dismissible') {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-dismissible');\n    }\n    else {\n      this.tooltipEl = this.el.shadowRoot.querySelector('.tooltip-extended');\n\n    }\n\n    const effectivePosition = this.position === 'auto' ? this.determineBestPosition() : this.position;\n\n    // Set the internalPosition\n    this.internalPosition = effectivePosition;\n\n    if (this.tooltipEl && this.referenceEl) {\n\n      this.popperInstance = createPopper(this.referenceEl, this.tooltipEl, {\n        placement: this.internalPosition,\n        modifiers: [\n          {\n            name: 'offset',\n            options: {\n              offset: [0, 8]  // this offset should be adjusted to ensure the tooltip doesn't overlap its reference element\n            }\n          },\n          {\n            name: 'arrow',\n            options: {\n              element: '.tooltip-arrow-svg'\n            }\n          }\n        ]\n      });\n\n    }\n\n    // Add this line to set the 'data-placement' attribute on the tooltip\n    this.tooltipEl.setAttribute('data-placement', effectivePosition);\n\n\n  }\n\n  determineBestPosition() {\n    // This is a simplified version, you can enhance this based on available viewport space.\n    const rect = this.referenceEl.getBoundingClientRect();\n    const yOffset = window.scrollY; // Get current scroll position\n    const xOffset = window.scrollX; // Get current horizontal scroll position\n\n    const verticalHalfwayPoint = rect.top + yOffset + rect.height / 2;\n    const horizontalHalfwayPoint = rect.left + xOffset + rect.width / 2;\n\n    if (this.position === 'auto') {\n      if (verticalHalfwayPoint > window.innerHeight / 2) {\n        if (horizontalHalfwayPoint > window.innerWidth / 2) {\n          return 'top-end';\n        } else {\n          return 'top-start';\n        }\n      } else {\n        if (horizontalHalfwayPoint > window.innerWidth / 2) {\n          return 'bottom-end';\n        } else {\n          return 'bottom-start';\n        }\n      }\n    } else {\n      return this.position;\n    }\n  }\n\n  @Watch('position')\n  positionChanged(newVal: any) {\n    this.internalPosition = newVal;\n    this.popperInstance?.destroy();\n    this.popperInstance = null; // Force re-initialization on next mouse enter\n  }\n\n\n\n  onMouseEnter = () => {\n    // Enable the event listeners immediately\n    this.popperInstance?.setOptions((options) => ({\n      ...options,\n      modifiers: [\n        ...options.modifiers,\n        { name: 'eventListeners', enabled: true },\n      ],\n    }));\n\n    // Initialize the popper instance\n    this.initializePopper();\n\n    // Make the tooltip visible\n    this.tooltipVisible = true;\n    this.tooltipEl.style.display = 'block';\n\n    // Update the popper instance immediately after initialization\n    this.popperInstance?.update();\n  }\n\n\n  onMouseLeave = () => {\n    this.tooltipVisible = false;\n    this.tooltipEl.style.display = 'none';\n\n  }\n\n  disconnectedCallback() {\n    this.popperInstance?.destroy();\n  }\n\n  onClick = () => {\n    if (this.variant.toLowerCase() === 'dismissible') {\n      this.initializePopper();\n      this.tooltipVisible = !this.tooltipVisible;\n      this.tooltipEl.style.display = this.tooltipVisible ? 'block' : 'none';\n      this.popperInstance?.update();\n    }\n  }\n\n  onDismissClick = () => {\n    this.tooltipVisible = false;\n    this.tooltipEl.style.display = 'none';\n  }\n\n  render() {\n    const tooltipDismissible = {\n      'tooltip-dismissible': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipCompact = {\n      'tooltip-compact': true,\n      'visible': this.tooltipVisible,\n    };\n\n    const tooltipExtended = {\n      'tooltip-extended': true,\n      'visible': this.tooltipVisible,\n    };\n\n    return (\n      <div aria-label=\"a tooltip showing important information\" aria-value={this.header} class=\"tooltip__container\" >\n        <slot></slot>\n\n        {this.variant.toLowerCase() === 'dismissible' && <div class={tooltipDismissible}>\n          <button class=\"close-button\" onClick={this.onDismissClick}>\n            <ifx-icon icon=\"cross16\"></ifx-icon>\n          </button>\n          <div class=\"tooltip-dismissible-content\">\n            {this.header && <div class=\"tooltip-dismissible-header\">{this.header}</div>}\n            <div class=\"tooltip-dismissible-body\">{this.text}</div>\n          </div>\n          <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n          </svg>\n        </div>\n        }\n        {this.variant.toLowerCase() === 'compact' &&\n          <div class={tooltipCompact}>\n            {this.text}\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div>\n        }\n        {this.variant.toLowerCase() === 'extended' &&\n          <div class={tooltipExtended}>\n            <slot name=\"icon\">\n              {this.icon ? <div class=\"extended_icon\"><ifx-icon icon={this.icon}></ifx-icon></div> :\n                <svg class=\"extended_icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" viewBox=\"0 0 24 24\">\n                  <path stroke=\"#fff\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M20.5 2.5h-16a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-16a2 2 0 0 0-2-2Z\" />\n                  <path stroke=\"#fff\" d=\"M19 17H6l2.5-4 2.097 2.516.405.486.379-.506 4.118-5.49.003-.002L19 17Z\" />\n                  <path fill=\"#fff\" d=\"M10 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\" />\n                </svg>\n              }\n            </slot>\n            <div class=\"tooltip-extended-content\">\n              {this.header && <div class=\"tooltip-extended-header\">{this.header}</div>}\n              <div class=\"tooltip-extended-body\">{this.text}</div>\n            </div>\n            <svg class=\"tooltip-arrow-svg\" width=\"12\" height=\"8\" viewBox=\"0 0 12 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path id=\"Indicator\" d=\"M6 0L12 8L0 8L6 0Z\" fill=\"#1D1D1D\" />\n            </svg>\n          </div >\n        }\n      </div>\n    );\n  }\n\n\n}"],"names":["Tooltip","popperInstance","onMouseEnter","_a","this","setOptions","options","Object","assign","modifiers","name","enabled","initializePopper","tooltipVisible","tooltipEl","style","display","_b","update","onMouseLeave","onClick","variant","toLowerCase","onDismissClick","componentWillLoad","trim","componentDidLoad","slotElement","el","shadowRoot","querySelector","firstChild","addEventListener","referenceEl","effectivePosition","position","determineBestPosition","internalPosition","createPopper","placement","offset","element","setAttribute","rect","getBoundingClientRect","yOffset","window","scrollY","xOffset","scrollX","verticalHalfwayPoint","top","height","horizontalHalfwayPoint","left","width","innerHeight","innerWidth","positionChanged","newVal","destroy","disconnectedCallback","render","tooltipDismissible","tooltipCompact","tooltipExtended","h","key","header","class","icon","text","viewBox","fill","xmlns","id","d","stroke"],"sourceRoot":""}