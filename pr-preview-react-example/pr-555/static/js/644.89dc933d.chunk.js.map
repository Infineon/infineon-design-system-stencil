{"version":3,"file":"static/js/644.89dc933d.chunk.js","mappings":"wMAQaA,EAAI,W,gFAGgC,W,kDAGxB,G,YACE,O,8CAGzB,SAAeC,GACbC,KAAKC,UAAYF,EAAMG,M,GACxB,CAAAC,IAAA,4BAAAC,MAED,WACE,IAAMC,EAAQL,KAAKM,GAAGC,cAAc,kBAC9BC,EAAQR,KAAKM,GAAGC,cAAc,kBAI7BP,KAAKS,OAFPJ,EAMEL,KAAKU,QAFPF,C,GAGN,CAAAL,IAAA,iBAAAC,MAED,WAAc,IAAAO,EAAA,KACNC,EAAOZ,KAAKM,GAAGO,WAAWN,cAAc,SAC9CK,EAAKE,iBAAiB,aAAa,SAACC,GAClCJ,EAAKL,GAAGC,cAAc,qBAAqBS,WAAY,EAC5B,mBAAvBD,EAAGE,OAAOC,UAAwD,eAAvBH,EAAGE,OAAOC,UACvDP,EAAKL,GAAGO,WAAWN,cAAc,SAASY,MAAMC,YAAc,UAC9DT,EAAKL,GAAGC,cAAc,qBAAqBS,WAAY,GAClDL,EAAKL,GAAGO,WAAWN,cAAc,SAASY,MAAMC,YAAc,S,IAIvER,EAAKE,iBAAiB,YAAY,WAChCH,EAAKL,GAAGC,cAAc,qBAAqBS,WAAY,EACvDL,EAAKL,GAAGO,WAAWN,cAAc,SAASY,MAAMC,YAAc,S,MAEjE,CAAAjB,IAAA,oBAAAC,MAED,WACEJ,KAAKqB,2B,GACN,CAAAlB,IAAA,mBAAAC,MAED,WACEJ,KAAKsB,iBACLtB,KAAKuB,2C,GAEN,CAAApB,IAAA,4CAAAC,MAGO,WACN,IAAMoB,EAAUxB,KAAKM,GAAGO,WAAWY,WACnC,GAAKD,EAAL,CAIA,IAAME,EAAmBF,EAAQjB,cAAc,wBAC1CmB,GAKLF,EAAQG,UAAY,EACpBD,EAAiBC,UAAY,GAL3BC,QAAQC,MAAM,+B,MALdD,QAAQC,MAAM,oB,GAYjB,CAAA1B,IAAA,sBAAAC,MAGD,WACEJ,KAAKqB,2B,GACN,CAAAlB,IAAA,SAAAC,MAED,WACE,OACE0B,EAAAA,EAAAA,GAACC,EAAAA,EAAI,MACHD,EAAAA,EAAAA,GAAA,OAAKE,MAAK,oBAAAC,OAENjC,KAAKU,OAAS,SAAW,GAAE,gBAAAuB,OAC3BjC,KAAKkC,UAAS,iBAAAD,OACdjC,KAAKC,YAGa,eAAnBD,KAAKkC,YACJJ,EAAAA,EAAAA,GAAA,OAAKE,MAAM,eACTF,EAAAA,EAAAA,GAAA,KAAGE,MAAK,YAAAC,OAAcjC,KAAKS,MAAQ,UAAY,IAAM0B,KAAMnC,KAAKmC,OAC9DL,EAAAA,EAAAA,GAAA,QAAMM,KAAK,UAGbN,EAAAA,EAAAA,GAAA,OAAKE,MAAM,wBACTF,EAAAA,EAAAA,GAAA,KAAGE,MAAM,aAAaG,KAAMnC,KAAKmC,OAC/BL,EAAAA,EAAAA,GAAA,eAEFA,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,QAAMM,KAAK,eAKC,aAAnBpC,KAAKkC,YACJJ,EAAAA,EAAAA,GAAA,OAAKE,MAAM,aACTF,EAAAA,EAAAA,GAAA,KAAGE,MAAM,sBAAsBG,KAAMnC,KAAKmC,KAAMlB,OAAQjB,KAAKiB,SAC3Da,EAAAA,EAAAA,GAAA,OAAKE,MAAK,YAAAC,OAAcjC,KAAKS,MAAQ,UAAY,MAC/CqB,EAAAA,EAAAA,GAAA,QAAMM,KAAK,UAGbN,EAAAA,EAAAA,GAAA,OAAKE,MAAM,eACTF,EAAAA,EAAAA,GAAA,gBAIJA,EAAAA,EAAAA,GAAA,OAAKE,MAAM,wBACTF,EAAAA,EAAAA,GAAA,QAAMM,KAAK,e,GAMxB,CAAAjC,IAAA,KAAAkC,IAAA,W,0BA1Hc,G,QCRD,u+E","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/card/card.scss?tag=ifx-card&encapsulation=shadow"],"sourcesContent":["import { Component, h, Host, Element, Prop, State, Listen } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-card',\n  styleUrl: 'card.scss',\n  shadow: true,\n})\n\nexport class Card {\n  @Element() el;\n  @State() noBtns: boolean;\n  @Prop() direction: 'horizontal' | 'vertical' = 'vertical';\n  @State() alignment: string;\n  @State() noImg: boolean;\n  @Prop() href: string = \"\";\n  @Prop() target: string = \"_self\";\n\n  @Listen('imgPosition')\n  setImgPosition(event) {\n    this.alignment = event.detail\n  }\n\n  handleComponentAdjustment() {\n    const image = this.el.querySelector('ifx-card-image')\n    const links = this.el.querySelector('ifx-card-links')\n\n    if (!image) {\n      this.noImg = true;\n    } else this.noImg = false;\n\n    if (!links) {\n      this.noBtns = true;\n    } else this.noBtns = false;\n  }\n\n  handleHovering() {\n    const card = this.el.shadowRoot.querySelector('.card')\n    card.addEventListener('mouseover', (ev) => {\n      this.el.querySelector('ifx-card-headline').isHovered = true;\n      if (ev.target.nodeName === 'IFX-CARD-LINKS' || ev.target.nodeName === 'IFX-BUTTON') {\n        this.el.shadowRoot.querySelector('.card').style.borderColor = '#ebe9e9';\n        this.el.querySelector('ifx-card-headline').isHovered = false;\n      } else this.el.shadowRoot.querySelector('.card').style.borderColor = '#0A8276';\n    })\n\n\n    card.addEventListener('mouseout', () => {\n      this.el.querySelector('ifx-card-headline').isHovered = false;\n      this.el.shadowRoot.querySelector('.card').style.borderColor = '#ebe9e9';\n    })\n  }\n\n  componentWillLoad() {\n    this.handleComponentAdjustment()\n  }\n\n  componentDidLoad() {\n    this.handleHovering();\n    this.addEventListenersToHandleCustomFocusState();\n\n  }\n\n\n  private addEventListenersToHandleCustomFocusState() {\n    const element = this.el.shadowRoot.firstChild;\n    if (!element) {\n      console.error('element not found');\n      return;\n    }\n    const upperBodyWrapper = element.querySelector('.upper__body-wrapper');\n    if (!upperBodyWrapper) {\n      console.error('upper body wrapper not found');\n      return;\n    }\n\n    element.tabIndex = -1;\n    upperBodyWrapper.tabIndex = -1;\n\n  }\n\n\n  componentWillUpdate() {\n    this.handleComponentAdjustment()\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={\n          `card \n          ${this.noBtns ? 'noBtns' : \"\"}\n          ${this.direction} \n          ${this.alignment}`\n        }>\n\n          {this.direction === 'horizontal' &&\n            <div class=\"horizontal\">\n              <a class={`card-img ${this.noImg ? 'noImage' : \"\"}`} href={this.href}>\n                <slot name=\"img\" />\n              </a>\n\n              <div class='lower__body-wrapper'>\n                <a class='upper-body' href={this.href}>\n                  <slot />\n                </a>\n                <div>\n                  <slot name='buttons' />\n                </div>\n              </div>\n            </div>}\n\n          {this.direction === 'vertical' &&\n            <div class=\"vertical\">\n              <a class='upper__body-wrapper' href={this.href} target={this.target}>\n                <div class={`card-img ${this.noImg ? 'noImage' : \"\"}`}>\n                  <slot name=\"img\" />\n                </div>\n\n                <div class='upper-body'>\n                  <slot />\n                </div>\n              </a>\n\n              <div class='lower__body-wrapper'>\n                <slot name='buttons' />\n              </div>\n            </div>}\n        </div>\n      </Host>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n.card {\n  position: relative;\n  display: inline-flex;\n  flex-direction: column;\n  word-wrap: break-word;\n  background-color: #fff;\n  background-clip: border-box;\n  border: 1px solid #ebe9e9;\n  border-radius: 1px;\n  //width: 22rem;\n  width: 350px;\n  height: auto;\n\n  &.noBtns {\n    & .vertical {\n      & .lower__body-wrapper {\n        padding-bottom: 24px;\n      }\n    }\n\n    & .horizontal {\n      & .lower__body-wrapper {\n        padding-bottom: 24px;\n      }\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n    border-color: #0A8276;\n  }\n\n  & .horizontal {\n    display: flex;\n    flex-direction: row;\n    min-height: 218px;\n\n    & .card-img {\n      flex: 1;\n      text-decoration: none;\n\n      &.noImage {\n        display: none;\n      }\n\n      & ::slotted([slot=img]) {\n        width: 100%;\n        vertical-align: bottom;\n      }\n    }\n\n    & .lower__body-wrapper {\n      flex: 1;\n      display: grid;\n      grid-template-rows: 1fr auto;\n\n      & .upper-body {\n        display: flex;\n        flex-direction: column;\n        text-decoration: none;\n        color: tokens.$ifxColorBaseBlack;\n        padding: 24px 24px 0px 24px;\n      }\n    }\n  }\n\n  & .vertical {\n    & .upper__body-wrapper {\n      text-decoration: none;\n      color: tokens.$ifxColorBaseBlack;\n\n      & .card-img {\n        height: 190px;\n\n        &.noImage {\n          display: none;\n        }\n      }\n\n      & .upper-body {\n        padding: 24px 24px 0px 24px;\n      }\n    }\n\n    & .lower__body-wrapper {\n      &:hover {\n        border-color: #ebe9e9;\n      }\n    }\n  }\n\n  &.horizontal {\n    flex-direction: row;\n    width: 538px;\n\n    & .card-img {\n      flex: 1;\n      order: 2;\n\n      & ::slotted([slot=img]) {\n        width: 100%;\n        height: 100%;\n        vertical-align: bottom;\n        object-fit: cover;\n      }\n    }\n\n    &.left {\n      & .horizontal {\n        & .card-img {\n          order: 1;\n        }\n\n        & .lower__body-wrapper {\n          order: 2;\n        }\n      }\n    }\n  }\n}\n\n.card:focus,\n.card:focus-visible,\n.focus {\n  outline: none;\n  border-color: #0A8276 !important;\n}"],"names":["Card","event","this","alignment","detail","key","value","image","el","querySelector","links","noImg","noBtns","_this","card","shadowRoot","addEventListener","ev","isHovered","target","nodeName","style","borderColor","handleComponentAdjustment","handleHovering","addEventListenersToHandleCustomFocusState","element","firstChild","upperBodyWrapper","tabIndex","console","error","h","Host","class","concat","direction","href","name","get"],"sourceRoot":""}