{"version":3,"file":"static/js/7519.2d6174d4.chunk.js","mappings":"+NAOaA,EAAQ,W,+MACW,E,aAEJ,c,0BACa,E,aAMuB,U,eAElC,G,mBACI,K,uBACI,Q,CAwDnC,O,qEArDD,SAAAC,IAAA,OAAAC,EAAAA,EAAAA,KAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACEC,KAAKC,WAAY,EACjBD,KAAKE,UAAUC,OAAO,wBAAAN,EAAAO,OAAA,GAAAV,EAAA,UACvB,yBAAAW,EAAAC,MAAA,KAAAC,UAAA,E,IAAA,CAAAC,IAAA,QAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAhB,EAAAA,EAAAA,KAAAiB,MAGD,SAAAC,IAAA,OAAAlB,EAAAA,EAAAA,KAAAC,MAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACEC,KAAKC,WAAY,EACjBD,KAAKe,WAAWZ,OAChBH,KAAKgB,yBAAyB,wBAAAF,EAAAV,OAAA,GAAAS,EAAA,UAC/B,yBAAAH,EAAAJ,MAAA,KAAAC,UAAA,EAPA,IAOA,CAAAC,IAAA,yBAAAC,MAED,WACET,KAAKiB,iBAAiBd,M,GACvB,CAAAK,IAAA,qBAAAC,MAGD,WACMT,KAAKkB,qBACPlB,KAAKmB,O,GAER,CAAAX,IAAA,SAAAC,MAGD,WAAM,IAAAW,EAAA,KACEC,EAAkC,YAAjBrB,KAAKsB,QAC5B,OACEC,EAAAA,EAAAA,GAAA,OAAKC,MAAK,mBAAAC,OAAqBzB,KAAKC,UAAY,OAAS,MACvDsB,EAAAA,EAAAA,GAAA,OAAKC,MAAM,gBAAgBE,QAAS,kBAAMN,EAAKO,oBAAoB,KACnEJ,EAAAA,EAAAA,GAAA,OAAKC,MAAK,2BACPH,GACCE,EAAAA,EAAAA,GAAA,OAAKC,MAAK,wBAAAC,OAA2C,gBAAjBzB,KAAKsB,QAA4B,GAAK,WACvEtB,KAAK4B,WAAYL,EAAAA,EAAAA,GAAA,YAAUM,KAAM7B,KAAK4B,YAAgB,MAEvD,MACJL,EAAAA,EAAAA,GAAA,OAAKC,MAAM,kBACTD,EAAAA,EAAAA,GAAA,OAAKC,MAAM,iBACTD,EAAAA,EAAAA,GAAA,UAAKvB,KAAK8B,UACVP,EAAAA,EAAAA,GAAA,mBAAiBM,KAAK,WAAWP,QAAQ,WAAWI,QAAS,kBAAMN,EAAKD,OAAO,MAEjFI,EAAAA,EAAAA,GAAA,OAAKC,MAAM,eACTD,EAAAA,EAAAA,GAAA,QAAMQ,KAAK,cAEbR,EAAAA,EAAAA,GAAA,OAAKC,MAAM,iBACTD,EAAAA,EAAAA,GAAA,QAAMQ,KAAK,YACTR,EAAAA,EAAAA,GAAA,kBAAavB,KAAKgC,gBAClBT,EAAAA,EAAAA,GAAA,cAAYD,QAAQ,aAAatB,KAAKiC,uB,KAOnDxC,CAAA,CAtEkB,G,QCPJ,o3E","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.scss?tag=ifx-modal&encapsulation=shadow"],"sourcesContent":["import { Component, Prop, State, Method, Event, EventEmitter, h } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-modal',\n  styleUrl: 'modal.scss',\n  shadow: true\n})\nexport class IfxModal {\n  @State() showModal: boolean = false;\n\n  @Prop() caption: string = 'Modal Title';\n  @Prop() closeOnOverlayClick: boolean = true;\n\n  @Event() modalOpen: EventEmitter;\n  @Event() modalClose: EventEmitter;\n  @Event() closeButtonClick: EventEmitter;\n\n  @Prop() variant: 'default' | 'alert-brand' | 'alert-danger' = 'default';\n\n  @Prop() alertIcon: string = '';\n  @Prop() okButtonLabel: string = 'OK';\n  @Prop() cancelButtonLabel: string = 'Cancel';\n\n  @Method()\n  async open() {\n    this.showModal = true;\n    this.modalOpen.emit();\n  }\n\n  @Method()\n  async close() {\n    this.showModal = false;\n    this.modalClose.emit();\n    this.handleCloseButtonClick();\n  }\n\n  handleCloseButtonClick() {\n    this.closeButtonClick.emit();\n  }\n\n\n  handleOverlayClick() {\n    if (this.closeOnOverlayClick) {\n      this.close();\n    }\n  }\n\n\n  render() {\n    const isAlertVariant = this.variant !== 'default';\n    return (\n      <div class={`modal-container ${this.showModal ? 'open' : ''}`}>\n        <div class=\"modal-overlay\" onClick={() => this.handleOverlayClick()}></div>\n        <div class={`modal-content-container`}>\n          {isAlertVariant ? (\n            <div class={`modal-icon-container ${this.variant === 'alert-brand' ? '' : 'danger'}`}>\n              {this.alertIcon ? <ifx-icon icon={this.alertIcon} /> : null}\n            </div>\n          ) : null}\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h2>{this.caption}</h2>\n              <ifx-icon-button icon=\"cross-24\" variant=\"tertiary\" onClick={() => this.close()}></ifx-icon-button>\n            </div>\n            <div class=\"modal-body\">\n              <slot name=\"content\" />\n            </div>\n            <div class=\"modal-footer\">\n              <slot name=\"buttons\">\n                <ifx-button>{this.okButtonLabel}</ifx-button>\n                <ifx-button variant='secondary'>{this.cancelButtonLabel}</ifx-button>\n              </slot>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: block;\n}\n\n.modal-container {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1000;\n}\n\n.modal-container.open {\n  display: block;\n}\n\n.modal-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: tokens.$ifxColorBaseBlack;\n  opacity: 0.5;\n}\n\n.modal-content-container {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90%;\n  height: 218px;\n  background-color: #fff;\n  border-radius: tokens.$ifxBorderRadiusNone;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  box-sizing: border-box;\n  font-family: tokens.$ifxFontFamilyBody;\n\n}\n\n/* Add desktop size here */\n@media screen and (min-width: 768px) {\n  .modal-content-container {\n    width: 540px;\n    height: 220px;\n  }\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n\n.modal-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  background-color: tokens.$ifxColorOcean500;\n  height: 100%;\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  & ifx-icon {\n    color: tokens.$ifxColorBaseWhite;\n  }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px;\n  height: 76px;\n  box-sizing: border-box;\n  border-radius: 1px 1px 0px 0px;\n  border-bottom: 1px solid tokens.$ifxColorEngineering200;\n\n}\n\n.modal-header h2 {\n  margin: 0;\n  font-weight: tokens.$ifxFontWeightSemibold;\n  font-size: tokens.$ifxFontSizeXl;\n  line-height: 28px;\n}\n\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding: 0;\n  cursor: pointer;\n}\n\n.modal-body {\n  padding: 16px 24px;\n  height: 56px;\n  box-sizing: border-box;\n  flex: 1;\n\n  & slot[name=content] { \n    display: -webkit-box;\n    -webkit-line-clamp: 1;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n}\n\n.modal-footer {\n  display: flex;\n  //justify-content: flex-end;\n  align-items: center;\n  padding-top: 16px;\n  padding-bottom: 32px;\n  padding-right: 24px;\n  gap: 1em;\n  height: 88px;\n  box-sizing: border-box;\n\n  margin-left: auto;\n}\n\n.modal-footer ::slotted(*) {\n  display: flex;\n  //justify-content: space-between;\n  gap: 24px;\n}\n\n\n.modal-border {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5em;\n  flex-grow: 1;\n\n  &.primary {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.secondary {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.success {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.warning {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.orange {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.ocean {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.grey {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.grey-200 {\n    background-color: tokens.$ifxColorEngineering200;\n  }\n\n  &.red {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.green {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.berry {\n    background-color: tokens.$ifxColorBerry500;\n  }\n}"],"names":["IfxModal","_callee","_regeneratorRuntime","wrap","_context","prev","next","this","showModal","modalOpen","emit","stop","_open","apply","arguments","key","value","_close","_asyncToGenerator","mark","_callee2","_context2","modalClose","handleCloseButtonClick","closeButtonClick","closeOnOverlayClick","close","_this","isAlertVariant","variant","h","class","concat","onClick","handleOverlayClick","alertIcon","icon","caption","name","okButtonLabel","cancelButtonLabel"],"sourceRoot":""}