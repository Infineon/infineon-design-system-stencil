{"version":3,"file":"static/js/4867.122d18f4.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow"],"sourcesContent":["//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Watch, Event, EventEmitter, Method } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\n\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n  // @Prop() tabs: string[] = [];\n  @Prop() tabs: { header: string, disabled?: boolean }[] = [];\n  @Prop() orientation: string = \"\"\n  @State() internalOrientation: string;\n  @Prop() activeTabIndex: number = 0;\n  @State() internalPrevActiveTabIndex: number = 0;\n  @State() internalActiveTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() tabTitles: string[] = [];\n  @State() disabledTabs: string[] = [];\n  @State() tabObjects: any[] = [];\n  @Event() ifxTabIndex: EventEmitter;\n\n\n  @Watch('activeTabIndex')\n  onActiveTabIndexChange(newIndex: number, oldIndex: number) {\n    // console.log(`watching activeTabIndex - change from ${oldIndex} to ${newIndex}`);\n    this.internalPrevActiveTabIndex = oldIndex;\n    this.internalActiveTabIndex = newIndex;\n    this.activeTabIndex = this.internalActiveTabIndex;\n  }\n\n\n  // changing tab\n  @Method()\n  async setActiveTab(index: number) {\n    const prevActiveTab = this.activeTabIndex;\n    const nextActiveTab = index;\n\n    if (this.tabObjects[nextActiveTab]?.disabled) {\n      // console.log(\"current tab is disabled, stay on previous tab: \", prevActiveTab);\n\n      // Reset to previously active tab\n      if (!this.tabObjects[prevActiveTab]?.disabled) {\n        this.internalActiveTabIndex = prevActiveTab;\n        this.activeTabIndex = prevActiveTab;\n        return;\n      }\n    }\n\n    if (nextActiveTab < 0 || nextActiveTab >= this.tabHeaderRefs.length) {\n      return;\n    } else {\n      this.ifxTabIndex.emit({ previousTab: prevActiveTab, currentTab: nextActiveTab });\n      this.internalActiveTabIndex = nextActiveTab;\n      this.activeTabIndex = nextActiveTab;\n    }\n  }\n  // Helper method to emit events\n  emitEvent(element: HTMLElement, eventName: string) {\n    const event = new CustomEvent(eventName, {\n      bubbles: true,\n      composed: true,\n    });\n    element.dispatchEvent(event);\n  }\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.internalActiveTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n  // @Watch('orientation') //not firing\n  // onOrientationChange() {\n  //   this.reRenderBorder()\n  // }\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    // console.log(\"slot change \")\n    this.tabObjects = Array.from(tabs).map((tab) => {\n      return {\n        header: tab?.header === null ? tab?.getAttribute('header') !== null : tab.header,\n        disabled: tab?.disabled === true // (tab.getAttribute('disabled') === 'true')\n      }\n    });\n\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentWillLoad() {\n    this.setDefaultOrientation()\n    this.onSlotChange();\n  }\n\n  componentDidLoad() {\n    this.reRenderBorder()\n  }\n\n  componentDidUpdate() {\n    this.reRenderBorder()\n  }\n\n  render() {\n    return (\n      <div aria-label=\"navigation tabs\" class={`tabs ${this.internalOrientation}`}>\n        <ul class=\"tabs-list\">\n          {this.tabObjects?.map((tab, index) => (\n            <li\n              class={`tab-item ${index === this.internalActiveTabIndex && !tab.disabled ? 'active' : ''} ${tab.disabled ? 'disabled' : ''}`}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n              onClick={() => this.setActiveTab(index)}\n            >\n              {tab?.header}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabObjects).map((_, index) => (\n            <div style={{ display: index === this.internalActiveTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}","//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.tabs {\n  display: flex;\n  font-family: tokens.$ifxFontFamilyBody;\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$ifxFontWeightSemibold;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tabs.vertical .tab-content {\n  padding-top: 0px;\n  padding-left: 32px;\n}\n\n\n.tab-item.active {\n  color: tokens.$ifxColorOcean500;\n}\n\n.tab-item.disabled {\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n  color: tokens.$ifxColorEngineering300;\n  pointer-events: none;\n}\n\n.tab-item:not(:disabled, .disabled) {\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    color: tokens.$ifxColorOcean500;\n  }\n}\n\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n\n.tab-content {\n  padding-top: 24px;\n  padding-left: 0px;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: tokens.$ifxFontSizeS;\n}"],"names":["IfxTabs","newIndex","oldIndex","this","internalPrevActiveTabIndex","internalActiveTabIndex","activeTabIndex","_callee","index","_a","_b","prevActiveTab","nextActiveTab","_regeneratorRuntime","wrap","_context","prev","next","tabObjects","disabled","abrupt","tabHeaderRefs","length","ifxTabIndex","emit","previousTab","currentTab","stop","_x","_setActiveTab","apply","arguments","element","eventName","event","CustomEvent","bubbles","composed","dispatchEvent","borderElement","el","shadowRoot","querySelector","orientation","style","left","concat","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","tabs","querySelectorAll","Array","from","map","tab","header","getAttribute","tabRefs","forEach","setAttribute","key","value","lowercaseOrientation","toLowerCase","includes","internalOrientation","setDefaultOrientation","onSlotChange","reRenderBorder","_this","h","class","ref","onClick","setActiveTab","_","display","name","get"],"sourceRoot":""}