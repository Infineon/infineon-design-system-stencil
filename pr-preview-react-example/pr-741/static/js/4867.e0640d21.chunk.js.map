{"version":3,"file":"static/js/4867.e0640d21.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx"],"sourcesContent":["//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: flex;\n}\n\n.tabs {\n  display: flex;\n  font-family: tokens.$ifxFontFamilyBody;\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$ifxFontWeightSemibold;\n}\n\n.tabs-list:focus-within .active-border {\n  display: none;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tabs.vertical .tab-content {\n  padding-top: 0px;\n  padding-left: 32px;\n}\n\n.tab-item {\n  // Reduced padding values\n  padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\n  cursor: pointer;\n  position: relative;\n\n  &:hover {\n    color: tokens.$ifxColorOcean500;\n  }\n\n  &:active,\n  &.active {\n    color: tokens.$ifxColorOcean500;\n  }\n\n  &:focus,\n  &.focus {\n    outline: none;\n    border-radius: 1px;\n    box-shadow: 0 0 0 2px tokens.$ifxColorBaseWhite, 0 0 0 4px tokens.$ifxColorOcean500;\n\n    // Assuming .active-border is a sibling of .tab-item\n    +.active-border {\n      display: none; // Hide the active border when the tab is in focus\n    }\n  }\n\n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n    pointer-events: none;\n  }\n}\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$ifxColorOcean500;\n}\n\n\n.tab-content {\n  padding-top: 24px;\n  padding-left: 0px;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: tokens.$ifxFontSizeS;\n}","//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Watch, Event, EventEmitter, Method } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\n\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n  @Prop() tabs: { header: string, disabled?: boolean }[] = [];\n  @Prop() orientation: string = \"\"\n  @State() internalOrientation: string;\n  @Prop() activeTabIndex: number = 0;\n  @State() internalPrevActiveTabIndex: number = 0;\n  @State() internalActiveTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() tabTitles: string[] = [];\n  @State() disabledTabs: string[] = [];\n  @State() tabObjects: any[] = [];\n  @Event() ifxTabChange: EventEmitter;\n\n\n  @Watch('activeTabIndex')\n  onActiveTabIndexChange(newIndex: number, oldIndex: number) {\n    this.internalPrevActiveTabIndex = oldIndex;\n    this.internalActiveTabIndex = newIndex;\n  }\n\n\n  // changing tab\n  @Method()\n  async setActiveTab(index: number) {\n    const prevActiveTab = this.internalActiveTabIndex;\n    this.internalActiveTabIndex = index;\n\n    if (this.tabObjects[this.internalActiveTabIndex]?.disabled) {\n\n      // Reset to previously active tab\n      if (!this.tabObjects[prevActiveTab]?.disabled) {\n        this.internalActiveTabIndex = prevActiveTab;\n        this.activeTabIndex = prevActiveTab;\n        return;\n      }\n    }\n\n    if (this.internalActiveTabIndex < 0 || this.internalActiveTabIndex >= this.tabHeaderRefs.length) {\n      return;\n    } else {\n      this.ifxTabChange.emit({ previousTab: prevActiveTab, currentTab: this.internalActiveTabIndex });\n      this.internalActiveTabIndex = this.internalActiveTabIndex;\n    }\n  }\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.internalActiveTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.internalActiveTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    this.tabObjects = Array.from(tabs).map((tab) => {\n      return {\n        header: tab?.header === null ? tab?.getAttribute('header') !== null : tab.header,\n        disabled: tab?.disabled === true // (tab.getAttribute('disabled') === 'true')\n      }\n    });\n\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentWillLoad() {\n    this.setDefaultOrientation()\n    this.onSlotChange();\n  }\n\n  componentDidLoad() {\n    this.reRenderBorder()\n    this.addEventListenersToHandleCustomFocusAndActiveState();\n    this.updateTabFocusability();\n  }\n\n  componentDidUpdate() {\n    this.reRenderBorder();\n    this.updateTabFocusability();\n  }\n\n  private updateTabFocusability() {\n    this.tabHeaderRefs.forEach((tab, index) => {\n      tab.tabIndex = index === this.internalActiveTabIndex ? 0 : -1;\n    })\n  }\n\n  private addEventListenersToHandleCustomFocusAndActiveState() {\n    const element = this.el.shadowRoot?.querySelector('.tabs-list') as HTMLElement;\n    if (!element) {\n      console.error('Tabs list not found');\n      return;\n    }\n\n\n    element.addEventListener('keydown', (event: KeyboardEvent) => {\n      const key = event.key;\n      switch (key) {\n        case 'ArrowLeft':\n          this.focusPreviousTab();\n          break;\n        case 'ArrowRight':\n          this.focusNextTab();\n          break;\n        case 'Tab':\n          this.handleTabKeyPress(event);\n          break;\n        case 'Home':\n          event.preventDefault();\n          this.setActiveTab(0);\n          const firstTab = this.tabHeaderRefs[0];\n          firstTab.focus();\n          break;\n        case 'End':\n          event.preventDefault();\n          this.setActiveTab(this.tabHeaderRefs.length - 1);\n          const lastTab = this.tabHeaderRefs[this.tabHeaderRefs.length - 1];\n          lastTab.focus();\n          break;\n        default:\n          break;\n      }\n\n    });\n\n  }\n\n  private focusNextTab() {\n    let nextIndex = this.internalActiveTabIndex + 1;\n    while (nextIndex < this.tabHeaderRefs.length && this.tabObjects[nextIndex].disabled) {\n      nextIndex++;\n    }\n    if (nextIndex < this.tabHeaderRefs.length) {\n      this.setActiveTab(nextIndex);\n      this.tabHeaderRefs[nextIndex].focus();\n    }\n  }\n\n  private focusPreviousTab() {\n    let prevIndex = this.internalActiveTabIndex - 1;\n    while (prevIndex >= 0 && this.tabObjects[prevIndex].disabled) {\n      prevIndex--;\n    }\n    if (prevIndex >= 0) {\n      this.setActiveTab(prevIndex);\n      this.tabHeaderRefs[prevIndex].focus();\n    }\n  }\n\n  private handleTabKeyPress(event: KeyboardEvent) {\n    if (!event.shiftKey) {\n      event.preventDefault() //prevent default tabbing behavior\n      const activeContent = this.el.shadowRoot?.querySelector(`.tab-content > div:nth-child(${this.internalActiveTabIndex + 1})`) as HTMLElement;\n      if (activeContent) {\n        activeContent.setAttribute('tabIndex', '0'); //ensure tab content ia focusable\n        activeContent.focus(); //focus on the content of the active tab\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div aria-label=\"navigation tabs\" class={`tabs ${this.internalOrientation}`}>\n        <ul class=\"tabs-list\">\n          {this.tabObjects?.map((tab, index) => (\n            <li\n              class={`tab-item ${index === this.internalActiveTabIndex && !tab.disabled ? 'active' : ''} ${tab.disabled ? 'disabled' : ''}`}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n\n              onClick={() => this.setActiveTab(index)}\n              onKeyUp={event => {\n                if (event.key === 'Enter') {\n                  this.setActiveTab(index);\n                }\n              }}\n              tabindex=\"0\"\n              aria-selected={index === this.internalActiveTabIndex ? 'true' : 'false'}\n              aria-disabled={tab.disabled ? 'true' : 'false'}\n              role=\"tab\"\n            >\n              {tab?.header}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabObjects).map((_, index) => (\n            <div style={{ display: index === this.internalActiveTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n}"],"names":["IfxTabs","onActiveTabIndexChange","newIndex","oldIndex","this","internalPrevActiveTabIndex","internalActiveTabIndex","setActiveTab","index","prevActiveTab","_a","tabObjects","disabled","_b","activeTabIndex","tabHeaderRefs","length","ifxTabChange","emit","previousTab","currentTab","reRenderBorder","borderElement","el","shadowRoot","querySelector","orientation","style","left","concat","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","onSlotChange","tabs","querySelectorAll","Array","from","map","tab","header","getAttribute","tabRefs","forEach","setAttribute","setDefaultOrientation","lowercaseOrientation","toLowerCase","includes","internalOrientation","componentWillLoad","componentDidLoad","addEventListenersToHandleCustomFocusAndActiveState","updateTabFocusability","componentDidUpdate","tabIndex","element","addEventListener","event","key","focusPreviousTab","focusNextTab","handleTabKeyPress","preventDefault","focus","console","error","nextIndex","prevIndex","shiftKey","activeContent","render","h","class","ref","onClick","onKeyUp","tabindex","role","_","display","name"],"sourceRoot":""}