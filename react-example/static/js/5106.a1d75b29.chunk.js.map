{"version":3,"file":"static/js/5106.a1d75b29.chunk.js","mappings":"gNAOaA,EAAS,W,+JAcpB,KAAAC,kBAAoB,WAClBC,EAAKC,eAAiBD,EAAKC,cAC3BD,EAAKE,mBAAmBC,KAAKH,EAAKC,c,EAgBpC,KAAAG,YAAc,WACZJ,EAAKC,eAAgB,C,eAhCG,E,eACE,E,2FAQ5B,WACEI,KAAKJ,cAAgBI,KAAKC,M,GAC3B,CAAAC,IAAA,kBAAAC,MAQD,WACEH,KAAKJ,cAAgBI,KAAKC,M,GAC3B,CAAAC,IAAA,oBAAAC,MAED,WACEH,KAAKI,iB,GACN,CAAAF,IAAA,cAAAC,MAED,SAAYE,GACVL,KAAKG,MAAQE,EAAMC,M,GACpB,CAAAJ,IAAA,SAAAC,MAOD,WACE,OACEI,EAAAA,EAAAA,GAAA,OAAKC,MAAK,cAAAC,OAAgBT,KAAKJ,cAAgB,OAAS,WACrDI,KAAKJ,eACJW,EAAAA,EAAAA,GAAA,OAAKC,MAAM,uBACTD,EAAAA,EAAAA,GAAA,oBAAkBG,SAAUV,KAAKU,SAAUP,MAAOH,KAAKG,MAAOQ,WAAYX,KAAKY,YAAYC,KAAKb,QAC9FO,EAAAA,EAAAA,GAAA,YAAUO,KAAK,YAAYC,KAAK,kBAGlCR,EAAAA,EAAAA,GAAA,KAAGS,KAAK,qBAAqBC,QAASjB,KAAKN,mBAAiB,WAG9Da,EAAAA,EAAAA,GAAA,OAAKC,MAAM,2BAA2BS,QAASjB,KAAKN,oBAClDa,EAAAA,EAAAA,GAAA,YAAUO,KAAK,e,IAKxB,EAAAZ,IAAA,WAAAgB,IAAA,W,0CAvDmB,G,QCPD,+yB","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/search-bar/search-bar.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/search-bar/search-bar.scss?tag=ifx-search-bar&encapsulation=shadow"],"sourcesContent":["import { Component, h, Prop, Event, EventEmitter, State, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-search-bar',\n  styleUrl: 'search-bar.scss',\n  shadow: true,\n})\nexport class SearchBar {\n  @Prop() isOpen: boolean = true;\n  @Prop() disabled: boolean = false;\n  @State() internalState: boolean;\n  @Prop({ mutable: true }) value: string;\n  @Event() ifxInput: EventEmitter;\n  @Event() ifxSearchBarIsOpen: EventEmitter;\n\n\n  @Watch('isOpen')\n  handlePropChange() {\n    this.internalState = this.isOpen;\n  }\n\n  handleCloseButton = () => {\n    this.internalState = !this.internalState;\n    this.ifxSearchBarIsOpen.emit(this.internalState)\n  }\n\n\n  setInitialState() {\n    this.internalState = this.isOpen;\n  }\n\n  componentWillLoad() {\n    this.setInitialState();\n  }\n\n  handleInput(event: CustomEvent) {\n    this.value = event.detail;\n  }\n\n  handleFocus = () => {\n    this.internalState = true;\n  }\n\n\n  render() {\n    return (\n      <div class={`search-bar ${this.internalState ? 'open' : 'closed'}`}>\n        {this.internalState ? (\n          <div class=\"search-bar-wrapper\">\n            <ifx-search-field disabled={this.disabled} value={this.value} onIfxInput={this.handleInput.bind(this)}>\n              <ifx-icon icon=\"search-16\" slot=\"search-icon\"></ifx-icon>\n            </ifx-search-field>\n\n            <a href='javascript:void(0)' onClick={this.handleCloseButton}>Close</a>\n          </div>\n        ) : (\n          <div class=\"search-bar__icon-wrapper\" onClick={this.handleCloseButton}>\n            <ifx-icon icon=\"search-16\"></ifx-icon>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host { \n  width: 100%; //revert\n}\n\n.search-bar {\n  box-sizing: border-box;\n  height: tokens.$ifxSize500;\n  background-color: tokens.$ifxColorBaseWhite;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100%;\n\n  &.closed {\n    display: flex;\n    width: auto;\n    justify-content: flex-start;\n  }\n\n  & .search-bar-wrapper {\n    display: flex;\n    align-items: center;\n    gap: tokens.$ifxSpace200;\n    width: 100%;\n\n    & a {\n      text-decoration: none;\n      font-size: tokens.$ifxFontSizeM;\n      font-style: normal;\n      font-weight: tokens.$ifxFontWeightSemibold;\n      line-height: tokens.$ifxLineHeightM;\n      color: tokens.$ifxColorOcean500;\n      cursor: pointer;\n    }\n\n    & ifx-search-field {\n      width: 100%;\n    }\n  }\n\n  .search-bar__icon-wrapper {\n    display: none;\n    flex-direction: row;\n    align-items: center;\n\n    & ifx-icon:hover {\n      cursor: pointer;\n    }\n  }\n\n  &.closed {\n    .search-bar__icon-wrapper {\n      display: flex;\n    }\n\n    .search-bar-wrapper {\n      display: none;\n    }\n  }\n}"],"names":["SearchBar","handleCloseButton","_this","internalState","ifxSearchBarIsOpen","emit","handleFocus","this","isOpen","key","value","setInitialState","event","detail","h","class","concat","disabled","onIfxInput","handleInput","bind","icon","slot","href","onClick","get"],"sourceRoot":""}