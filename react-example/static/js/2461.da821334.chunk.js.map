{"version":3,"file":"static/js/2461.da821334.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/global/utils/focus-trap.ts","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/global/utils/animation.ts","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/modal/modal.scss?tag=ifx-modal&encapsulation=shadow"],"sourcesContent":["/**\n * Copy/pasted from https://github.com/andreasbm/focus-trap\n */\n\n/**\n * Traverses the slots of the open shadowroots and returns all children matching the query.\n * We need to traverse each child-depth one at a time because if an element should be skipped\n * (for example because it is hidden) we need to skip all of it's children. If we use querySelectorAll(\"*\")\n * the information of whether the children is within a hidden parent is lost.\n * @param {ShadowRoot | HTMLElement} root\n * @param skipNode\n * @param isMatch\n * @param {number} maxDepth\n * @param {number} depth\n * @returns {HTMLElement[]}\n */\nexport function queryShadowRoot(\n  root: ShadowRoot | HTMLElement,\n  skipNode: ($elem: HTMLElement) => boolean,\n  isMatch: ($elem: HTMLElement) => boolean,\n  maxDepth: number = 20,\n  depth: number = 0\n): HTMLElement[] {\n  const matches: HTMLElement[] = [];\n\n  // If the depth is above the max depth, abort the searching here.\n  if (depth >= maxDepth) {\n    return matches;\n  }\n\n  // Traverses a slot element\n  const traverseSlot = ($slot: HTMLSlotElement) => {\n    // Only check nodes that are of the type Node.ELEMENT_NODE\n    // Read more here https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n    const assignedNodes = $slot\n      .assignedNodes()\n      .filter((node) => node.nodeType === 1);\n    if (assignedNodes.length > 0) {\n      const $slotParent = assignedNodes[0].parentElement!;\n      return queryShadowRoot(\n        $slotParent,\n        skipNode,\n        isMatch,\n        maxDepth,\n        depth + 1\n      );\n    }\n\n    return [];\n  };\n\n  // Go through each child and continue the traversing if necessary\n  // Even though the typing says that children can't be undefined, Edge 15 sometimes gives an undefined value.\n  // Therefore we fallback to an empty array if it is undefined.\n  const children = Array.from(root.children || []) as HTMLElement[];\n  for (const $child of children) {\n    // Check if the element and its descendants should be skipped\n    if (skipNode($child)) {\n      // console.log('-- SKIP', $child);\n      continue;\n    }\n\n    // console.log('$child', $child);\n\n    // If the element matches we always add it\n    if (isMatch($child)) {\n      matches.push($child);\n    }\n\n    if ($child.shadowRoot != null) {\n      // If the element has a shadow root we need to traverse it\n      matches.push(\n        ...queryShadowRoot(\n          $child.shadowRoot,\n          skipNode,\n          isMatch,\n          maxDepth,\n          depth + 1\n        )\n      );\n    } else if ($child.tagName === 'SLOT') {\n      // If the child is a slot we need to traverse each assigned node\n      matches.push(...traverseSlot($child as HTMLSlotElement));\n    } else {\n      // Traverse the children of the element\n      matches.push(\n        ...queryShadowRoot($child, skipNode, isMatch, maxDepth, depth + 1)\n      );\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns whether the element is hidden.\n * @param $elem\n */\nexport function isHidden($elem: HTMLElement): boolean {\n  return (\n    $elem.hasAttribute('hidden') ||\n    ($elem.hasAttribute('aria-hidden') &&\n      $elem.getAttribute('aria-hidden') !== 'false') ||\n    // A quick and dirty way to check whether the element is hidden.\n    // For a more fine-grained check we could use \"window.getComputedStyle\" but we don't because of bad performance.\n    // If the element has visibility set to \"hidden\" or \"collapse\", display set to \"none\" or opacity set to \"0\" through CSS\n    // we won't be able to catch it here. We accept it due to the huge performance benefits.\n    $elem.style.display === `none` ||\n    $elem.style.opacity === `0` ||\n    $elem.style.visibility === `hidden` ||\n    $elem.style.visibility === `collapse`\n  );\n\n  // If offsetParent is null we can assume that the element is hidden\n  // https://stackoverflow.com/questions/306305/what-would-make-offsetparent-null\n  // || $elem.offsetParent == null;\n}\n\n/**\n * Returns whether the element is disabled.\n * @param $elem\n */\nexport function isDisabled($elem: HTMLElement): boolean {\n  return (\n    $elem.hasAttribute('disabled') ||\n    ($elem.hasAttribute('aria-disabled') &&\n      $elem.getAttribute('aria-disabled') !== 'false')\n  );\n}\n\n/**\n * Determines whether an element is focusable.\n * Read more here: https://stackoverflow.com/questions/1599660/which-html-elements-can-receive-focus/1600194#1600194\n * Or here: https://stackoverflow.com/questions/18261595/how-to-check-if-a-dom-element-is-focusable\n * @param $elem\n */\nexport function isFocusable($elem: HTMLElement): boolean {\n  // Discard elements that are removed from the tab order.\n  if (\n    $elem.getAttribute('tabindex') === '-1' ||\n    isHidden($elem) ||\n    isDisabled($elem)\n  ) {\n    return false;\n  }\n\n  return (\n    // At this point we know that the element can have focus (eg. won't be -1) if the tabindex attribute exists\n    $elem.hasAttribute('tabindex') ||\n    // Anchor tags or area tags with a href set\n    (($elem instanceof HTMLAnchorElement || $elem instanceof HTMLAreaElement) &&\n      $elem.hasAttribute('href')) ||\n    // Form elements which are not disabled\n    $elem instanceof HTMLButtonElement ||\n    $elem instanceof HTMLInputElement ||\n    $elem instanceof HTMLTextAreaElement ||\n    $elem instanceof HTMLSelectElement ||\n    // IFrames\n    $elem instanceof HTMLIFrameElement\n  );\n}","export function animationTo(\n  element: HTMLElement,\n  keyframes: Keyframe | Keyframe[],\n  options?: KeyframeAnimationOptions\n) {\n  const animated = element.animate(keyframes, { ...options, fill: 'both' });\n  animated.addEventListener('finish', () => {\n    // @ts-ignore\n    animated.commitStyles();\n    animated.cancel();\n  });\n\n  return animated;\n}\n\nconst keyframeDefaults = {\n  easing: 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n};\n\nexport const KEYFRAMES = {\n  fadeIn: [\n    {\n      offset: 0,\n      ...keyframeDefaults,\n      opacity: 0,\n    },\n    {\n      offset: 1,\n      ...keyframeDefaults,\n      opacity: 1,\n    },\n  ],\n  fadeOut: [\n    {\n      offset: 0,\n      ...keyframeDefaults,\n      opacity: 1,\n    },\n    {\n      offset: 1,\n      ...keyframeDefaults,\n      opacity: 0,\n    },\n  ],\n};","import { Component, Prop, Element, State, Event, Host, EventEmitter, h, Watch } from '@stencil/core';\nimport { queryShadowRoot, isHidden, isFocusable } from '../../global/utils/focus-trap';\nimport { animationTo, KEYFRAMES } from '../../global/utils/animation';\n \n\ntype CloseEventTrigger = 'CLOSE_BUTTON' | 'ESCAPE_KEY' | 'BACKDROP';\n\nexport interface BeforeCloseEventDetail {\n  trigger: CloseEventTrigger;\n}\n@Component({\n  tag: 'ifx-modal',\n  styleUrl: 'modal.scss',\n  shadow: true\n})\nexport class IfxModal {\n  @Prop({ reflect: true, mutable: true }) opened?: boolean = false;\n  @State() showModal: boolean = this.opened || false;\n\n  @Prop() caption: string = 'Modal Title';\n  @Prop() closeOnOverlayClick: boolean = true;\n\n  @Event() ifxModalOpen: EventEmitter;\n  @Event() ifxModalClose: EventEmitter;\n\n  @Prop() variant: 'default' | 'alert-brand' | 'alert-danger' = 'default';\n  \n  @Prop() size: 's' | 'm' | 'l' = 's';\n\n  @Prop() alertIcon: string = '';\n  @Prop() okButtonLabel: string = 'OK';\n  @Prop() cancelButtonLabel: string = 'Cancel';\n  @Element() hostElement: HTMLElement;\n\n  @State() slotButtonsPresent: boolean = false;\n\n  @Prop() showCloseButton: boolean = true;\n\n  private modalContainer: HTMLElement;\n  private focusableElements: HTMLElement[] = [];\n  private closeButton: HTMLButtonElement | HTMLIfxIconButtonElement;\n\n  componentDidLoad() {\n    // Query all focusable elements and store them in `focusableElements`.\n    // Needed for the \"focus trap\" functionality.\n    this.focusableElements = queryShadowRoot(\n      this.hostElement.shadowRoot,\n      (el) => isHidden(el) || el.matches('[data-focus-trap-edge]'),\n      isFocusable\n    );\n\n  }\n\n  getFirstFocusableElement(): HTMLElement | null {\n    return this.focusableElements[0];\n  }\n\n  getLastFocusableElement(): HTMLElement | null {\n    return this.focusableElements[this.focusableElements.length - 1];\n  }\n\n  handleTopFocus = () => {\n    this.attemptFocus(this.getLastFocusableElement());\n  };\n\n  handleBottomFocus = () => {\n    this.attemptFocus(this.getFirstFocusableElement());\n  };\n\n\n  attemptFocus(element: HTMLElement | null) {\n    if (element == null) {\n      setTimeout(() => { //wait until DOM is fully loaded\n        this.closeButton.focus();\n      },);\n      return;\n    }\n\n    setTimeout(() => { //wait until DOM is fully loaded\n      element.focus();\n    }, 0);\n  }\n\n\n  open() {\n    this.showModal = true;\n    try {\n      const anim = animationTo(this.modalContainer, KEYFRAMES.fadeIn, {\n        duration: 200,\n      });\n      anim.addEventListener('finish', () => {\n        // Setting focus on last item and removing immediately\n        // so, on tab press first element is focused\n        setTimeout(() => {\n          this.getLastFocusableElement()?.focus();\n          this.getLastFocusableElement()?.blur();\n        }, 0);\n\n        this.ifxModalOpen.emit();\n      });\n\n      this.hostElement.addEventListener('keydown', this.handleKeypress);\n    } catch (err) {\n      this.ifxModalOpen.emit();\n\n    }\n\n\n  }\n\n  close() {\n    try {\n      const anim = animationTo(this.modalContainer, KEYFRAMES.fadeOut, {\n        duration: 200,\n      });\n      anim.addEventListener('finish', () => {\n        this.showModal = false;\n        this.ifxModalClose.emit();\n      });\n      this.hostElement.removeEventListener('keydown', this.handleKeypress);\n    } catch (err) {\n      this.showModal = false;\n      this.ifxModalClose.emit();\n    }\n  }\n\n  handleKeypress = (event: KeyboardEvent) => {\n    if (!this.showModal) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      this.doBeforeClose('ESCAPE_KEY');\n    }\n  };\n\n\n  doBeforeClose(trigger: CloseEventTrigger) {\n    const triggers = [];\n    triggers.push(trigger);\n    const prevented = triggers.some((event) => event.defaultPrevented);\n    if (!prevented) {\n      this.opened = false;\n    }\n  }\n\n\n\n  @Watch('opened')\n  openedChanged(newValue) {\n    if (newValue === true) {\n      this.open();\n    } else {\n      this.close()\n    }\n  }\n\n\n  handleOverlayClick() {\n    if (this.closeOnOverlayClick) {\n      this.doBeforeClose('BACKDROP')\n    }\n  }\n\n\n  handleButtonsSlotChange(e) {\n    if(e.currentTarget.assignedElements()[0]?.childElementCount > 0) {\n      this.slotButtonsPresent = true;\n    }else{\n      this.slotButtonsPresent = false;\n    }\n  }\n\n\n  render() {\n    const isAlertVariant = this.variant !== 'default';\n    return (\n      <Host>\n        <div\n          ref={(el) => (this.modalContainer = el)}\n          class={`modal-container ${this.showModal ? 'open' : ''}`}\n        >\n          <div\n            class=\"modal-overlay\"\n            onClick={() => this.handleOverlayClick()}\n          ></div>\n          <div\n            data-focus-trap-edge\n            onFocus={this.handleTopFocus}\n            tabindex=\"0\"\n          ></div>\n          <div\n            class={`modal-content-container ${this.size}`}\n            role=\"dialog\"\n            aria-modal=\"true\"\n            aria-label={this.caption}>\n            {isAlertVariant ? (\n              <div class={`modal-icon-container ${this.variant === 'alert-brand' ? '' : 'danger'}`}>\n                {this.alertIcon ? <ifx-icon icon={this.alertIcon} /> : null}\n              </div>\n            ) : null}\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h2 class=\"modal-caption\">{this.caption}</h2>\n                { \n                  this.showCloseButton && \n                  <ifx-icon-button class = 'modal-close-button' ref={(el) => (this.closeButton = el)} icon=\"cross-24\" variant=\"tertiary\" onClick={() => this.doBeforeClose('CLOSE_BUTTON') }>\n                  </ifx-icon-button>\n                }\n              </div>\n              <div class=\"modal-body\">\n                <slot name=\"content\" /*onSlotchange={() => console.log('slots children modified')}*/ />\n              </div>\n              <div class={`modal-footer ${this.slotButtonsPresent ? 'buttons-present' : ''}`}>\n                <slot name=\"buttons\" onSlotchange={(e)=>this.handleButtonsSlotChange(e)}>\n                </slot>\n              </div>\n            </div>\n          </div>\n          <div\n            data-focus-trap-edge\n            onFocus={this.handleBottomFocus}\n            tabindex=\"0\"\n          ></div>\n        </div>\n      </Host>\n\n    );\n  }\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n:host {\n  display: block;\n}\n\n.modal-container {\n  display: none;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1060;\n  overflow-y: auto;\n  font-family: var(--ifx-font-family);\n\n}\n\n.modal-container.open {\n  display: flex;\n}\n\n.modal-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: tokens.$ifxColorBaseBlack;\n  opacity: 0.5;\n  z-index: 0;\n}\n\n.modal-content-container {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  width: 90%;\n  min-height: 218px;\n  background-color: #fff;\n  border-radius: tokens.$ifxBorderRadiusNone;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  overflow: hidden;\n  box-sizing: border-box;\n  align-items: stretch;\n}\n\n/* Add desktop size here */\n@media screen and (min-width: 768px) {\n  .modal-content-container {\n    width: 540px;\n    min-height: 132px;\n\n    &.m,\n    &.l,\n    &.s {\n      width: 90%;\n    }\n  }\n}\n\n@media screen and (min-width: 1024px) {\n  .modal-content-container {\n\n    &.s {\n      width: 47vw;\n    }\n\n    &.m {\n      width: 63vw;\n    }\n\n    &.l {\n      width: 80%;\n    }\n  }\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-height: 90vh;\n}\n\n.modal-icon-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  background-color: tokens.$ifxColorOcean500;\n  align-self: stretch;\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  & ifx-icon {\n    color: tokens.$ifxColorBaseWhite;\n  }\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 24px;\n  min-height: 76px;\n  max-height: 105px;\n  box-sizing: border-box;\n  border-radius: 1px 1px 0px 0px;\n  border-bottom: 1px solid tokens.$ifxColorEngineering200;\n}\n\n.modal-caption {\n  max-height: 56px;\n  display: -webkit-box;\n  overflow: hidden;\n  white-space: pre-wrap;\n  word-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical; \n}\n\n.modal-header h2 {\n  margin: 0;\n  font-weight: tokens.$ifxFontWeightSemibold;\n  font-size: tokens.$ifxFontSizeXl;\n  line-height: 28px;\n}\n\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 1.5em;\n  padding: 0;\n  cursor: pointer;\n}\n\n.modal-close-button {\n  align-self: flex-start;\n  margin-right: -8px;\n}\n\n.modal-body {\n  padding: 16px 24px;\n  min-height: 56px;\n  box-sizing: border-box;\n  flex: 1;\n  overflow-y: auto;\n}\n\n.modal-footer.buttons-present ::slotted(*){\n  display: flex;\n  justify-content: flex-end;\n  gap: 16px;\n  padding: 16px 24px 32px 16px\n}\n\n.modal-border {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  font-size: 1.5em;\n  flex-grow: 1;\n\n  &.primary {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.secondary {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.danger {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.success {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.warning {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.orange {\n    background-color: tokens.$ifxColorOrange500;\n  }\n\n  &.ocean {\n    background-color: tokens.$ifxColorOcean500;\n  }\n\n  &.grey {\n    background-color: tokens.$ifxColorEngineering500;\n  }\n\n  &.grey-200 {\n    background-color: tokens.$ifxColorEngineering200;\n  }\n\n  &.red {\n    background-color: tokens.$ifxColorRed500;\n  }\n\n  &.green {\n    background-color: tokens.$ifxColorGreen500;\n  }\n\n  &.berry {\n    background-color: tokens.$ifxColorBerry500;\n  }\n}"],"names":["queryShadowRoot","root","skipNode","isMatch","maxDepth","arguments","length","undefined","depth","matches","traverseSlot","$slot","assignedNodes","filter","node","nodeType","parentElement","children","Array","from","$child","push","shadowRoot","tagName","isHidden","$elem","hasAttribute","getAttribute","style","display","opacity","visibility","isFocusable","isDisabled","HTMLAnchorElement","HTMLAreaElement","HTMLButtonElement","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","HTMLIFrameElement","animationTo","element","keyframes","options","animated","animate","Object","assign","fill","addEventListener","commitStyles","cancel","keyframeDefaults","easing","KEYFRAMES","fadeIn","offset","fadeOut","IfxModal","focusableElements","handleTopFocus","this","attemptFocus","getLastFocusableElement","handleBottomFocus","getFirstFocusableElement","handleKeypress","event","showModal","key","doBeforeClose","opened","componentDidLoad","hostElement","el","setTimeout","focus","closeButton","open","modalContainer","duration","_a","_b","blur","ifxModalOpen","emit","err","close","ifxModalClose","removeEventListener","trigger","triggers","some","defaultPrevented","openedChanged","newValue","handleOverlayClick","closeOnOverlayClick","handleButtonsSlotChange","e","currentTarget","assignedElements","childElementCount","slotButtonsPresent","render","isAlertVariant","variant","h","Host","ref","class","onClick","onFocus","tabindex","size","role","caption","alertIcon","icon","showCloseButton","name","onSlotchange"],"sourceRoot":""}