{"version":3,"file":"static/js/4867.89905a90.chunk.js","mappings":"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","sources":["../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.tsx","../node_modules/@infineon/infineon-design-system-stencil/dist/esm/src/components/tabs/tabs.scss?tag=ifx-tabs&encapsulation=shadow"],"sourcesContent":["//ifxTabs.tsx\nimport { Component, h, Prop, State, Element, Listen, Watch, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true\n})\n\nexport class IfxTabs {\n  @Element() el: HTMLElement;\n  @Prop() tabs: string[] = [];\n  @Prop() orientation: string = \"\"\n  @State() internalOrientation: string;\n  @Prop() small: boolean = false;\n  @State() activeTabIndex: number = 0;\n  @State() tabRefs: HTMLElement[] = [];\n  @State() tabHeaderRefs: HTMLElement[] = [];\n  @State() tabTitles: string[] = [];\n  @Event() ifxTabIndex: EventEmitter;\n\n  // changing tab\n  setActiveTab(index: number) {\n    if (index < 0 || index >= this.tabHeaderRefs.length) {\n      return;\n    } else {\n      const currentActiveTab = this.tabRefs[this.activeTabIndex] as HTMLIfxTabElement;\n      if (currentActiveTab) {\n        this.emitEvent(currentActiveTab, 'tabBecameInactive');\n      }\n\n\n      this.ifxTabIndex.emit({ previousTab: this.activeTabIndex, currentTab: index });\n      this.activeTabIndex = index;\n\n      const newActiveTab = this.tabRefs[index] as HTMLIfxTabElement;\n      if (newActiveTab) {\n        this.emitEvent(newActiveTab, 'tabBecameActive');\n      }\n    }\n  }\n  // Helper method to emit events\n  emitEvent(element: HTMLElement, eventName: string) {\n    const event = new CustomEvent(eventName, {\n      bubbles: true,\n      composed: true,\n    });\n    element.dispatchEvent(event);\n  }\n\n  // needed for smooth border transition\n  reRenderBorder() {\n    const borderElement = this.el.shadowRoot.querySelector('.active-border') as HTMLElement;\n    if (borderElement && this.tabHeaderRefs[this.activeTabIndex]) {\n      if (this.orientation === 'horizontal') {\n\n        borderElement.style.left = `${this.tabHeaderRefs[this.activeTabIndex].offsetLeft}px`;\n        borderElement.style.width = `${this.tabHeaderRefs[this.activeTabIndex].offsetWidth}px`;\n        borderElement.style.top = '';\n        borderElement.style.height = '';\n      } else {\n        borderElement.style.top = `${this.tabHeaderRefs[this.activeTabIndex].offsetTop}px`;\n        borderElement.style.height = `${this.tabHeaderRefs[this.activeTabIndex].offsetHeight}px`;\n        borderElement.style.left = '';\n        borderElement.style.width = '';\n      }\n    }\n  }\n\n  @Watch('orientation')\n  onOrientationChange() {\n    this.reRenderBorder()\n  }\n\n  // when a slot is removed / added\n  @Listen('slotchange')\n  onSlotChange() {\n    const tabs = this.el.querySelectorAll('ifx-tab');\n    this.tabTitles = Array.from(tabs).map((tab) => tab.getAttribute('header'));\n    this.tabRefs = Array.from(tabs);\n    this.tabRefs.forEach((tab, index) => {\n      tab.setAttribute('slot', `tab-${index}`);\n    });\n  }\n\n  setDefaultOrientation() {\n    const validOrientations = ['horizontal', 'vertical'];\n    const lowercaseOrientation = this.orientation.toLowerCase();\n\n    if (!validOrientations.includes(lowercaseOrientation)) {\n      this.internalOrientation = 'horizontal';\n    } else this.internalOrientation = this.orientation;\n  }\n\n  componentWillLoad() {\n    this.setDefaultOrientation()\n    this.onSlotChange();\n  }\n\n  componentDidLoad() {\n    this.reRenderBorder()\n  }\n\n  componentDidUpdate() {\n    this.reRenderBorder()\n  }\n\n  render() {\n    return (\n      <div class={`tabs ${this.internalOrientation} ${this.small ? 'small' : ''}`}>\n        <ul class=\"tabs-list\">\n          {this.tabTitles.map((tabTitle, index) => (\n            <li\n              class={`tab-item ${index === this.activeTabIndex ? 'active' : ''}`}\n              ref={(el) => (this.tabHeaderRefs[index] = el)}\n              onClick={() => this.setActiveTab(index)}\n            >\n              {tabTitle}\n            </li>\n          ))}\n          <div class=\"active-border\"></div>\n        </ul>\n        <div class=\"tab-content\">\n          {Array.from(this.tabTitles).map((_, index) => (\n            <div style={{ display: index === this.activeTabIndex ? 'block' : 'none' }}>\n              <slot name={`tab-${index}`} />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}","//ifxTabs.scss\n@use \"~@infineon/design-system-tokens/dist/tokens\";\n\n// :host {\n//   display: block;\n// }\n\n.tabs {\n  display: flex;\n}\n\n.tabs.horizontal {\n  flex-direction: column;\n}\n\n.tabs.vertical {\n  flex-direction: row;\n}\n\n.tabs-list {\n  display: flex;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  position: relative;\n  font-weight: tokens.$font-weight-semi-bold;\n}\n\n.active-border {\n  content: \"\";\n  position: absolute;\n  transition: left 0.3s ease-in-out, width 0.3s ease-in-out, top 0.3s ease-in-out, height 0.3s ease-in-out;\n}\n\n.tabs.horizontal .active-border {\n  bottom: 0;\n  left: 0;\n  height: 2px;\n  background-color: tokens.$color-default-500;\n}\n\n.tabs.vertical .tabs-list {\n  flex-direction: column;\n  border-bottom: none;\n}\n\n.tab-item.active {\n  color: tokens.$color-default-500;\n}\n\n.tab-item {\n  padding: 0.5rem 1rem ;\n  cursor: pointer;\n  position: relative;\n}\n\n.tabs.vertical .tab-item {\n  border-right: 2px solid transparent;\n  min-width: 7em;\n}\n\n.tabs.vertical .active-border {\n  left: 0;\n  top: 0;\n  width: 2px;\n  background-color: tokens.$color-default-500;\n}\n\n\n.tab-content {\n  padding: 1rem;\n  flex-grow: 1;\n}\n\n.tabs.small .tab-item {\n  font-size: 14px; // Add the font-size rule directly here\n}"],"names":["IfxTabs","index","this","tabHeaderRefs","length","currentActiveTab","tabRefs","activeTabIndex","emitEvent","ifxTabIndex","emit","previousTab","currentTab","newActiveTab","element","eventName","event","CustomEvent","bubbles","composed","dispatchEvent","borderElement","el","shadowRoot","querySelector","orientation","style","left","concat","offsetLeft","width","offsetWidth","top","height","offsetTop","offsetHeight","key","value","reRenderBorder","tabs","querySelectorAll","tabTitles","Array","from","map","tab","getAttribute","forEach","setAttribute","lowercaseOrientation","toLowerCase","includes","internalOrientation","setDefaultOrientation","onSlotChange","_this","h","class","small","tabTitle","ref","onClick","setActiveTab","_","display","name","get"],"sourceRoot":""}