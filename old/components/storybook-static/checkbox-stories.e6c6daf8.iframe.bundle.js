"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2184],{"./src/components/checkbox/checkbox.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.js");exports.default={title:"Components/Checkbox",tags:["autodocs"],args:{label:"Text",error:!1,disabled:!1,checked:!1,size:"s",indeterminate:!1,name:"checkbox"},argTypes:{label:{name:"Label of Checkbox",description:"Set the label displayed next to *<ifx-checkbox>*.",table:{category:"story controls"}},error:{description:"Toggles the error state for the checkbox.",control:"boolean",table:{category:"ifx-checkbox props",defaultValue:{summary:!1}}},disabled:{description:"Disables the checkbox when set to true.",control:"boolean",table:{category:"ifx-checkbox props",defaultValue:{summary:!1}}},checked:{description:"Controls whether the checkbox is checked.",control:"boolean",table:{category:"ifx-checkbox props",defaultValue:{summary:!1}}},indeterminate:{description:"Activates the indeterminate state for the checkbox when set to true.",control:"boolean",table:{category:"ifx-checkbox props",defaultValue:{summary:!1}}},size:{description:"Sets the size of the checkbox. Options: s (21px) and m (25px).",control:"radio",options:["s","m"],table:{category:"ifx-checkbox props",defaultValue:{summary:"s"},type:{summary:"s | m"}}},name:{description:"Name of the element, that is used as reference when a form is submitted.",table:{category:"ifx-checkbox props"}},ifxChange:{action:"ifxChange",description:"Custom event that is triggered when the checkbox is clicked.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxChange={handleChange}\nVue:@ifxChange="handleChange"\nAngular:(ifxChange)="handleChange()"\nVanillaJs:.addEventListener("ifxChange", (event) => {//handle change});'}}},ifxError:{action:"ifxError",description:"Custom event emitted when an checkbox has an error.",table:{type:{summary:"Framework integration",detail:'React: onIfxError={handleError}\nVue:@ifxError="handleError"\nAngular:(ifxError)="handleError()"\nVanillaJs:.addEventListener("ifxError", (event) => {//handle error});'}}}}};exports.Default=(({error,disabled,checked,indeterminate,size,label,name})=>{const checkbox=document.createElement("ifx-checkbox");return checkbox.setAttribute("error",error),checkbox.setAttribute("disabled",disabled),checkbox.setAttribute("checked",checked),checkbox.setAttribute("size",size),checkbox.setAttribute("indeterminate",indeterminate),checkbox.setAttribute("name",name),checkbox.addEventListener("ifxChange",(0,_addonActions.action)("ifxChange")),checkbox.addEventListener("ifxError",(0,_addonActions.action)("ifxError")),checkbox.innerHTML=`${label}`,checkbox}).bind({});module.exports.__namedExportsOrder=["Default"]}}]);