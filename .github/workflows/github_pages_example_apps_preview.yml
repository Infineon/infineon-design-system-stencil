# Deploys each PR under its own subfolder
name: Deploy PR previews for example applications

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - closed
    paths:
      - 'examples/**'
      
concurrency: preview-${{ github.ref }}

jobs:
  deploy-preview-vue:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.preview.outputs.deployment-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache dependencies for packages/components
        uses: actions/cache@v2
        with:
          path: packages/components/node_modules
          key: ${{ runner.os }}-npm-packages-components-${{ hashFiles('packages/components/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-packages-components-

      - name: Install rsync ðŸ“š # additional package needed to run github action locally in a docker container
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y rsync

      - name: Install and Build
        run: |
          cd examples/stencil-components/vue3-vite
          npm i && npm run build
      - name: Deploy preview
        id: preview       
        uses: rossjrw/pr-preview-action@v1
        with:
          source-dir: ./examples/stencil-components/vue3-vite/dist
          umbrella-dir: pr-preview-vue-example
          token: ${{ secrets.GH_TOKEN }}


  deploy-preview-react:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.preview.outputs.deployment-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache dependencies for packages/components
        uses: actions/cache@v2
        with:
          path: packages/components/node_modules
          key: ${{ runner.os }}-npm-packages-components-${{ hashFiles('packages/components/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-packages-components-

      - name: Install rsync ðŸ“š # additional package needed to run github action locally in a docker container
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y rsync

      - name: Install and Build
        run: |
          cd examples/stencil-components/react
          npm i && npm run build
      - name: Deploy preview
        uses: rossjrw/pr-preview-action@v1
        id: preview
        with:
          source-dir: ./examples/stencil-components/react/build
          umbrella-dir: pr-preview-react-example
          token: ${{ secrets.GH_TOKEN }}


  deploy-preview-angular:
    outputs:
      deployment-url: ${{ steps.preview.outputs.deployment-url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache dependencies for packages/components
        uses: actions/cache@v2
        with:
          path: packages/components/node_modules
          key: ${{ runner.os }}-npm-packages-components-${{ hashFiles('packages/components/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-packages-components-

      - name: Install rsync ðŸ“š # additional package needed to run github action locally in a docker container
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y rsync

      - name: Install and Build
        run: |
          cd examples/stencil-components/angular
          npm i && npm run build
          
      - name: Deploy preview
        uses: rossjrw/pr-preview-action@v1
        id: preview
        with:
          source-dir: ./examples/stencil-components/angular/dist
          umbrella-dir: pr-preview-angular-example
          token: ${{ secrets.GH_TOKEN }}


  deploy-preview-vanilla:
    runs-on: ubuntu-latest
    outputs:
      deployment-url: ${{ steps.preview.outputs.deployment-url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Cache dependencies for packages/components
        uses: actions/cache@v2
        with:
          path: packages/components/node_modules
          key: ${{ runner.os }}-npm-packages-components-${{ hashFiles('packages/components/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-packages-components-

      - name: Install rsync ðŸ“š # additional package needed to run github action locally in a docker container
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y rsync
 
      - name: Update CDN Link in Vanilla example app & build
        run: | 
          cd examples/stencil-components/vanilla-cdn
          npm install
          npm run update-link
          npm run build
          
      - name: Deploy preview
        uses: rossjrw/pr-preview-action@v1
        id: preview
        with:
          source-dir: ./examples/stencil-components/vanilla-cdn/dist
          umbrella-dir: pr-preview-vanilla-example
          token: ${{ secrets.GH_TOKEN }}

  update-pr-comment: 
    needs: [deploy-preview-vue, deploy-preview-react, deploy-preview-angular, deploy-preview-vanilla]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Update comment in PR
        uses: actions/github-script@v4
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const vueUrl = "${{ needs.deploy-preview-vue.outputs.deployment-url }}";
            const reactUrl = "${{ needs.deploy-preview-react.outputs.deployment-url }}";
            const angularUrl = "${{ needs.deploy-preview-angular.outputs.deployment-url }}";
            const vanillaUrl = "${{ needs.deploy-preview-vanilla.outputs.deployment-url }}";
            const newText = `PR Preview URLs:\n- Vue example: ${vueUrl}\n- React example: ${reactUrl}\n- Angular example: ${angularUrl}\n- Vanilla example: ${vanillaUrl}`;

            const {data: comments} = await github.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });
            const autoComment = comments.find(c => c.user.login === 'github-actions[bot]');
            if (autoComment) {
              const existingText = autoComment.body;
              if (!existingText.includes(newText)) {
                await github.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: autoComment.id,
                  body: `${existingText}\n${newText}`
                });
              } 
            } else {
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: newText
              });
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}