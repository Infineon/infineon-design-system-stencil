name: Deploy Stencil Web components Library to NPM

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize # canary on new commit
  push:
 
jobs:
  version:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.author.name, 'bot')"
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - run: |
          echo "last commit by: ${{ github.event.head_commit.author.name }}"
          echo "current branch: ${{github.head_ref}}"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          if [[ ${{ github.head_ref }} == "master" ]]; then
            npm version major --force
          else 
            npm version prerelease --preid=canary --force
          fi
          git push origin HEAD:${{ github.head_ref }}

  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.author.name, 'bot') && !contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')" # job will not run, if triggered via ship-it
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # fetch all tags for ship-it
      - name: download + setup auto
        uses: auto-it/setup-auto@v1

      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"

      - name: Create Release # releasing as a github npm package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        
        run: | # update the package version, install, update the CDN link in the VanillJs example application, build and create a realese  
          npm install
          cd examples/vanilla-cdn 
          npm run update-link
          cd ../..
          npm run build:stencil
          npm publish --tag canary

      - name: Switch registry to npmjs.org # switching registry to npm, to additionally publish to npm
        uses: actions/setup-node@v1
        with:
          node-version: 16
          registry-url: "https://registry.npmjs.org"
          scope: "@infineon"
          cache: 'npm'
          cache-dependency-path: package-lock.json
      - name: Npm Publish # takes version number from package.json, canary releases will not be published to NPM
        uses: JS-DevTools/npm-publish@v1
        with:
          registry: "https://registry.npmjs.org"
          token: ${{ secrets.NPM_TOKEN }}
          
     