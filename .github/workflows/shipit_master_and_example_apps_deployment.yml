name: Deploy Stencil Web components Library to NPM

on:
  push:
    branches:
     - master
 
jobs:
  stencil-library-release:
    outputs:
      VERSION: ${{ steps.build.outputs.VERSION }}
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')" # job will not run, if triggered via ship-it
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all tags for ship-it

      - name: download + setup auto
        uses: auto-it/setup-auto@v1

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"


      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules

          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/lerna.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-build-
    
      - name: Install dependencies for all packages
        run: npm install

      - name: Build and deploy Stencil core package
        id: build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm run build:components
          cd packages/components
          VERSION=$(auto shipit --dry-run --quiet)
          echo "Publishing: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Set version as Github Env and Github Output: $VERSION"
          echo "WEBEX_MESSAGE=New package release - Version: $VERSION" >> $GITHUB_ENV
          auto shipit

      - name: Sleep for 10 seconds #needed because we had runtime issues where the wrappers are not getting the newest version
        run: sleep 10s
        shell: bash

      - name: Update Dependencies in Angular, Vue and React packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: | 
          echo "VERSION: $VERSION"
          echo "Installing Stencil library for Angular, Vue and React: $VERSION"
          lerna version $VERSION --no-git-tag-version --y
          
          # Update Angular package
          cd packages/components-angular/projects/component-library
          jq --arg VERSION "$VERSION" '.peerDependencies["@infineon/infineon-design-system-stencil"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json          
          cd ../../../../

          # Update Vue package
          cd packages/components-vue
          jq --arg VERSION "$VERSION" '.dependencies["@infineon/infineon-design-system-stencil"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json          

          # Update React package
          cd ../components-react
          jq --arg VERSION "$VERSION" '.dependencies["@infineon/infineon-design-system-stencil"] = $VERSION | sub("^"; "")' package.json > package.json.tmp && mv package.json.tmp package.json
        
          # Check if package-lock.json exists and update it
          if [ -f package-lock.json ]; then
            jq --arg VERSION "$VERSION" '.dependencies["@infineon/infineon-design-system-stencil"] = $VERSION' package-lock.json > package-lock.json.tmp && mv package-lock.json.tmp package-lock.json
          else
            npm install
          fi

          cd ../../

          npm ci

          # Verify updates
          echo "Verifying updates in Angular package"
          jq '.peerDependencies["@infineon/infineon-design-system-stencil"]' packages/components-angular/projects/component-library/package.json
          echo "Verifying updates in Vue package"
          jq '.dependencies["@infineon/infineon-design-system-stencil"]' packages/components-vue/package.json
          echo "Verifying updates in React package"
          jq '.dependencies["@infineon/infineon-design-system-stencil"]' packages/components-react/package.json

      - name: Build and deploy Angular, Vue and React packages
        id: build-and-deploy-wrappers
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: | 
          lerna version $VERSION --no-git-tag-version --y
          npm run build:components-angular
          npm run build:components-react
          npm run build:components-vue          
          cd packages/components-angular/dist/@infineon/infineon-design-system-angular
          npm publish --verbose
          cd ../../../../components-react
          npm publish
          cd ../components-vue
          npm publish   

      - name: Sleep for 10 seconds #needed because we had runtime issues where the wrappers are not getting the newest version
        run: |
          echo "Skip Remaining: ${{ steps.build.outputs.SKIP_REMAINING }}"  
          sleep 10s
        shell: bash

      - name: Update Dependencies in example applications
        if: steps.build.outputs.SKIP_REMAINING == 'false'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          VERSION: ${{ steps.build.outputs.VERSION }}
        run: |
          # Update Vue wrapper component
          cd examples/wrapper-components/vue-javascript
          jq --arg VERSION "$VERSION" '.dependencies["@infineon/infineon-design-system-vue"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json
          cd ../../..
  
          # Update React wrapper component
          cd examples/wrapper-components/react-vite-js
          jq --arg VERSION "$VERSION" '.dependencies["@infineon/infineon-design-system-react"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json
          cd ../../..

      - name: Commit and push all changes
        if: steps.build.outputs.SKIP_REMAINING == 'false'
        env:
          BRANCH_NAME: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref_name }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Update Stencil library version to $VERSION"
          git push origin HEAD:master   

#deploy gh-pages for example applications based on the master branch:
  deploy-master-vue:
    needs: stencil-library-release  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
       
      - name: Install and Build
        run: |
          cd examples/wrapper-components/vue-javascript
          npm i
          npm run build

      - name: Deploy Vue ExampleðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: examples/wrapper-components/vue-javascript/dist/ # The folder the action should deploy.
          target-folder: vue-example
          clean-exclude: |
            angular-example/
            react-example/
            vanilla-example/
            pr-preview/
            pr-preview-vue-example/
            pr-preview-react-example/
            pr-preview-angular-example/
            pr-preview-vanilla-example/
          force: false
  
  deploy-master-react:
    needs: stencil-library-release  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install and Build
        run: |
          cd examples/wrapper-components/react-vite-js
          REACT_VERSION=$(jq -r '.dependencies["@infineon/infineon-design-system-react"]' package.json)
          STENCIL_VERSION=$(npm list @infineon/infineon-design-system-stencil --depth=1 | grep @infineon/infineon-design-system-stencil@ | awk -F@ '{print $3}')
          npm install
          echo "Installed version Stencil: $STENCIL_VERSION - Installed version React: $REACT_VERSION"
          npm run build

      - name: Deploy React ExampleðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: examples/wrapper-components/react-vite-js/dist # The folder the action should deploy.
          target-folder: react-example
          clean-exclude: |
            angular-example/
            vanilla-example/
            vue-example/
            pr-preview/
            pr-preview-vue-example/
            pr-preview-react-example/
            pr-preview-angular-example/
            pr-preview-vanilla-example/
          force: false
   
  deploy-master-angular:
    needs: stencil-library-release  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update package.json with version
        run: |
          cd packages/components-angular
          jq --arg VERSION "${{ needs.stencil-library-release.outputs.VERSION }}" '.dependencies["@infineon/infineon-design-system-angular"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json
          cd projects/component-library
          jq --arg VERSION "${{ needs.stencil-library-release.outputs.VERSION }}" '.peerDependencies["@infineon/infineon-design-system-stencil"] = $VERSION' package.json > package.json.tmp && mv package.json.tmp package.json      

      - name: Install and Build
        run: |
          cd packages/components-angular
          npm i
          npm run build my-app

           
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: packages/components-angular/dist/my-app/ # The folder the action should deploy.
          target-folder: angular-example
          clean-exclude: |
            react-example/
            vanilla-example/
            vue-example/
            pr-preview/
            pr-preview-vue-example/
            pr-preview-react-example/
            pr-preview-angular-example/
            pr-preview-vanilla-example/
          force: false
  
  deploy-master-vanilla:
    needs: stencil-library-release  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Update CDN Link in Vanilla example app & build
        run: | 
          cd examples/stencil-components/vanilla-cdn
          npm install
          npm run update-link
          npm run build
            
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: examples/stencil-components/vanilla-cdn/dist # The folder the action should deploy.
          target-folder: vanilla-example
          clean-exclude: |
            angular-example/
            react-example/
            vue-example/
            pr-preview/
            pr-preview-vue-example/
            pr-preview-react-example/
            pr-preview-angular-example/
            pr-preview-vanilla-example/
          force: false

  send-webex-notification:
    needs: [stencil-library-release, deploy-master-vue, deploy-master-react, deploy-master-angular, deploy-master-vanilla]
    runs-on: ubuntu-latest
    steps:
      - name: Send Webex Notification
        run: |
          VERSION=${{ needs.stencil-library-release.outputs.VERSION }}
          WEBEX_MESSAGE="**VERSION UPDATE**\nA new version has been released: [$VERSION](https://github.com/Infineon/infineon-design-system-stencil/releases/tag/v$VERSION)\nFollow the link to see what's included in this release."
          curl https://webexapis.com/v1/messages -X POST -H "Authorization: Bearer ${{ secrets.WEBEX_TOKEN }}" -H "Content-Type: application/json" -d "{\"roomId\":\"${{ secrets.WEBEX_ROOM_ID }}\",\"markdown\":\"$WEBEX_MESSAGE\"}"
        shell: bash