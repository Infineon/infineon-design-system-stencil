@use "~@infineon/design-system-tokens/dist/tokens";
@use "../../global/font.scss";

:host {
  display: flex;
}

.textInput__container {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 0px;
  width: 100%;
  flex: none;
  order: 0;
  align-self: stretch;
  flex-grow: 0;
  font-family: var(--ifx-font-family); // tokens.$ifxFontFamilyBody;

  &.disabled {
    & .textInput__top-wrapper {
      & label {
        color: tokens.$ifxColorBaseBlack;
      }
    }

    & .textInput__bottom-wrapper {
      input {
        border: 1px solid tokens.$ifxColorEngineering500;
        background-color: tokens.$ifxColorEngineering200;

        &::placeholder {
          font-size: tokens.$ifxFontSizeM;
          color: tokens.$ifxColorEngineering500;
        }
      }
    }
  }

  & .textInput__top-wrapper {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    padding: 0px;
    gap: tokens.$ifxSpace50;
    flex: none;
    order: 0;
    align-self: stretch;
    flex-grow: 0;

    & label {
      font-style: normal;
      font-weight: tokens.$ifxFontWeightRegular;
      font-size: tokens.$ifxFontSizeM;
      line-height: tokens.$ifxLineHeightM;
      display: flex;
      align-items: center;
      color: tokens.$ifxColorBaseBlack;
      flex: none;
      order: 0;
      flex-grow: 0;

      & .optional-required {
        margin-left: tokens.$ifxSpace50;
      }

      & .optional {
        margin-left: tokens.$ifxSpace50;
      }

      & .required {
        color: tokens.$ifxColorEngineering500;
        margin-left: tokens.$ifxSpace50;

        &.error {
          color: tokens.$ifxColorRed500;
        }
      }
    }
  }

  .input-container {
    position: relative;
    display: flex;
    align-items: center;
    width: 100%;
  }


  & .textInput__bottom-wrapper {
    flex-grow: 1;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    padding: 0px;
    gap: tokens.$ifxSpace50;
    flex: none;
    order: 1;
    align-self: stretch;
    flex-grow: 0;

    & input {
      width: 100%;
      box-sizing: border-box;
      display: flex;
      flex-direction: row;
      align-items: center;
      padding: tokens.$ifxSpace100 tokens.$ifxSpace200;
      gap: tokens.$ifxSpace100;
      height: tokens.$ifxSize500;
      background-color: tokens.$ifxColorBaseWhite;
      color: tokens.$ifxColorBaseBlack;
      font-family: var(--ifx-font-family); // tokens.$ifxFontFamilyBody;


      font-size: tokens.$ifxFontSizeM;
      line-height: tokens.$ifxLineHeightM;
      border: 1px solid tokens.$ifxColorEngineering400;
      border-radius: tokens.$ifxBorderRadius12;
      flex: none;
      order: 0;
      align-self: stretch;
      flex-grow: 0;
      text-overflow: ellipsis;

      &.input-s {
        height: tokens.$ifxSize450;
        font-size: tokens.$ifxFontSizeS;
        line-height: tokens.$ifxLineHeightS;

        &::placeholder {
          font-size: tokens.$ifxFontSizeM;
          line-height: tokens.$ifxLineHeightS;
        }

      }

      &.icon {
        padding-left: tokens.$ifxSpace500;
      }

      &.error {
        border: 1px solid tokens.$ifxColorRed500;

        &:focus {
          outline: none;
        }
      }

      &.readonly {
        border: none;
        border-radius: var(--borderRadius-12, 1px);
        border-bottom: 1px solid var(--color-engineering-300, #BFBBBB);
        background: var(--color-base-white, #FFF);
        padding-left: 0;

        &::placeholder {
          color: tokens.$ifxColorBaseBlack;
        }
      }

      &.success {
        border: 1px solid tokens.$ifxColorGreen500;

        &:focus {
          outline: none;
        }
      }

      &:focus:not(.error, .success):not(.readonly) {
        outline: none;
        border: 1px solid tokens.$ifxColorOcean500;
      }

      &.readonly:focus,
      &[readonly]:focus {
        outline: none;
        box-shadow: none;
        border: none;
        border-bottom: 1px solid var(--color-engineering-300, #BFBBBB);
      }

      &:hover:not(:disabled, :focus, .error, .success):not(.readonly) {
        border: 1px solid tokens.$ifxColorEngineering500;
      }
    }

    & .input-icon {
      // Position the icon within the icon container
      // Adjust the positioning as needed
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      left: tokens.$ifxSpace200;
      /* Adjust this value to control the icon's left offset */
      transition: .3s;
      color: tokens.$ifxColorEngineering400;
    }

    & .textInput__bottom-wrapper-caption {
      font-style: normal;
      font-weight: tokens.$ifxFontWeightRegular;
      font-size: tokens.$ifxFontSizeXs;
      line-height: tokens.$ifxLineHeightXs;
      color: tokens.$ifxColorBaseBlack;
      flex: none;
      order: 1;
      align-self: stretch;
      flex-grow: 0;

      &.error {
        color: tokens.$ifxColorRed500;

      }

      &.disabled {
        color: tokens.$ifxColorEngineering500;
      }
    }


  }

  .delete-icon {
    position: absolute;
    right: tokens.$ifxSpace200;

    :hover {
      cursor: pointer;
    }
  }
}