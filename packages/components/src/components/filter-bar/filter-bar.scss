/* filter-bar.scss */
@use "~@infineon/design-system-tokens/dist/tokens";

:host {
  display: block;
  width: 100%;
}

.search-container {
  display: flex;
  width: calc(100% - 48px); /* Adjust width to account for padding */
  padding-left: 24px;
  padding-right: 24px;  flex-direction: row;
  align-items: flex-start;
  margin-bottom: tokens.$ifxSpace200;
}

.components-container {
  display: flex;
  width: calc(100% - 48px); /* Adjust width to account for padding */
  padding-left: 24px;
  padding-right: 24px;  flex-direction: row;
  align-items: flex-end;
  align-content:flex-end;
  flex-wrap: wrap;
  gap: tokens.$ifxSpace200;
}

.filter-slot-wrapper {
    flex-grow: 1;
    flex-basis: 100%; 
    max-width: 100%; 
  }

@media (max-width: 1024px) { /* Adjust based on your breakpoints for mid/small screens */
    .more-filters-wrapper {
        order: 3; /* Keeps the button at the end/new row */
        width: 100%; /* Takes full width to allow centering */
        display: flex; /* Enables flexbox properties */
        justify-content: center; /* Centers the button horizontally */
        padding-top: tokens.$ifxSpace200; /* Adds space above the button, adjust as needed */
      }
  }


  @media (min-width: 720px) and (max-width: 1024px) {
    .filter-slot-wrapper {
        flex-basis: calc((100% - tokens.$ifxSpace200) / 2);
        max-width: calc((100% - tokens.$ifxSpace200) / 2);
      }
    

}

  @media (min-width: 1025px) {
    .filter-slot-wrapper {
        flex-basis: auto; 
        max-width: 200px; 
      }

    ::slotted([slot="filter-search"]) {
        max-width: 828px;
      }
  }
  
  ::slotted([slot="filter-search"]) {
    flex-grow: 1;
    flex-basis: 100%;
    width: 100%; 
  }