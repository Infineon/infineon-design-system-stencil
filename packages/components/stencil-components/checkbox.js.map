{"file":"checkbox.js","mappings":"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","names":[],"sources":["src/components/checkbox/checkbox.scss?tag=ifx-checkbox&encapsulation=shadow","src/components/checkbox/checkbox.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n\r\n:host {\r\n    display: inline-flex;\r\n    vertical-align: top;\r\n}\r\n\r\n\r\n.checkbox__container {\r\n    box-sizing: border-box;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 0px;\r\n    gap: tokens.$ifxSpace100;\r\n\r\n    & .checkbox__wrapper {\r\n        display: flex;\r\n        position: relative; //needs to be added for the indeterminate state of the checkbox\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: tokens.$ifxSize250;\r\n        height: tokens.$ifxSize250;\r\n        background-color: tokens.$ifxColorBaseWhite;\r\n        border: 1px solid #575352;\r\n        border-radius: tokens.$ifxBorderRadius12;\r\n        flex: none;\r\n        order: 0;\r\n        flex-grow: 0;\r\n\r\n        &.checkbox-m {\r\n            height: tokens.$ifxSize300;\r\n            width: tokens.$ifxSize300;\r\n        }\r\n\r\n\r\n        &.error {\r\n            border-color: #CD002F;\r\n        }\r\n\r\n        &:focus-visible {\r\n            border: 1px solid #575352;\r\n            outline: 2px solid #0A8276;\r\n            outline-offset: 2px;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: #EEEDED;\r\n            border: 1px solid #575352;\r\n            border-radius: tokens.$ifxBorderRadius12;\r\n            flex: none;\r\n            order: 0;\r\n            flex-grow: 0;\r\n        }\r\n\r\n        &.disabled {\r\n            background-color: #BFBBBB;\r\n            border-color: #BFBBBB;\r\n            border-radius: tokens.$ifxBorderRadius12;\r\n            flex: none;\r\n            order: 0;\r\n            flex-grow: 0;\r\n        }\r\n\r\n        &.checked {\r\n            background-color: #0A8276;\r\n            border-radius: tokens.$ifxBorderRadius12;\r\n            border-color: tokens.$ifxColorBaseTransparent;\r\n            flex: none;\r\n            order: 0;\r\n            flex-grow: 0;\r\n            color: tokens.$ifxColorBaseWhite;\r\n\r\n            &.error {\r\n                background-color: #CD002F;\r\n            }\r\n\r\n            &:focus-visible {\r\n                border: 1px solid transparent;\r\n                outline: 2px solid #0A8276;\r\n                outline-offset: 2px;\r\n            }\r\n\r\n            &:hover {\r\n                background-color: #08665C;\r\n                border-radius: tokens.$ifxBorderRadius12;\r\n                flex: none;\r\n                order: 0;\r\n                flex-grow: 0;\r\n            }\r\n\r\n            &.disabled {\r\n                background: #BFBBBB;\r\n                border-radius: tokens.$ifxBorderRadius12;\r\n                flex: none;\r\n                order: 0;\r\n                flex-grow: 0;\r\n            }\r\n        }\r\n\r\n        &.indeterminate {\r\n            &:before {\r\n                content: \"\";\r\n                display: block;\r\n                width: 70%; // Adjust as needed for the width of the minus sign\r\n                height: 2px; // Adjust for thickness of the minus sign\r\n                background-color: #08665C; // Color of the minus sign\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    & .label {\r\n        height: tokens.$ifxSize250;\r\n        font-family: tokens.$ifxFontFamilyBody;\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-size: tokens.$ifxFontSizeS;\r\n        line-height: tokens.$ifxLineHeightS;\r\n        color: tokens.$ifxColorBaseBlack;\r\n        flex: none;\r\n        order: 1;\r\n        flex-grow: 0;\r\n\r\n        &.label-m {\r\n            height: tokens.$ifxSize300;\r\n            font-size: tokens.$ifxFontSizeM;\r\n            line-height: tokens.$ifxLineHeightM;\r\n        }\r\n\r\n        &.disabled {\r\n            color: #BFBBBB;\r\n        }\r\n    }\r\n\r\n    & .checkbox__wrapper,\r\n    & .label {\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n}","import { Component, h, Prop, Element, State, Event, EventEmitter, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-checkbox',\r\n  styleUrl: 'checkbox.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class Checkbox {\r\n  private inputElement: HTMLInputElement;\r\n\r\n  @Element() el;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: boolean = false;\r\n  @Prop() error: boolean = false;\r\n  @Prop() name: string = '';\r\n  @Prop() size: string = 'm';\r\n  @State() internalValue: boolean;\r\n  @Prop() indeterminate: boolean = false;\r\n  @Event({ bubbles: true, composed: true }) ifxChange: EventEmitter;\r\n\r\n  handleCheckbox() {\r\n    if (!this.disabled) {\r\n      if (this.inputElement.indeterminate) {\r\n        this.internalValue = true;\r\n        this.value = this.internalValue;\r\n        this.indeterminate = false;\r\n      } else {\r\n        this.internalValue = !this.internalValue;\r\n        this.value = this.internalValue;\r\n      }\r\n      this.ifxChange.emit(this.internalValue);\r\n    }\r\n  }\r\n\r\n\r\n  @Watch('value')\r\n  valueChanged(newValue: boolean, oldValue: boolean) {\r\n    console.log(\"watch\");\r\n    if (newValue !== oldValue) {\r\n      this.internalValue = newValue;\r\n      this.inputElement.checked = this.internalValue; // update the checkbox's checked property\r\n    }\r\n  }\r\n\r\n\r\n  handleKeydown(event) {\r\n    // Keycode 32 corresponds to the Space key, 13 corresponds to the Enter key\r\n    if (event.keyCode === 32 || event.keyCode === 13) {\r\n      this.handleCheckbox();\r\n      event.preventDefault();  // prevent the default action when space or enter is pressed\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.internalValue = this.value;\r\n  }\r\n\r\n  componentDidRender() {\r\n    this.inputElement.indeterminate = this.indeterminate;\r\n  }\r\n\r\n  getCheckedClassName() {\r\n    if (this.error) {\r\n      if (this.internalValue) {\r\n        return \"checked error\"\r\n      } else {\r\n        return \"error\"\r\n      }\r\n    } else if (this.internalValue) {\r\n      return \"checked\";\r\n    } else return \"\"\r\n  }\r\n\r\n\r\n  render() {\r\n    const slot = this.el.innerHTML;\r\n    let hasSlot = false;\r\n\r\n    if (slot) {\r\n      hasSlot = true;\r\n    }\r\n\r\n    return (\r\n      <div class=\"checkbox__container\">\r\n        <input\r\n          type=\"checkbox\"\r\n          hidden\r\n          ref={(el) => (this.inputElement = el)}\r\n          name={this.name}\r\n          checked={this.internalValue}\r\n          onChange={this.handleCheckbox.bind(this)} // Listen for changes here\r\n          id='checkbox'\r\n          value={`${this.internalValue}`}\r\n        />\r\n\r\n        <div\r\n          tabindex=\"0\"\r\n          onClick={this.handleCheckbox.bind(this)}\r\n          onKeyDown={this.handleKeydown.bind(this)}\r\n          role=\"checkbox\"  // role attribute\r\n          aria-value={this.internalValue}\r\n          aria-disabled={this.disabled}\r\n          aria-labelledby=\"label\"\r\n          class={`checkbox__wrapper \r\n          ${this.getCheckedClassName()}\r\n        ${this.size === \"m\" ? \"checkbox-m\" : \"\"}\r\n        ${this.indeterminate ? 'indeterminate' : \"\"}\r\n        ${this.disabled ? 'disabled' : \"\"}`}\r\n        >\r\n          {this.internalValue && <ifx-icon icon=\"check-12\"></ifx-icon>}\r\n        </div>\r\n        {hasSlot &&\r\n          <div id=\"label\" class={`label ${this.size === \"m\" ? \"label-m\" : \"\"} ${this.disabled ? 'disabled' : \"\"} `} onClick={this.handleCheckbox.bind(this)}>\r\n            <slot />\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}