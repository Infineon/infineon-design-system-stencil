{"file":"ifx-text-field.js","mappings":";;;AAAA,MAAM,YAAY,GAAG,krGAAkrG;;MCQ1rG,SAAS;;;;;;uBAGU,aAAa;iBACF,EAAE;iBAClB,KAAK;iBACN,EAAE;gBACH,EAAE;mBACC,EAAE;gBACL,GAAG;oBACE,KAAK;oBACL,KAAK;mBACN,KAAK;oBACJ,KAAK;;;;EAOjC,YAAY,CAAC,QAAgB;IAC3B,IAAI,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;MACxC,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;KACpC;GACF;EAGD,MAAM,KAAK;IACT,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;GAC9B;EAGD,WAAW;IACT,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;IACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GAChC;EAED,MAAM;IACJ,QACE,yBAAgB,6BAA6B,gBAAa,IAAI,CAAC,KAAK,mBAAiB,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,wBAAwB,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,IAClK,WAAK,KAAK,EAAC,wBAAwB,IACjC,aAAO,OAAO,EAAC,YAAY,IACzB,eAAa,EACZ,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,IAC7B,YAAM,KAAK,EAAC,mBAAmB,mBAAoB,IACjD,IAAI,CAAC,QAAQ,IACf,YAAM,KAAK,EAAC,UAAU,iBAAkB,IACtC,IAAI,CAAC,QAAQ,IACf,YAAM,KAAK,EAAC,UAAU,QAAS,IAC7B,IAAI,CACF,CACJ,EAEN,WAAK,KAAK,EAAC,2BAA2B,IACpC,WAAK,KAAK,EAAC,iBAAiB,IACzB,IAAI,CAAC,IAAI,KACR,gBAAU,IAAI,EAAE,IAAI,CAAC,IAAI,GAAI,CAC9B,EACD,aACE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,EACrC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,IAAI,EAAC,MAAM,EACX,EAAE,EAAC,YAAY,EACf,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EACjC,WAAW,EAAE,IAAI,CAAC,WAAW,EAC7B,KAAK,EACH,GAAG,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE;kBACxB,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE;gBAC3B,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG,SAAS,GAAG,EAAE;gBAClC,IAAI,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE,EAAE,GAAI,CACnC,EACL,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK;MAC1B,WAAK,KAAK,EAAE,qCAAqC,IAAI,CAAC,QAAQ,kBAAkB,IAC7E,IAAI,CAAC,OAAO,CACT,EACP,IAAI,CAAC,KAAK;MACT,WAAK,KAAK,EAAC,yCAAyC,IACjD,IAAI,CAAC,OAAO,CACT,CACJ,CACF,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/text-field/text-field.scss?tag=ifx-text-field&encapsulation=shadow","src/components/text-field/text-field.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n:host {\r\n  display: flex;\r\n}\r\n\r\n.textInput__container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  padding: 0px;\r\n  width: 100%;\r\n  flex: none;\r\n  order: 0;\r\n  align-self: stretch;\r\n  flex-grow: 0;\r\n  font-family: tokens.$ifxFontFamilyBody;\r\n\r\n\r\n  &.disabled {\r\n    & .textInput__top-wrapper {\r\n      & label {\r\n        color: tokens.$ifxColorEngineering500;\r\n      }\r\n    }\r\n\r\n    & .textInput__bottom-wrapper {\r\n      input {\r\n        border: 1px solid tokens.$ifxColorEngineering500;\r\n        background-color: tokens.$ifxColorEngineering200;\r\n\r\n        &::placeholder {\r\n          font-size: tokens.$ifxFontSizeS;\r\n          color: tokens.$ifxColorEngineering500;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  & .textInput__top-wrapper {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: flex-start;\r\n    padding: 0px;\r\n    gap: 4px;\r\n    flex: none;\r\n    order: 0;\r\n    align-self: stretch;\r\n    flex-grow: 0;\r\n\r\n    & label {\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: tokens.$ifxFontSizeM;\r\n      line-height: tokens.$ifxLineHeightM;\r\n      display: flex;\r\n      align-items: center;\r\n      color: tokens.$ifxColorBaseBlack;\r\n      flex: none;\r\n      order: 0;\r\n      flex-grow: 0;\r\n\r\n      & .optional-required {\r\n        margin-left: 4px;\r\n      }\r\n\r\n      & .optional {\r\n        margin-left: 4px;\r\n      }\r\n\r\n      & .required {\r\n        margin-left: 4px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n  }\r\n\r\n\r\n  & .textInput__bottom-wrapper {\r\n    flex-grow: 1;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    padding: 0px;\r\n    gap: 4px;\r\n    flex: none;\r\n    order: 1;\r\n    align-self: stretch;\r\n    flex-grow: 0;\r\n\r\n    & input {\r\n      width: 100%;\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      padding: tokens.$ifxSpace100 tokens.$ifxSpace200;\r\n      gap: tokens.$ifxSpace100;\r\n      height: tokens.$ifxSize500;\r\n      background-color: tokens.$ifxColorBaseWhite;\r\n      color: tokens.$ifxColorBaseBlack;\r\n      border: 1px solid tokens.$ifxColorEngineering400;\r\n      border-radius: tokens.$ifxBorderRadius12;\r\n      flex: none;\r\n      order: 0;\r\n      align-self: stretch;\r\n      flex-grow: 0;\r\n\r\n      &.input-s {\r\n        height: tokens.$ifxSize450;\r\n      }\r\n\r\n      &.icon {\r\n        padding-left: tokens.$ifxSpace400;\r\n      }\r\n\r\n      &.error {\r\n        border: 1px solid #CD002F;\r\n\r\n        &:focus {\r\n          outline: none;\r\n        }\r\n      }\r\n\r\n      &.success {\r\n        border: 1px solid #4CA460;\r\n\r\n        &:focus {\r\n          outline: none;\r\n        }\r\n      }\r\n\r\n\r\n      &:focus:not(.error, .success) {\r\n        outline: none;\r\n        border: 1px solid tokens.$ifxColorOcean500\r\n      }\r\n\r\n      &:hover:not(:disabled, .error, .success) {\r\n        border: 1px solid #3C3A39;\r\n      }\r\n\r\n      &::placeholder {\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-size: tokens.$ifxFontSizeS;\r\n        line-height: tokens.$ifxLineHeightM;\r\n        color: #8D8786;\r\n        flex: none;\r\n        order: 1;\r\n        flex-grow: 1;\r\n      }\r\n    }\r\n\r\n    & ifx-icon {\r\n      // Position the icon within the icon container\r\n      // Adjust the positioning as needed\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translateY(-50%);\r\n      left: 8px;\r\n      /* Adjust this value to control the icon's left offset */\r\n      transition: .3s;\r\n    }\r\n\r\n    & .textInput__bottom-wrapper-caption {\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: tokens.$ifxFontSizeXs;\r\n      line-height: tokens.$ifxLineHeightXs;\r\n      letter-spacing: 0.2px;\r\n      color: tokens.$ifxColorBaseBlack;\r\n      flex: none;\r\n      order: 1;\r\n      align-self: stretch;\r\n      flex-grow: 0;\r\n\r\n      &.error {\r\n        color: #CD002F;\r\n\r\n      }\r\n\r\n      &.disabled {\r\n        color: tokens.$ifxColorEngineering500;\r\n      }\r\n    }\r\n\r\n  }\r\n}","import { Component, h, Event, Element, Prop, EventEmitter, Watch, Method } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-text-field',\r\n  styleUrl: 'text-field.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class TextField {\r\n  private inputElement: HTMLInputElement;\r\n  @Element() el;\r\n  @Prop() placeholder: string = \"Placeholder\"\r\n  @Prop({ mutable: true }) value: string = '';\r\n  @Prop() error: boolean = false;\r\n  @Prop() label: string = \"\";\r\n  @Prop() icon: string = \"\";\r\n  @Prop() caption: string = \"\";\r\n  @Prop() size: string = 'm';\r\n  @Prop() required: boolean = false;\r\n  @Prop() optional: boolean = false;\r\n  @Prop() success: boolean = false;\r\n  @Prop() disabled: boolean = false;\r\n  @Event() ifxInput: EventEmitter<String>;\r\n  // @Prop({ reflect: true })\r\n  // resetOnSubmit: boolean = false;\r\n\r\n\r\n  @Watch('value')\r\n  valueWatcher(newValue: string) {\r\n    if (newValue !== this.inputElement.value) {\r\n      this.inputElement.value = newValue;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async reset() {\r\n    this.value = '';\r\n    this.inputElement.value = '';\r\n  }\r\n\r\n\r\n  handleInput() {\r\n    const query = this.inputElement.value;\r\n    this.value = query; // update the value property when input changes\r\n    this.ifxInput.emit(this.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div aria-label=\"a text field for user input\" aria-value={this.value} aria-disabled={this.disabled} class={`textInput__container ${this.disabled ? 'disabled' : \"\"}`}>\r\n        <div class=\"textInput__top-wrapper\">\r\n          <label htmlFor=\"text-field\">\r\n            <slot></slot>\r\n            {this.optional && this.required ? (\r\n              <span class=\"optional-required\">(optional) *</span>\r\n            ) : this.optional ? (\r\n              <span class=\"optional\">(optional)</span>\r\n            ) : this.required ? (\r\n              <span class=\"required\">*</span>\r\n            ) : null}\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"textInput__bottom-wrapper\">\r\n          <div class=\"input-container\">\r\n            {this.icon && (\r\n              <ifx-icon icon={this.icon} />\r\n            )}\r\n            <input\r\n              ref={(el) => (this.inputElement = el)}\r\n              disabled={this.disabled}\r\n              type=\"text\"\r\n              id='text-field'\r\n              value={this.value}\r\n              onInput={() => this.handleInput()}\r\n              placeholder={this.placeholder}\r\n              class={\r\n                `${this.icon ? 'icon' : \"\"}\r\n                ${this.error ? 'error' : \"\"} \r\n              ${this.size === \"s\" ? \"input-s\" : \"\"}\r\n              ${this.success ? \"success\" : \"\"}`} />\r\n          </div>\r\n          {this.caption && !this.error &&\r\n            <div class={`textInput__bottom-wrapper-caption ${this.disabled} ? disabled : \"\"`}>\r\n              {this.caption}\r\n            </div>}\r\n          {this.error &&\r\n            <div class=\"textInput__bottom-wrapper-caption error\">\r\n              {this.caption}\r\n            </div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}