{"file":"ifx-breadcrumb.js","mappings":";;AAAA,MAAM,aAAa,GAAG,gNAAgN;;MCOzN,UAAU;;;;;;EAGrB,gBAAgB;IACd,MAAM,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC;IAC9C,IAAI,CAAC,yCAAyC,CAAC,OAAO,CAAC,CAAC;GAEzD;EAEO,yCAAyC,CAAC,OAAoB;IACpE,IAAI,CAAC,OAAO,EAAE;MACZ,OAAO,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;MACnC,OAAO;KACR;IACD,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;IAEtB,MAAM,IAAI,GAAG,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAG,IAAI,EAAE;MACP,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;MAE3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC7C,MAAM,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,IAAI,CAAC,QAAQ,KAAK,qBAAqB,EAAE;UAC3C,MAAM,eAAe,GAAG,IAAoC,CAAC;UAC7D,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;YACxC,eAAe,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;YAC9B,eAAe,CAAC,gBAAgB,CAAC,OAAO,EAAE;cACxC,IAAI,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;gBACvC,eAAe,CAAC,IAAI,EAAE,CAAC;eACxB;aACF,CAAC,CAAC;WACJ;SACF;OACF;KACF;GACF;EAED,MAAM;IACJ,QACE,yBAAgB,4BAA4B,IAC1C,UAAI,KAAK,EAAC,YAAY,IACpB,eAAQ,CACL,CACD,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/breadcrumb/breadcrumb.scss?tag=ifx-breadcrumb&encapsulation=shadow","src/components/breadcrumb/breadcrumb.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n:host { \r\n  display: flex;\r\n}\r\n\r\n.breadcrumb {\r\n  list-style: none;\r\n  padding: 0px;\r\n  margin: 0px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  font-family: tokens.$ifxFontFamilyBody;\r\n  font-size: tokens.$ifxFontSizeS;\r\n  align-items: flex-start;\r\n  //gap: tokens.$ifxSpace200; //this is where the gap comes from\r\n\r\n}\r\n\r\n// .separator {\r\n//   color: tokens.$ifxColorEngineering300;\r\n//   margin: 0 16px;\r\n// }","import { Component, h, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-breadcrumb',\r\n  styleUrl: 'breadcrumb.scss',\r\n  shadow: true\r\n})\r\nexport class Breadcrumb {\r\n  @Element() el;\r\n\r\n  componentDidLoad() {\r\n    const element = this.el.shadowRoot.firstChild;\r\n    this.addEventListenersToHandleCustomFocusState(element);\r\n\r\n  }\r\n\r\n  private addEventListenersToHandleCustomFocusState(element: HTMLElement) {\r\n    if (!element) {\r\n      console.error('element not found');\r\n      return;\r\n    }\r\n    element.tabIndex = -1;\r\n\r\n    const slot = element.querySelector('slot');\r\n    if(slot) { \r\n      const assignedNodes = slot.assignedNodes();\r\n  \r\n      for (let i = 0; i < assignedNodes.length; i++) {\r\n        const node = assignedNodes[i];\r\n        if (node.nodeName === 'IFX-BREADCRUMB-ITEM') {\r\n          const breadcrumbLabel = node as HTMLIfxBreadcrumbItemElement;\r\n          if (!breadcrumbLabel.hasAttribute('url')) {\r\n            breadcrumbLabel.tabIndex = -1;\r\n            breadcrumbLabel.addEventListener('focus', () => {\r\n              if (breadcrumbLabel.hasAttribute('url')) {\r\n                breadcrumbLabel.blur();\r\n              }\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav aria-label=\"Page navigation breadcrumb\">\r\n        <ol class=\"breadcrumb\">\r\n          <slot />\r\n        </ol>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n"],"version":3}