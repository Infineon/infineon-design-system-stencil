{"file":"ifx-switch.js","mappings":";;AAAA,MAAM,SAAS,GAAG,0vCAA0vC;;MCO/vC,MAAM;;;;;;iBACQ,KAAK;gBACP,EAAE;oBACG,KAAK;yBACC,KAAK;;EAIvC,iBAAiB;IACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;GACjC;EAGD,YAAY,CAAC,QAAiB,EAAE,QAAiB;IAC/C,IAAI,QAAQ,KAAK,QAAQ,EAAE;MACzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;KAC/B;GACF;EAID,MAAM;IACJ,IAAI,IAAI,CAAC,QAAQ;MAAE,OAAO;IAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;GACzC;EAED,aAAa,CAAC,KAAoB;IAChC,IAAI,IAAI,CAAC,QAAQ;MAAE,OAAO;;IAE1B,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;MAC9C,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;GACF;EAGD,MAAM;IACJ,QACE,WACE,KAAK,EAAE,aAAa,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,EAC5F,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAC,GAAG,kBACE,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,OAAO,gBACvC,IAAI,CAAC,IAAI,EACrB,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAC5B,SAAS,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAE/C,WAAK,KAAK,EAAC,yBAAyB,IAClC,aAAO,IAAI,EAAC,UAAU,EAAC,MAAM,QAC3B,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAI,EACpC,WAAK,KAAK,EAAE,UAAU,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,GAAI,CAC9F,EACN,WAAK,KAAK,EAAE,wBAAwB,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,IACnE,aAAO,OAAO,EAAC,QAAQ,IACrB,eAAQ,CACF,CACJ,CACD,EACR;GAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/switch/switch.scss?tag=ifx-switch&encapsulation=shadow","src/components/switch/switch.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\n@use \"../../global/font.scss\";\n\n/* switch.css */\n:host {\n  display: inline-block;\n  user-select: none;\n}\n\n.container {\n  padding: tokens.$ifxSpace50;\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: tokens.$ifxSpace500;\n  // gap: tokens.$ifxSpace200;\n  height: 20px;\n  background-color: tokens.$ifxColorBaseWhite;\n  border: 1px solid tokens.$ifxColorEngineering500;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  outline: none;\n\n  &:focus {\n    outline: 4px solid #0A8276;\n    outline-offset: 2px;\n  }\n\n  &:focus:not(:focus-visible) {\n    outline: none;\n  }\n\n  &:focus-visible {\n    outline: 2px solid #0A8276;\n    outline-offset: 2px;\n  }\n\n  &.disabled {\n    cursor: default;\n  }\n\n\n}\n\n\n.switch_label-wrapper {\n  margin-left: 46px; //(container witdth - switch width) + label gap (label starts where switch class ends)\n  \n  & label { \n    &:hover { \n      cursor: pointer;\n    }\n  }\n\n  &.disabled {\n    color: tokens.$ifxColorEngineering300;\n  }\n}\n\n\n.switch_checkbox-wrapper {\n\n  .switch {\n    // position: absolute;\n    width: tokens.$ifxSpace200;\n    height: tokens.$ifxSpace200;\n    background-color: tokens.$ifxColorEngineering500;\n    border-radius: 50%;\n    transition: transform 0.3s ease;\n\n    &.disabled {\n      background-color: #BFBBBB;\n      border-color: #BFBBBB;\n      cursor: default;\n    }\n  }\n\n  .switch.checked {\n    transform: translateX(20px);\n    background-color: tokens.$ifxColorBaseWhite;\n\n    &.disabled {\n      cursor: default;\n    }\n\n  }\n\n}\n\n.container:hover .toggle-switch {\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n}\n\n\n\n.container.checked {\n  background-color: tokens.$ifxColorOcean500;\n  border-color: tokens.$ifxColorOcean500;\n\n  &.disabled {\n    background-color: #BFBBBB;\n    border-color: #BFBBBB;\n    cursor: default;\n  }\n}","import { Component, Prop, State, Watch, h, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'ifx-switch',\n  styleUrl: 'switch.scss',\n  shadow: true,\n})\nexport class Switch {\n  @Prop() value: boolean = false;\n  @Prop() name: string = '';\n  @Prop() disabled: boolean = false;\n  @State() internalValue: boolean = false;\n\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    this.internalValue = this.value;\n  }\n\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.internalValue = newValue;\n    }\n  }\n\n\n\n  toggle() {\n    if (this.disabled) return;\n    this.internalValue = !this.internalValue;\n    this.ifxChange.emit(this.internalValue);\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    if (this.disabled) return;\n    // If the pressed key is either 'Enter' or 'Space' \n    if (event.key === 'Enter' || event.key === ' ') {\n      this.toggle();\n    }\n  }\n\n\n  render() {\n    return (\n      <div\n        class={`container ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`}\n        role=\"switch\"\n        tabindex=\"0\"\n        aria-checked={this.internalValue ? 'true' : 'false'}\n        aria-label={this.name}\n        onClick={() => this.toggle()}\n        onKeyDown={(event) => this.handleKeyDown(event)}\n      >\n        <div class=\"switch_checkbox-wrapper\">\n          <input type=\"checkbox\" hidden\n            name={this.name}\n            disabled={this.disabled}\n            value={`${this.internalValue}`} />\n          <div class={`switch ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`} />\n        </div>\n        <div class={`switch_label-wrapper ${this.disabled ? 'disabled' : ''}`} >\n          <label htmlFor=\"switch\">\n            <slot />\n          </label>\n        </div>\n      </div >\n    )\n\n  }\n}\n"],"version":3}