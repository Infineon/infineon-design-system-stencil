{"file":"ifx-switch.js","mappings":";;AAAA,MAAM,SAAS,GAAG,0vCAA0vC;;MCO/vC,MAAM;;;;;;iBACQ,KAAK;gBACP,EAAE;oBACG,KAAK;yBACC,KAAK;;EAIvC,iBAAiB;IACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;GACjC;EAGD,YAAY,CAAC,QAAiB,EAAE,QAAiB;IAC/C,IAAI,QAAQ,KAAK,QAAQ,EAAE;MACzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;KAC/B;GACF;EAID,MAAM;IACJ,IAAI,IAAI,CAAC,QAAQ;MAAE,OAAO;IAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;IACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;GACzC;EAED,aAAa,CAAC,KAAoB;IAChC,IAAI,IAAI,CAAC,QAAQ;MAAE,OAAO;;IAE1B,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;MAC9C,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;GACF;EAGD,MAAM;IACJ,QACE,WACE,KAAK,EAAE,aAAa,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,EAC5F,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAC,GAAG,kBACE,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,OAAO,gBACvC,IAAI,CAAC,IAAI,EACrB,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAC5B,SAAS,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAE/C,WAAK,KAAK,EAAC,yBAAyB,IAClC,aAAO,IAAI,EAAC,UAAU,EAAC,MAAM,QAC3B,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,KAAK,EAAE,GAAG,IAAI,CAAC,aAAa,EAAE,GAAI,EACpC,WAAK,KAAK,EAAE,UAAU,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,GAAI,CAC9F,EACN,WAAK,KAAK,EAAE,wBAAwB,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,IACnE,aAAO,OAAO,EAAC,QAAQ,IACrB,eAAQ,CACF,CACJ,CACD,EACR;GAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/switch/switch.scss?tag=ifx-switch&encapsulation=shadow","src/components/switch/switch.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n/* switch.css */\r\n:host {\r\n  display: inline-block;\r\n  user-select: none;\r\n}\r\n\r\n.container {\r\n  padding: tokens.$ifxSpace50;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  width: tokens.$ifxSpace500;\r\n  // gap: tokens.$ifxSpace200;\r\n  height: 20px;\r\n  background-color: tokens.$ifxColorBaseWhite;\r\n  border: 1px solid tokens.$ifxColorEngineering500;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    outline: 4px solid #0A8276;\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  &:focus:not(:focus-visible) {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus-visible {\r\n    outline: 2px solid #0A8276;\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  &.disabled {\r\n    cursor: default;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n.switch_label-wrapper {\r\n  margin-left: 46px; //(container witdth - switch width) + label gap (label starts where switch class ends)\r\n  \r\n  & label { \r\n    &:hover { \r\n      cursor: pointer;\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    color: tokens.$ifxColorEngineering300;\r\n  }\r\n}\r\n\r\n\r\n.switch_checkbox-wrapper {\r\n\r\n  .switch {\r\n    // position: absolute;\r\n    width: tokens.$ifxSpace200;\r\n    height: tokens.$ifxSpace200;\r\n    background-color: tokens.$ifxColorEngineering500;\r\n    border-radius: 50%;\r\n    transition: transform 0.3s ease;\r\n\r\n    &.disabled {\r\n      background-color: #BFBBBB;\r\n      border-color: #BFBBBB;\r\n      cursor: default;\r\n    }\r\n  }\r\n\r\n  .switch.checked {\r\n    transform: translateX(20px);\r\n    background-color: tokens.$ifxColorBaseWhite;\r\n\r\n    &.disabled {\r\n      cursor: default;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n.container:hover .toggle-switch {\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n\r\n\r\n.container.checked {\r\n  background-color: tokens.$ifxColorOcean500;\r\n  border-color: tokens.$ifxColorOcean500;\r\n\r\n  &.disabled {\r\n    background-color: #BFBBBB;\r\n    border-color: #BFBBBB;\r\n    cursor: default;\r\n  }\r\n}","import { Component, Prop, State, Watch, h, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-switch',\r\n  styleUrl: 'switch.scss',\r\n  shadow: true,\r\n})\r\nexport class Switch {\r\n  @Prop() value: boolean = false;\r\n  @Prop() name: string = '';\r\n  @Prop() disabled: boolean = false;\r\n  @State() internalValue: boolean = false;\r\n\r\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter<boolean>;\r\n\r\n  componentWillLoad() {\r\n    this.internalValue = this.value;\r\n  }\r\n\r\n  @Watch('value')\r\n  valueChanged(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue) {\r\n      this.internalValue = newValue;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  toggle() {\r\n    if (this.disabled) return;\r\n    this.internalValue = !this.internalValue;\r\n    this.ifxChange.emit(this.internalValue);\r\n  }\r\n\r\n  handleKeyDown(event: KeyboardEvent) {\r\n    if (this.disabled) return;\r\n    // If the pressed key is either 'Enter' or 'Space' \r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      this.toggle();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        class={`container ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`}\r\n        role=\"switch\"\r\n        tabindex=\"0\"\r\n        aria-checked={this.internalValue ? 'true' : 'false'}\r\n        aria-label={this.name}\r\n        onClick={() => this.toggle()}\r\n        onKeyDown={(event) => this.handleKeyDown(event)}\r\n      >\r\n        <div class=\"switch_checkbox-wrapper\">\r\n          <input type=\"checkbox\" hidden\r\n            name={this.name}\r\n            disabled={this.disabled}\r\n            value={`${this.internalValue}`} />\r\n          <div class={`switch ${this.internalValue ? 'checked' : ''} ${this.disabled ? 'disabled' : ''}`} />\r\n        </div>\r\n        <div class={`switch_label-wrapper ${this.disabled ? 'disabled' : ''}`} >\r\n          <label htmlFor=\"switch\">\r\n            <slot />\r\n          </label>\r\n        </div>\r\n      </div >\r\n    )\r\n\r\n  }\r\n}\r\n"],"version":3}