{"file":"ifx-dropdown.js","mappings":"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","names":[],"sources":["src/components/dropdown/dropdown.scss?tag=ifx-dropdown&encapsulation=shadow","src/components/dropdown/dropdown.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n\r\n:host {\r\n    display: inline-block;\r\n}","//dropdown.tsx\r\nimport { Component, Prop, h, Element, Listen, Method, Watch, State, EventEmitter, Event } from \"@stencil/core\";\r\nimport { createPopper } from '@popperjs/core';\r\n\r\nimport { IOpenable } from './IOpenable';\r\n\r\nexport type Placement =\r\n  | 'auto'\r\n  | 'auto-start'\r\n  | 'auto-end'\r\n  | 'top'\r\n  | 'top-start'\r\n  | 'top-end'\r\n  | 'bottom'\r\n  | 'bottom-start'\r\n  | 'bottom-end'\r\n  | 'right'\r\n  | 'right-start'\r\n  | 'right-end'\r\n  | 'left'\r\n  | 'left-start'\r\n  | 'left-end';\r\n\r\n@Component({\r\n  tag: 'ifx-dropdown',\r\n  styleUrl: 'dropdown.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class Dropdown {\r\n  @Prop() placement: Placement = 'bottom-start';\r\n\r\n  // isOpen prop\r\n  @Prop() defaultOpen: boolean = false;\r\n  // internal state for isOpen prop\r\n  @State() internalIsOpen: boolean = false;\r\n\r\n  // isOpen prop\r\n  @Prop() noAppendToBody: boolean = false;\r\n\r\n  // Custom events for opening and closing dropdown\r\n  @Event() ifxOpen: EventEmitter;\r\n  @Event() ifxClose: EventEmitter;\r\n  @Event() ifxDropdown: EventEmitter;\r\n\r\n  // determine if dropdown is disabled\r\n  @Prop() disabled: boolean;\r\n\r\n  @Prop() noCloseOnOutsideClick: boolean = false;\r\n  @Prop() noCloseOnMenuClick: boolean = false;\r\n\r\n  // Reference to host element\r\n  @Element() el;\r\n  // Dropdown trigger and menu\r\n  @State() trigger: HTMLElement;\r\n  @State() menu: HTMLElement\r\n  // Popper instance for positioning\r\n  popperInstance: any;\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    //maybe not needed\r\n    this.updateSlotContent();\r\n    this.watchHandlerIsOpen(this.defaultOpen, this.internalIsOpen);\r\n  }\r\n\r\n  @Watch('defaultOpen')\r\n  watchHandlerIsOpen(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue && newValue !== this.internalIsOpen) {\r\n      if (newValue) {\r\n        this.openDropdown();\r\n      } else {\r\n        this.closeDropdown();\r\n      }\r\n    }\r\n  }\r\n\r\n  @Watch('disabled')\r\n  watchHandlerDisabled(newValue: boolean) {\r\n    if (this.trigger) {\r\n      (this.trigger as undefined as HTMLIfxDropdownTriggerButtonElement).disabled = newValue;\r\n    }\r\n  }\r\n\r\n\r\n  @Listen('slotchange')\r\n  watchHandlerSlot() {\r\n    this.updateSlotContent();\r\n  }\r\n\r\n\r\n\r\n  // handling assignment of trigger and menu\r\n  updateSlotContent() {\r\n    // Get dropdown trigger. name has to start with ifx-dropdown-trigger\r\n    this.trigger = this.el.querySelector('ifx-dropdown-trigger-button, ifx-dropdown-trigger');\r\n    if (this.trigger) {\r\n      (this.trigger as undefined as HTMLIfxDropdownTriggerButtonElement).disabled = this.disabled;\r\n      this.trigger.removeEventListener('click', this.triggerClickHandler.bind(this));\r\n      this.trigger.addEventListener('click', this.triggerClickHandler.bind(this));\r\n    }\r\n    // Remove menu if exists from body\r\n    if (!this.noAppendToBody) {\r\n      if (this.menu) {\r\n        this.menu.remove();\r\n      }\r\n      // Get new menu and add to body\r\n      this.menu = this.el.querySelector('ifx-dropdown-menu');\r\n\r\n      // event handler for closing dropdown on menu click\r\n      document.body.append(this.menu);\r\n    } else {\r\n      this.menu = this.el.querySelector('ifx-dropdown-menu');\r\n\r\n    }\r\n    this.menu.removeEventListener('click', this.menuClickHandler.bind(this));\r\n    this.menu.addEventListener('click', this.menuClickHandler.bind(this));\r\n\r\n  }\r\n\r\n  menuClickHandler() {\r\n    if (!this.noCloseOnMenuClick) {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  triggerClickHandler() {\r\n    if (!this.internalIsOpen) {\r\n      this.openDropdown();\r\n    } else {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Destroy popper instance if exists\r\n    if (this.popperInstance) {\r\n      this.popperInstance.destroy();\r\n      this.popperInstance = null;\r\n    }\r\n    // Remove menu if exists\r\n    if (this.menu) {\r\n      this.menu.remove();\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async isOpen() {\r\n    return this.internalIsOpen;\r\n  }\r\n\r\n  @Method()\r\n  async closeDropdown() {\r\n    if (this.internalIsOpen) {\r\n      this.internalIsOpen = false;\r\n      // sets isOpen prop on trigger and menu\r\n      (this.trigger as unknown as IOpenable).isOpen = false;\r\n      (this.menu as unknown as IOpenable).isOpen = false;\r\n      // Emit close event\r\n      this.ifxClose.emit();\r\n    }\r\n    // Destroy popper instance if exists\r\n    if (this.popperInstance) {\r\n      this.popperInstance.destroy();\r\n      this.popperInstance = null;\r\n    }\r\n  }\r\n\r\n  @Method()\r\n  async openDropdown() {\r\n    if (!this.internalIsOpen && !this.disabled) {\r\n      this.internalIsOpen = true;\r\n      // sets isOpen prop on trigger and menu\r\n      (this.trigger as unknown as IOpenable).isOpen = true;\r\n      (this.menu as unknown as IOpenable).isOpen = true;\r\n      // Create popper instance for positioning\r\n      this.popperInstance = createPopper(\r\n        this.el,\r\n        this.menu,\r\n        { placement: this.placement });\r\n\r\n      this.ifxOpen.emit();\r\n    }\r\n  }\r\n\r\n  //emitted by and listening to it from the dropdown menu right now\r\n  // @Listen('ifxDropdownMenu')\r\n  // handleDropdownMenuEvents(event: CustomEvent) {\r\n  //   this.ifxDropdown.emit(event.detail)\r\n  //   console.log('Selected item received in higher-level parent:');\r\n  // }\r\n\r\n  @Listen('mousedown', { target: 'document' })\r\n  handleOutsideClick(event: MouseEvent) {\r\n    const target = event.target as HTMLElement;\r\n    // Close dropdown if outside click\r\n    if (!this.noCloseOnOutsideClick && !this.el.contains(target) && !this.menu.contains(target)) {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div aria-label='dropdown menu' class='dropdown'>\r\n        <slot />\r\n      </div>\r\n    )\r\n  }\r\n}"],"version":3}