{"file":"ifx-dropdown-menu.js","mappings":";;AAAA,MAAM,eAAe,GAAG,scAAsc;;MCSjd,YAAY;;;;;;;kBACG,KAAK;gBACR,GAAG;0BACS,KAAK;yBAIe,EAAE;;EAIzD,gBAAgB,CAAC,KAAkB;IACjC,MAAM,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;IACjC,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAA;GACtC;EAGD,+BAA+B,CAAC,KAAkB;IAChD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;GAC5C;EAED,mBAAmB,CAAC,WAAmB;IACrC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC3E,IAAI,YAAY,EAAE,QAAQ,CAAC;IAC3B,IAAI,KAAK,GAAG,WAAW,CAAC,WAAW,EAAE,CAAA;IAErC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC3B,QAAQ,GAAG,YAAY,CAAC,WAAW,IAAI,YAAY,CAAC,SAAS,CAAC;MAE9D,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;QAC9C,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;OACzC;WAAM;QACL,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;OACxC;KACF;GACF;EAED,mBAAmB;IACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;GAC9B;EAED,iBAAiB;IACf,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAiC,CAAC;IAC/G,MAAM,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAA;IAC7D,MAAM,cAAc,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAA;IAEnE,IAAI,WAAW,IAAI,cAAc,EAAE;MACjC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC5B;;MAAM,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;GACpC;EAGD,MAAM;IACJ,QACE,WAAK,KAAK,EAAE;QACV,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE;QACzB,IAAI,CAAC,cAAc,GAAG,gBAAgB,GAAG,EAAE;QAC3C,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG,OAAO,GAAG,EAAE,EAAE,IAElC,eAAQ,CACH,EACP;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/dropdown/dropdown-menu/dropdown-menu.scss?tag=ifx-dropdown-menu&encapsulation=shadow","src/components/dropdown/dropdown-menu/dropdown-menu.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n\r\n:host {\r\n  position: relative;\r\n  z-index: 9999;\r\n}\r\n\r\n.dropdown-menu {\r\n  display: none;\r\n  visibility: hidden;\r\n  flex-direction: column;\r\n  width: 224px;\r\n  max-height: 289px;\r\n  min-width: 224px;\r\n  overflow-y: auto;\r\n  background: tokens.$ifxColorBaseWhite;\r\n  box-shadow: 0px 6px 9px 0px #1d1d1d1a;\r\n  border: 1px solid tokens.$ifxColorEngineering200;\r\n  padding: 8px 0px;\r\n\r\n  &.small { \r\n    max-height: 266px;\r\n    max-width: 186px;\r\n    overflow-y: auto;\r\n  }\r\n\r\n  &.hideTopPadding { \r\n    padding-top: 0px;\r\n  }\r\n}\r\n\r\n.dropdown-menu.show {\r\n  display: flex;\r\n  visibility: visible;\r\n}","// dropdown-menu.tsx\r\nimport { Component, h, Prop, Element, State, Event, EventEmitter, Listen } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: 'ifx-dropdown-menu',\r\n  styleUrl: 'dropdown-menu.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class DropdownMenu {\r\n  @Prop() isOpen: boolean = false;\r\n  @Prop() size: string = 'l'\r\n  @State() hideTopPadding: boolean = false;\r\n  @Element() el;\r\n\r\n  @Event() menuSize: EventEmitter;\r\n  @State() filteredItems: HTMLIfxDropdownItemElement[] = [];\r\n  @Event() ifxDropdownMenuItem: EventEmitter<CustomEvent>;\r\n\r\n  @Listen('ifxInput')\r\n  handleMenuFilter(event: CustomEvent) {\r\n    const searchValue = event.detail;\r\n    this.filterDropdownItems(searchValue)\r\n  }\r\n\r\n  @Listen('ifxDropdownItem')\r\n  handleDropdownItemValueEmission(event: CustomEvent) {\r\n    this.ifxDropdownMenuItem.emit(event.detail)\r\n  }\r\n\r\n  filterDropdownItems(searchValue: string) {\r\n    const allItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item'));\r\n    let dropdownItem, txtValue;\r\n    let query = searchValue.toUpperCase()\r\n\r\n    for (let i = 0; i < allItems.length; i++) {\r\n      dropdownItem = allItems[i];\r\n      txtValue = dropdownItem.textContent || dropdownItem.innerText;\r\n\r\n      if (txtValue.toUpperCase().indexOf(query) > -1) {\r\n        dropdownItem.setAttribute('hide', false)\r\n      } else {\r\n        dropdownItem.setAttribute('hide', true)\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    this.menuSize.emit(this.size)\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.filteredItems = Array.from(this.el.querySelectorAll('ifx-dropdown-item')) as HTMLIfxDropdownItemElement[];\r\n    const searchField = this.el.querySelector('ifx-search-field')\r\n    const dropdownHeader = this.el.querySelector('ifx-dropdown-header')\r\n\r\n    if (searchField || dropdownHeader) {\r\n      this.hideTopPadding = true;\r\n    } else this.hideTopPadding = false;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div class={`dropdown-menu \r\n      ${this.isOpen ? 'show' : ''} \r\n      ${this.hideTopPadding ? 'hideTopPadding' : \"\"}\r\n      ${this.size === 's' ? 'small' : \"\"}`\r\n      } >\r\n        <slot />\r\n      </div >\r\n    );\r\n  }\r\n}"],"version":3}