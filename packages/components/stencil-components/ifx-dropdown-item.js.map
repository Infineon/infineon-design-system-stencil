{"file":"ifx-dropdown-item.js","mappings":";;;AAAA,MAAM,eAAe,GAAG,ydAAyd;;MCSpe,YAAY;;;;;;;gBAEA,EAAE;kBACA,OAAO;gBACR,KAAK;gBACL,GAAG;;EAK3B,cAAc,CAAC,KAAkB;IAC/B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;GAC1B;EAED,mBAAmB;IACjB,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,CAAA;GAC/C;EAED,MAAM;IACJ,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC;IACzE,QACE,yBAAO,QAAQ,IAAE,OAAO,EAAE,MAAM,IAAI,CAAC,mBAAmB,EAAE,EAAE,KAAK,EAAE,iBAAiB,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG,OAAO,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,MAAM,GAAG,EAAE,EAAE,KAC9I,IAAI,CAAC,IAAI,IAAI,gBAAU,KAAK,EAAC,MAAM,EAAC,IAAI,EAAE,IAAI,CAAC,IAAI,GAAa,EACjE,gBACE,eAAQ,CACH,CACL,EACJ;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/dropdown/dropdown-item/dropdown-item.scss?tag=ifx-dropdown-item&encapsulation=shadow","src/components/dropdown/dropdown-item/dropdown-item.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../../global/font.scss\";\r\n\r\n.dropdown-item {\r\n  text-decoration: none;\r\n  color: tokens.$ifxColorBaseBlack;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 8px 16px;\r\n  gap: tokens.$ifxSize100;\r\n\r\n  &.hide { \r\n    display: none;\r\n  }\r\n\r\n  & span { \r\n    color: tokens.$ifxColorBaseBlack;\r\n    font-family: Source Sans 3;\r\n    font-size: 16px;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    line-height: 24px; /* 150% */\r\n  }\r\n\r\n  &.small { \r\n    & span { \r\n      font-size: 14px;\r\n    }\r\n  }\r\n  \r\n  &:hover { \r\n    cursor: pointer;\r\n    background-color: tokens.$ifxColorEngineering200;\r\n  }\r\n\r\n  &:active { \r\n    background-color: tokens.$ifxColorEngineering300;\r\n  }\r\n}\r\n\r\n.icon {\r\n  margin-right: 4px;\r\n}\r\n","// dropdown-item.tsx\r\nimport { Component, Prop, h, Listen, State, Event, EventEmitter, Element } from \"@stencil/core\";\r\n\r\n@Component({\r\n  tag: 'ifx-dropdown-item',\r\n  styleUrl: 'dropdown-item.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class DropdownItem {\r\n  @Prop() icon: string;\r\n  @Prop() href: string = \"\"\r\n  @Prop() target: string = \"_self\"\r\n  @Prop() hide: boolean = false;\r\n  @State() size: string = 'l'\r\n  @Event() ifxDropdownItem: EventEmitter;\r\n  @Element() el;\r\n\r\n  @Listen('menuSize', { target: 'body' })\r\n  handleMenuSize(event: CustomEvent) {\r\n    this.size = event.detail;\r\n  }\r\n\r\n  handleEventEmission() {\r\n    this.ifxDropdownItem.emit(this.el.textContent)\r\n  }\r\n\r\n  render() {\r\n    let hrefAttr = this.href ? { href: this.href, target: this.target } : {};\r\n    return (\r\n      <a {...hrefAttr} onClick={() => this.handleEventEmission()} class={`dropdown-item ${this.size === 's' ? 'small' : \"\"} ${this.hide ? 'hide' : \"\"}`}>\r\n        {this.icon && <ifx-icon class=\"icon\" icon={this.icon}></ifx-icon>}\r\n        <span>\r\n          <slot />\r\n        </span>\r\n      </a>\r\n    );\r\n  }\r\n}"],"version":3}