{"file":"ifx-chip.js","mappings":";;;AAAA,MAAM,OAAO,GAAG,2uBAA2uB;;MCQ9uB,IAAI;;;;;;;yBAGkB,EAAE;;EAInC,kBAAkB,CAAC,KAAiB;IAClC,MAAM,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,CAAC;IAClC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;MAC3B,IAAI,CAAC,UAAU,EAAE,CAAC;KACnB;GACF;EAGD,+BAA+B,CAAC,KAAkB;IAChD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC;IAClC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,IAAI,CAAC,UAAU,EAAE,CAAA;GAClB;EAED,eAAe;IACb,IAAI,qBAAqB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;IACvE,OAAO,qBAAqB,CAAA;GAC7B;EAED,UAAU;IACR,IAAI,qBAAqB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;IAClD,qBAAqB,CAAC,MAAM,GAAG,KAAK,CAAC;GACtC;EAED,UAAU;IACR,IAAI,qBAAqB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;IAClD,qBAAqB,CAAC,MAAM,GAAG,CAAC,qBAAqB,CAAC,MAAM,CAAC;IAC7D,IAAI,CAAC,eAAe,EAAE,CAAA;GACvB;EAED,eAAe;IACb,MAAM,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAA;IAClF,gBAAgB,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;GAC1C;EAED,MAAM;IACJ,QACE,yBAAiB,IAAI,CAAC,aAAa,gBAAa,2BAA2B,EAAC,KAAK,EAAC,oBAAoB,IACpG,WAAK,KAAK,EAAC,SAAS,EAAC,OAAO,EAAE,MAAM,IAAI,CAAC,UAAU,EAAE,IACnD,WAAK,KAAK,EAAC,eAAe,IACvB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CACvD,EACN,WAAK,KAAK,EAAC,sBAAsB,IAC/B,gBAAU,IAAI,EAAC,eAAe,GAAY,CACtC,CACF,EACN,YAAM,IAAI,EAAC,MAAM,GAAG,CAChB,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/chips/chip.scss?tag=ifx-chip&encapsulation=shadow","src/components/chips/chip.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n:host { \r\n  display: inline-block;\r\n}\r\n\r\n.container {\r\n  //display: inline-block;\r\n  position: relative;\r\n\r\n  & .wrapper {\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 8px 16px;\r\n    gap: tokens.$ifxSpace100;\r\n\r\n    background: tokens.$ifxColorBaseWhite;\r\n\r\n    border: 1px solid #BFBBBB;\r\n    border-radius: 100px;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      border: 1px solid #575352;\r\n    }\r\n\r\n    &:active {\r\n      border: 1px solid #0A8276;\r\n    }\r\n\r\n    & .wrapper-label {\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-size: tokens.$ifxFontSizeS;\r\n      line-height: tokens.$ifxLineHeightS;\r\n      display: flex;\r\n      align-items: center;\r\n      color: tokens.$ifxColorBaseBlack;\r\n      flex: none;\r\n      order: 0;\r\n      flex-grow: 0;\r\n    }\r\n\r\n    & .wrapper-close-button {\r\n      & ifx-icon {\r\n        transition: .3s;\r\n        width: 12px;\r\n        height: 12px;\r\n      }\r\n\r\n      &.show {\r\n        & ifx-icon {\r\n          transition: .3s;\r\n          transform: rotate(-180deg);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}","import { Component, h, Element, Prop, Listen, State, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-chip',\r\n  styleUrl: 'chip.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class Chip {\r\n  @Element() el;\r\n  @Prop() placeholder: string;\r\n  @State() selectedValue: string = \"\";\r\n  @Event() ifxDropdownMenu: EventEmitter<CustomEvent>;\r\n\r\n  @Listen('mousedown', { target: 'document' })\r\n  handleOutsideClick(event: MouseEvent) {\r\n    const path = event.composedPath();\r\n    if (!path.includes(this.el)) {\r\n      this.closedMenu();\r\n    }\r\n  }\r\n\r\n  @Listen('ifxDropdownItem')\r\n  handleDropdownItemValueEmission(event: CustomEvent) {\r\n    this.selectedValue = event.detail;\r\n    this.ifxDropdownMenu.emit(event.detail);\r\n    this.toggleMenu()\r\n  }\r\n\r\n  getDropdownMenu() { \r\n    let dropdownMenuComponent = this.el.querySelector('ifx-dropdown-menu');\r\n    return dropdownMenuComponent\r\n  }\r\n\r\n  closedMenu() {\r\n    let dropdownMenuComponent = this.getDropdownMenu()\r\n    dropdownMenuComponent.isOpen = false;\r\n  }\r\n\r\n  toggleMenu() { \r\n    let dropdownMenuComponent = this.getDropdownMenu()\r\n    dropdownMenuComponent.isOpen = !dropdownMenuComponent.isOpen;\r\n    this.toggleCloseIcon()\r\n  }\r\n\r\n  toggleCloseIcon() { \r\n    const closeIconWrapper = this.el.shadowRoot.querySelector('.wrapper-close-button')\r\n    closeIconWrapper.classList.toggle('show')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div aria-value={this.selectedValue} aria-label='chip with a dropdown menu' class=\"dropdown container\">\r\n        <div class=\"wrapper\" onClick={() => this.toggleMenu()}>\r\n          <div class=\"wrapper-label\">\r\n            {this.selectedValue ? this.selectedValue : this.placeholder}\r\n          </div>\r\n          <div class=\"wrapper-close-button\">\r\n            <ifx-icon icon=\"chevrondown12\"></ifx-icon>\r\n          </div>\r\n        </div>\r\n        <slot name=\"menu\" />\r\n      </div>\r\n    );\r\n  }\r\n}"],"version":3}