{"file":"ifx-table.js","mappings":"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","names":[],"sources":["src/components/table/interfaces.ts","src/components/table/buttonCellRenderer.ts","src/components/table/table.scss?tag=ifx-table","src/components/table/table.tsx"],"sourcesContent":["export interface ButtonInterface {\r\n  disabled?: boolean;\r\n  variant?: string,\r\n  size?: string,\r\n  target?: string,\r\n  color?: string,\r\n  text: string\r\n}\r\n\r\nexport const ButtonKeys: Array<keyof ButtonInterface> = ['disabled', 'variant', 'size', 'target', 'color', 'text'];\r\n\r\n\r\n","import { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\r\nimport { ButtonInterface, ButtonKeys } from './interfaces';\r\n\r\nexport class ButtonCellRenderer implements ICellRendererComp {\r\n  eGui!: HTMLDivElement;\r\n  eButton: any;\r\n  eValue: any;\r\n  cellValue: any;\r\n  eventListener!: () => void;\r\n\r\n  // gets called once before the renderer is used\r\n  init(params: ICellRendererParams) {\r\n    const config = params.data.button;\r\n    this.eGui = document.createElement('div');\r\n\r\n    if (this.hasRequiredKeys(config)) {\r\n      // create the cell\r\n      this.eGui.innerHTML = `\r\n        <span>\r\n          <ifx-button\r\n          disabled=${config.disabled}\r\n          variant=${config.variant}\r\n          size=${config.size}\r\n          target=${config.target}\r\n          color=${config.color}>\r\n          ${config.text}\r\n        </ifx-button>\r\n        </span>\r\n       `;\r\n\r\n      // get references to the elements we want\r\n      this.eButton = this.eGui.querySelector('ifx-button');\r\n    }\r\n    // // add event listener to button\r\n    // this.eventListener = () => alert('Button clicked!');\r\n    // this.eButton?.addEventListener('click', this.eventListener);\r\n    else {\r\n      this.eGui.innerHTML = `\r\n      <span>\r\n        ${config}\r\n      </span>\r\n     `;\r\n    }\r\n  }\r\n\r\n\r\n  getGui() {\r\n    return this.eGui;\r\n  }\r\n\r\n  // gets called whenever the cell refreshes\r\n  refresh(params: ICellRendererParams) {\r\n    // set value into cell again\r\n    const config = params.data.button;\r\n    this.eGui = document.createElement('div');\r\n    if (this.hasRequiredKeys(config)) {\r\n      // create the cell\r\n      this.eGui.innerHTML = `\r\n        <span>\r\n          <ifx-button\r\n          disabled=${config.disabled}\r\n          variant=${config.variant}\r\n          size=${config.size}\r\n          target=${config.target}\r\n          color=${config.color}>\r\n          ${config.text}\r\n        </ifx-button>\r\n        </span>\r\n       `;\r\n\r\n      // get references to the elements we want\r\n      this.eButton = this.eGui.querySelector('ifx-button');\r\n    }\r\n    // // add event listener to button\r\n    // this.eventListener = () => alert('Button clicked!');\r\n    // this.eButton?.addEventListener('click', this.eventListener);\r\n    else {\r\n      this.eGui.innerHTML = `\r\n      <span>\r\n        ${config}\r\n      </span>\r\n     `;\r\n    }\r\n    // return true to tell the grid we refreshed successfully\r\n    return true;\r\n  }\r\n\r\n  // gets called when the cell is removed from the grid\r\n  destroy() {\r\n    // do cleanup, remove event listener from button\r\n    if (this.eButton) {\r\n      // check that the button element exists as destroy() can be called before getGui()\r\n      this.eButton.removeEventListener('click', this.eventListener);\r\n    }\r\n  }\r\n\r\n  getFieldValueToDisplay(params: ICellRendererParams) {\r\n    return params.valueFormatted ? params.valueFormatted : params.value;\r\n  }\r\n\r\n  isObject(value: any): value is Object {\r\n    return value && typeof value === 'object' && value.constructor === Object;\r\n  }\r\n\r\n  hasRequiredKeys(obj: any): obj is ButtonInterface {\r\n    if (!this.isObject(obj)) return false;\r\n    return ButtonKeys.every(key => key in obj);\r\n  }\r\n\r\n}","@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n@import \"~ag-grid-community/styles/ag-grid.css\";\r\n@import \"~ag-grid-community/styles/ag-theme-alpine.css\";\r\n\r\n\r\n\r\n.auto-height .ag-theme-alpine .ag-root-wrapper-body {\r\n  height: auto !important;\r\n}\r\n\r\n\r\n\r\n.ag-root-wrapper {\r\n  border: none;\r\n}\r\n\r\n\r\n.ag-header {\r\n  background-color: tokens.$ifxColorEngineering100;\r\n  border-bottom: none;\r\n}\r\n\r\n.ag-header-cell {\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n  gap: 4px;\r\n}\r\n\r\n\r\n\r\n.ag-header-cell-text {\r\n  font-size: 13px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  line-height: 20px;\r\n  color: tokens.$ifxColorBaseBlack;\r\n}\r\n\r\n.ag-theme-alpine .ag-row-focus {\r\n  background-color: inherit !important;\r\n  /* Reset the hover color to the row's original color */\r\n}\r\n\r\n.ag-theme-alpine .ag-row-hover {\r\n  background-color: inherit !important;\r\n  /* Reset the hover color to the row's original color */\r\n}\r\n\r\n.ag-theme-alpine .ag-cell-focus {\r\n  border: none !important;\r\n  outline: none !important;\r\n\r\n}\r\n\r\n.ag-theme-alpine .ag-cell-focus {\r\n  border: none !important;\r\n  background-color: inherit !important;\r\n}\r\n\r\n\r\n\r\n.ag-row {\r\n  background-color: tokens.$ifxColorBaseWhite;\r\n  border-bottom: 1px solid tokens.$ifxColorEngineering200;\r\n  font-size: 13;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  line-height: 20px;\r\n\r\n}\r\n\r\n.ag-row-odd {\r\n  background-color: tokens.$ifxColorBaseWhite;\r\n}\r\n\r\n.ag-cell {\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n}\r\n\r\n.ag-ltr .ag-sort-indicator-icon {\r\n  padding-left: 0px;\r\n}\r\n\r\n.unsort-icon-custom-color {\r\n  color: tokens.$ifxColorEngineering400;\r\n}","import { Component, h, Prop, State } from '@stencil/core';\r\nimport { FirstDataRenderedEvent, Grid, GridOptions } from 'ag-grid-community';\r\nimport { ButtonCellRenderer } from './buttonCellRenderer';\r\n\r\n\r\n@Component({\r\n  tag: 'ifx-table',\r\n  styleUrl: 'table.scss',\r\n  shadow: false // only works with shadowdom off because we are using an external library\r\n})\r\nexport class Table {\r\n  @State() gridOptions: GridOptions;\r\n  @Prop() cols: any[] | string;\r\n  @Prop() rows: any[] | string;\r\n  @Prop() columnDefs: any[] = [];\r\n  @Prop() rowData: any[] = [];\r\n  @Prop() rowHeight: string = 'default'; //default or compact\r\n  @Prop() uniqueKey: string;\r\n  @Prop() tableHeight: string = 'auto';\r\n  @Prop() pagination: boolean = false;\r\n  @Prop() paginationPageSize: number = 10;\r\n\r\n\r\n\r\n  componentWillLoad() {\r\n    this.uniqueKey = `unique-${Math.floor(Math.random() * 1000000)}`;\r\n    if (typeof this.rows === 'string' && typeof this.cols === 'string') {\r\n      try {\r\n        this.columnDefs = JSON.parse(this.cols);\r\n        this.rowData = JSON.parse(this.rows);\r\n      } catch (err) {\r\n        console.error('Failed to parse input:', err);\r\n      }\r\n    } else if ((Array.isArray(this.rows) || typeof this.rows === 'object') && (Array.isArray(this.cols) || typeof this.cols === 'object')) {\r\n      this.columnDefs = this.cols;\r\n      this.rowData = this.rows;\r\n\r\n    } else {\r\n      console.error('Unexpected value for cols and rows:', this.rows, this.cols);\r\n    }\r\n    this.setButtonRenderer();\r\n\r\n\r\n    this.gridOptions = {\r\n      rowHeight: this.rowHeight === 'default' ? 40 : 32,\r\n      headerHeight: 40,\r\n      defaultColDef: {\r\n        resizable: true,\r\n      },\r\n      suppressDragLeaveHidesColumns: true,\r\n      onFirstDataRendered: this.onFirstDataRendered,\r\n      columnDefs: this.columnDefs,\r\n      rowData: this.rowData,\r\n      icons: {\r\n        sortAscending: '<ifx-icon icon=\"arrowtriangleup16\"></ifx-icon>',\r\n        sortDescending: '<ifx-icon icon=\"arrowtriangledown16\"></ifx-icon>',\r\n        sortUnSort: '<a class=\"unsort-icon-custom-color\"><ifx-icon icon=\"arrowtrianglevertikal16\"></ifx-icon></a>'\r\n      },\r\n      rowDragManaged: this.columnDefs.some(col => col.dndSource === true) ? true : false,\r\n      animateRows: this.columnDefs.some(col => col.dndSource === true) ? true : false,\r\n      pagination: this.pagination,\r\n      paginationPageSize: this.paginationPageSize,\r\n    };\r\n\r\n  }\r\n\r\n\r\n  onFirstDataRendered(params: FirstDataRenderedEvent) {\r\n    params.api.sizeColumnsToFit();\r\n  }\r\n\r\n\r\n  componentWillUpdate() {\r\n    this.gridOptions.columnDefs = this.columnDefs;\r\n    this.gridOptions.rowData = this.rowData;\r\n    if (this.gridOptions.api) {\r\n      this.gridOptions.api.setRowData(this.rowData);\r\n      this.gridOptions.api.setColumnDefs(this.columnDefs);\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    new Grid(document.getElementById(`ifxTable-${this.uniqueKey}`), this.gridOptions);\r\n    if (this.gridOptions.api) {\r\n      this.gridOptions.api.sizeColumnsToFit();\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    // if (this.gridOptions.rowDragManaged) {\r\n    //   // console.log(\"draggable table render\")\r\n    // }\r\n    return (\r\n      <div id=\"grid-wrapper\" class={{ 'auto-height': this.tableHeight === 'auto' ? true : false }}>\r\n\r\n        <div id={`ifxTable-${this.uniqueKey}`} class=\"ag-theme-alpine\" style={{\r\n          'height': `${this.tableHeight}`, width: '100%'\r\n        }}></div >\r\n      </div >\r\n    );\r\n\r\n\r\n  }\r\n\r\n\r\n  hasButtonCol(): boolean {\r\n    return this.columnDefs.some(column => column.field === 'button');\r\n  }\r\n\r\n\r\n\r\n  setButtonRenderer() {\r\n    const buttonColumn = this.columnDefs.find(column => column.field === 'button');\r\n    if (buttonColumn) {\r\n      buttonColumn.cellRenderer = ButtonCellRenderer;\r\n    }\r\n  }\r\n\r\n  // setIconButtonRenderer() {\r\n  //   const iconButtonColumn = this.columnDefs.find(column => column.field === 'iconButton');\r\n  //   if (iconButtonColumn) {\r\n  //     iconButtonColumn.cellRenderer = IconButtonCellRenderer;\r\n  //   }\r\n  // }\r\n\r\n  // setLinkRenderer() {\r\n  //   const linkColumn = this.columnDefs.find(column => column.field === 'link');\r\n  //   if (linkColumn) {\r\n  //     linkColumn.cellRenderer = LinkCellRenderer;\r\n  //   }\r\n  // }\r\n\r\n\r\n\r\n  onDragOver(event) {\r\n    var dragSupported = event.dataTransfer.length;\r\n\r\n    if (dragSupported) {\r\n      event.dataTransfer.dropEffect = 'move';\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDrop(event) {\r\n    var jsonData = event.dataTransfer.getData('application/json');\r\n\r\n    var eJsonRow = document.createElement('div');\r\n    eJsonRow.classList.add('json-row');\r\n    eJsonRow.innerText = jsonData;\r\n\r\n    var eJsonDisplay = document.querySelector('#eJsonDisplay');\r\n\r\n    eJsonDisplay.appendChild(eJsonRow);\r\n    event.preventDefault();\r\n  }\r\n\r\n}\r\n"],"version":3}