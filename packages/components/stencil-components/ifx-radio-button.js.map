{"file":"ifx-radio-button.js","mappings":";;AAAA,MAAM,cAAc,GAAG,k0FAAk0F;;MCO50F,WAAW;;;;;;oBAEM,KAAK;iBACR,KAAK;iBACL,KAAK;gBACJ,GAAG;;mBAED,IAAI;;EAKhC,YAAY,CAAC,QAAiB,EAAE,QAAiB;IAC/C,IAAI,QAAQ,KAAK,QAAQ,EAAE;MACzB,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;KAC/B;GACF;EAED,iBAAiB;IACf,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IAChC,MAAM,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC;IAC/B,IAAI,IAAI,EAAE;MACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACrB;;MAAM,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;GAC7B;EAED,sBAAsB;IACpB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;MACxD,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;MACzC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,CAAC;MAClE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACzC;GACF;EAED,MAAM;IACJ,QACE,yBACa,gBAAgB,gBAAa,IAAI,CAAC,KAAK,mBAAiB,IAAI,CAAC,QAAQ,EAChF,KAAK,EAAE,0BAA0B,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,EAC/E,OAAO,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,IAE/C,WACE,KAAK,EAAE;YACL,IAAI,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE;YACnC,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE;YAC/B,IAAI,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE,EAAE,EAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,IAE/B,IAAI,CAAC,aAAa,IAAI,WAAK,KAAK,EAAC,2BAA2B,GAAO,CAChE,EACL,IAAI,CAAC,OAAO,KACX,WAAK,KAAK,EAAE,SAAS,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG,SAAS,GAAG,EAAE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,EAAE,IAC1F,eAAQ,CACJ,CACP,CACG,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/radio-button/radio-button.scss?tag=ifx-radio-button&encapsulation=shadow","src/components/radio-button/radio-button.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n@use \"../../global/font.scss\";\r\n\r\n:host {\r\n    display: inline-flex;\r\n}\r\n\r\n.radioButton__container {\r\n    box-sizing: border-box;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 0px;\r\n    gap: tokens.$ifxSpace100;\r\n    cursor: pointer;\r\n\r\n    &.m .radioButton__wrapper {\r\n        width: tokens.$ifxSize300;\r\n        height: tokens.$ifxSize300;\r\n    }\r\n\r\n    .radioButton__wrapper {\r\n        width: tokens.$ifxSize250;\r\n        height: tokens.$ifxSize250;\r\n        position: relative;\r\n        display: block;\r\n        border-radius: 50%;\r\n        background-color: tokens.$ifxColorBaseWhite;\r\n        border: 1px solid #575352;\r\n\r\n        &:focus {\r\n            outline: none;\r\n\r\n            &::before {\r\n                content: '';\r\n                position: absolute;\r\n                width: calc(100% + 4px);\r\n                height: calc(100% + 4px);\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                border: 2px solid tokens.$ifxColorOcean500;\r\n                border-radius: 50%;\r\n            }\r\n        }\r\n\r\n        .radioButton__wrapper-mark {\r\n            position: absolute;\r\n            top: 50%;\r\n            left: 50%;\r\n            transform: translate(-50%, -50%);\r\n            background-color: #0A8276;\r\n            border-radius: 50%;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            border-color: tokens.$ifxColorBaseTransparent;\r\n        }\r\n\r\n        &:hover {\r\n            background-color: tokens.$ifxColorEngineering200;\r\n        }\r\n\r\n        &.disabled {\r\n            background-color: #BFBBBB;\r\n            border-color: #BFBBBB;\r\n\r\n            &.error {\r\n\r\n                &:hover,\r\n                &:focus-visible {\r\n                    border-color: #CD002F;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.checked {\r\n            border-color: #0A8276;\r\n\r\n            &::after {\r\n                content: \"\";\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                width: 10px;\r\n                height: 10px;\r\n                background-color: #0A8276;\r\n                border-radius: 50%;\r\n            }\r\n\r\n            &.disabled::after {\r\n                background-color: #BFBBBB;\r\n            }\r\n\r\n\r\n            &:hover {\r\n                border-color: tokens.$ifxColorOcean600;\r\n\r\n                & .radioButton__wrapper-mark {\r\n                    background-color: tokens.$ifxColorOcean600;\r\n                }\r\n            }\r\n\r\n            &.disabled {\r\n                background-color: tokens.$ifxColorBaseWhite;\r\n                border-color: #BFBBBB;\r\n\r\n                &.disabled::after {\r\n                    background-color: #BFBBBB;\r\n                }\r\n\r\n                & .radioButton__wrapper-mark {\r\n                    background-color: #BFBBBB;\r\n                }\r\n            }\r\n        }\r\n\r\n        &.error:not(.disabled) {\r\n            border-color: #CD002F;\r\n\r\n            &:hover,\r\n            &:focus-visible {\r\n                border-color: #CD002F;\r\n            }\r\n        }\r\n    }\r\n\r\n    .label {\r\n        display: flex;\r\n        align-items: center;\r\n        height: tokens.$ifxSize250;\r\n        font-style: normal;\r\n        font-weight: 400;\r\n        font-size: tokens.$ifxFontSizeS;\r\n        line-height: tokens.$ifxLineHeightS;\r\n        color: tokens.$ifxColorBaseBlack;\r\n        flex: none;\r\n        order: 1;\r\n        flex-grow: 0;\r\n\r\n        &.label-m {\r\n            height: tokens.$ifxSize300;\r\n            font-size: tokens.$ifxFontSizeM;\r\n            line-height: tokens.$ifxLineHeightM;\r\n        }\r\n\r\n        &.disabled {\r\n            color: #BFBBBB;\r\n        }\r\n\r\n\r\n\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}","import { Component, h, Prop, Element, State, Event, EventEmitter, Watch } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'ifx-radio-button',\r\n  styleUrl: 'radio-button.scss',\r\n  shadow: true\r\n})\r\nexport class RadioButton {\r\n  @Element() el;\r\n  @Prop() disabled: boolean = false;\r\n  @Prop() value: boolean = false;\r\n  @Prop() error: boolean = false;\r\n  @Prop() size: \"s\" | \"m\" = \"s\";\r\n  @State() internalValue: boolean;\r\n  @State() hasSlot: boolean = true;\r\n\r\n  @Event({ eventName: 'ifxChange' }) ifxChange: EventEmitter;\r\n\r\n  @Watch('value')\r\n  valueChanged(newValue: boolean, oldValue: boolean) {\r\n    if (newValue !== oldValue) {\r\n      this.internalValue = newValue;\r\n    }\r\n  }\r\n\r\n  componentWillLoad() {\r\n    this.internalValue = this.value;\r\n    const slot = this.el.innerHTML;\r\n    if (slot) {\r\n      this.hasSlot = true;\r\n    } else this.hasSlot = false;\r\n  }\r\n\r\n  handleRadioButtonClick() {\r\n    if (!this.disabled && !this.error && !this.internalValue) {\r\n      this.internalValue = !this.internalValue;\r\n      this.el.shadowRoot.querySelector('.radioButton__wrapper').focus();\r\n      this.ifxChange.emit(this.internalValue);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        aria-label='a radio button' aria-value={this.value} aria-disabled={this.disabled}\r\n        class={`radioButton__container ${this.size} ${this.disabled ? 'disabled' : ''}`}\r\n        onClick={this.handleRadioButtonClick.bind(this)}\r\n      >\r\n        <div\r\n          class={`radioButton__wrapper \r\n          ${this.internalValue ? 'checked' : ''} \r\n          ${this.disabled ? 'disabled' : ''} \r\n          ${this.error ? 'error' : ''}`}\r\n          tabIndex={this.disabled ? -1 : 0}\r\n        >\r\n          {this.internalValue && <div class=\"radioButton__wrapper-mark\"></div>}\r\n        </div>\r\n        {this.hasSlot && (\r\n          <div class={`label ${this.size === \"m\" ? \"label-m\" : \"\"} ${this.disabled ? 'disabled' : ''}`}>\r\n            <slot />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"version":3}