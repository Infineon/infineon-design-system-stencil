{"file":"ifx-icons-preview.js","mappings":";;;AAAA,MAAM,eAAe,GAAG,kwCAAkwC;;MCS7wC,YAAY;;;;;sBACS,EAAE;oBACL,KAAK;;mBAEP,0CAA0C;oBACzC,aAAa;;EAGzC,gBAAgB;IACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACrB,UAAU,CAAC;MACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;KACtB,EAAE,IAAI,CAAC,CAAC;GACV;EAED,YAAY,CAAC,IAAI;IACf,IAAI,CAAC,OAAO,GAAG,mBAAmB,IAAI,eAAe,CAAC;IACtD,IAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,GAAG,CAAA;GAC5B;EAED,cAAc;IACZ,MAAM,SAAS,GAAG,kBAAkB,IAAI,CAAC,QAAQ,cAAc,CAAC;IAChE,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,CAAC,gBAAgB,EAAE,CAAA;GACxB;EAED,iBAAiB;IACf,KAAI,IAAI,IAAI,IAAI,KAAK,EAAE;MACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAC3B;GACF;EAED,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,WAAW,IACpB,WAAK,KAAK,EAAC,cAAc,IACvB,YAAM,KAAK,EAAC,UAAU,QAAY,EAClC,YAAM,KAAK,EAAC,gBAAgB,eAAgB,EAC5C,YAAM,KAAK,EAAC,gBAAgB,YAAa,OAAC,YAAM,KAAK,EAAC,iBAAiB,IAAE,IAAI,CAAC,QAAQ,CAAQ,EAC9F,YAAM,KAAK,EAAC,UAAU,QAAY,EAClC,YAAM,KAAK,EAAC,UAAU,SAAa,EACnC,YAAM,KAAK,EAAC,gBAAgB,eAAgB,EAC5C,YAAM,KAAK,EAAC,UAAU,QAAY,EAClC,cAAQ,OAAO,EAAE,MAAM,IAAI,CAAC,cAAc,EAAE,IAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,MAAM,CAAU,CACtF,EACN,WAAK,KAAK,EAAC,oBAAoB,IAC5B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KACjC,WAAK,KAAK,EAAE,2BAA2B,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAC1I,gBAAU,IAAI,EAAE,IAAI,GAAa,CAC7B,CAAC,CACH,CACF,EACP;GACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/icons-preview/icons-preview.scss?tag=ifx-icons-preview&encapsulation=shadow","src/components/icons-preview/icons-preview.tsx"],"sourcesContent":["@use \"~@infineon/design-system-tokens/dist/tokens\";\r\n\r\n.container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.html-wrapper {\r\n  background: rgb(38, 38, 38);\r\n  padding: 20px;\r\n  color: white;\r\n  font-family: monospace;\r\n  position: relative;\r\n\r\n  & button {\r\n    position: absolute;\r\n    right: 0px;\r\n    bottom: 0px;\r\n    background: rgba(0, 0, 0, 0.85);\r\n    color: #C9CDCF;\r\n    border: 0 none;\r\n    padding: 4px 10px;\r\n    font-size: tokens.$ifxFontSizeXs;\r\n    font-family: \"Nunito Sans\";\r\n    font-weight: 700;\r\n    border-top: 1px solid rgba(255, 255, 255, .1);\r\n    border-left: 1px solid rgba(255, 255, 255, .1);\r\n    margin-left: -1px;\r\n    border-radius: 4px 0 0 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & .component-name {\r\n    color: #A8FF60;\r\n  }\r\n\r\n  & .attribute-name {\r\n    color: rgb(150, 203, 254);\r\n  }\r\n\r\n  & .attribute-value {\r\n    color: rgb(180, 116, 221);\r\n  }\r\n\r\n\r\n}\r\n\r\n.preview__container {\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 2px;\r\n  flex-wrap: wrap;\r\n  gap: 4px;\r\n\r\n  & .preview__container-item {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border: 1px solid #f1f1f1;\r\n    padding: 2px;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: relative;\r\n\r\n    &:active {\r\n      border-color: #378375;\r\n    }\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n\r\n    &.copied {\r\n      &::after {\r\n        z-index: 10000;\r\n        content: 'copied!';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 50px;\r\n        background-color: #000;\r\n        color: white;\r\n        padding: 3px;\r\n        border-radius: 4px;\r\n      }\r\n    }\r\n  }\r\n}","import { Component, h, Element, State } from \"@stencil/core\";\r\nimport { icons } from '@infineon/infineon-icons';\r\n\r\n@Component({\r\n  tag: 'ifx-icons-preview',\r\n  styleUrl: './icons-preview.scss',\r\n  shadow: true\r\n})\r\n\r\nexport class IconsPreview {\r\n  @State() iconsArray: string[] = [];\r\n  @State() isCopied: boolean = false;\r\n  @State() copiedIndex: number;\r\n  @State() htmlTag: string = '<ifx-icon icon=\"calendar-16\"></ifx-icon>';\r\n  @State() iconName: string = `\"c-info-24\"`;\r\n  @Element() el;\r\n\r\n  handleCopiedText() { \r\n    this.isCopied = true;\r\n    setTimeout(() => {\r\n      this.isCopied = false\r\n    }, 2000);\r\n  }\r\n\r\n  copyIconText(icon) { \r\n    this.htmlTag = `<ifx-icon icon=\"${icon}\"></ifx-icon>`;\r\n    this.iconName = `\"${icon}\"`\r\n  }\r\n\r\n  copyHtmlString() { \r\n    const copiedTag = `<ifx-icon icon=${this.iconName}></ifx-icon>`;\r\n    navigator.clipboard.writeText(copiedTag);\r\n    this.handleCopiedText()\r\n  }\r\n\r\n  componentWillLoad() { \r\n    for(let icon in icons) { \r\n      this.iconsArray.push(icon)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div class='container'>\r\n        <div class='html-wrapper'>\r\n          <span class=\"html-tag\">&lt;</span>\r\n          <span class=\"component-name\">ifx-icon</span>\r\n          <span class=\"attribute-name\"> icon</span>=<span class=\"attribute-value\">{this.iconName}</span>\r\n          <span class=\"html-tag\">&gt;</span>\r\n          <span class=\"html-tag\">&lt;/</span>\r\n          <span class=\"component-name\">ifx-icon</span>\r\n          <span class=\"html-tag\">&gt;</span>\r\n          <button onClick={() => this.copyHtmlString()}>{this.isCopied ? 'Copied' : 'Copy'}</button>\r\n        </div>\r\n        <div class=\"preview__container\">\r\n          {this.iconsArray.map((icon, index) => \r\n          <div class={`preview__container-item ${this.isCopied && this.copiedIndex === index ? 'copied' : \"\"}`} onClick={() => this.copyIconText(icon)}>\r\n            <ifx-icon icon={icon}></ifx-icon>\r\n          </div>)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}"],"version":3}