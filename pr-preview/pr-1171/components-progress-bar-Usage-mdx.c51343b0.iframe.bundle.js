(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[5237,3511,7118],{"./src/components/progress-bar/Usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),progress_bar_stories=__webpack_require__("./src/components/progress-bar/progress-bar.stories.ts");const progressbar_4px_namespaceObject=__webpack_require__.p+"static/media/progressbar-4px.072833c0.png",progressbar_20px_namespaceObject=__webpack_require__.p+"static/media/progressbar-20px.79cf6365.png",progressbar_anatomy_namespaceObject=__webpack_require__.p+"static/media/progressbar-anatomy.d701eb05.png";function _createMdxContent(props){const _components={a:"a",br:"br",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,lib.R)(),...props.components};return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.W8,{of:progress_bar_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"progress-bar",children:"Progress Bar"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The Progress bar is a control element that visually represents the progress of a job or task. It provides feedback to users about the completion status of a process, such as installation or loading."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-to-use",children:"When to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"When you need to visually represent the progress or completion status of a task or process."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To show continuous progress, where the progress bar moves continuously until the task is completed."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"When you want to provide users with additional numerical information about the progress."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-not-to-use",children:"When not to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"When there is no relevant task or process that needs to be visually represented to the user."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"If the progress is not measurable or if the progress does not have a clear endpoint."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"If the progress you are trying to convey is better represented through alternative means, such as a spinner or alert messages"}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"anatomy",children:"Anatomy"}),"\n",(0,jsx_runtime.jsx)("img",{src:progressbar_anatomy_namespaceObject,alt:"Progress Bar Anatomy"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Fill (1)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","Shows the current progress of the bar."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Value (2)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","Can be displayed to give additional %-information."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Track (3)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","The horizontal bar that represents the entire progress range."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"size",children:"Size"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"There are two different sizes of the progress bar available: 4px and 20px."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"20px",children:"20px"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"This is the default size for the progress bar, suitable for most use cases where a normal visual presence is desired."}),"\n",(0,jsx_runtime.jsx)("img",{src:progressbar_20px_namespaceObject,alt:"Progress Bar Size 20px"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"4px",children:"4px"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"This size is ideal for situations where space is limited or a more compact representation of the progress bar is needed."}),"\n",(0,jsx_runtime.jsx)("img",{src:progressbar_4px_namespaceObject,alt:"Progress Bar Size 4px"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"progress-behavior",children:"Progress behavior"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Implement a technical solution so the progress bar always starts at ",(0,jsx_runtime.jsx)(_components.strong,{children:"2% of its maximum progress (instead of 0%)"}),".  Avoid starting at 0% as it can be frustrating for the user if progress really takes a few seconds to start."]}),"\n",(0,jsx_runtime.jsx)(_components.hr,{}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Check out the Figma component: ",(0,jsx_runtime.jsx)(_components.strong,{children:(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/zPvPwPgb4EsYFXKC2nhzSG/Infineon-DDS-%7C-Main?type=design&node-id=37224-10014&mode=design&t=15iRXx0cf6GC1SMq-4",rel:"nofollow",children:"Progress Bar"})})]}),"\n",(0,jsx_runtime.jsx)(_components.hr,{})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,lib.R)(),...props.components};return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,{...props,children:(0,jsx_runtime.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./src/components/progress-bar/progress-bar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Small:()=>Small,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Progress Bar",tags:["autodocs"],args:{size:"m",percentage:50,showLabel:!1},argTypes:{percentage:{control:{type:"range",min:0,max:100}},size:{description:"Size options: s (36px) and m (40px) - default: m",options:["s","m"],control:{type:"radio"}}}},Template=args=>{const wrapper=document.createElement("div");return wrapper.innerHTML=`\n    <ifx-progress-bar\n      value="${args.percentage}"\n      size="${args.size}"\n      show-label="${args.showLabel}"\n    ></ifx-progress-bar>\n  `,wrapper.innerHTML},Default=Template.bind({});Default.args={size:"m",percentage:50,showLabel:!1};const Small=Template.bind({});Small.args={percentage:75,size:"s"};const WithLabel=Template.bind({});WithLabel.args={percentage:25,showLabel:!0},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const wrapper = document.createElement(\'div\');\n  wrapper.innerHTML = `\n    <ifx-progress-bar\n      value="${args.percentage}"\n      size="${args.size}"\n      show-label="${args.showLabel}"\n    ></ifx-progress-bar>\n  `;\n  return wrapper.innerHTML;\n}',...Default.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'args => {\n  const wrapper = document.createElement(\'div\');\n  wrapper.innerHTML = `\n    <ifx-progress-bar\n      value="${args.percentage}"\n      size="${args.size}"\n      show-label="${args.showLabel}"\n    ></ifx-progress-bar>\n  `;\n  return wrapper.innerHTML;\n}',...Small.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:'args => {\n  const wrapper = document.createElement(\'div\');\n  wrapper.innerHTML = `\n    <ifx-progress-bar\n      value="${args.percentage}"\n      size="${args.size}"\n      show-label="${args.showLabel}"\n    ></ifx-progress-bar>\n  `;\n  return wrapper.innerHTML;\n}',...WithLabel.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Small","WithLabel"]},"../../node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="../../node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext}}]);