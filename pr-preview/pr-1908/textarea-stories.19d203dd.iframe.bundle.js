"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[9229],{"./src/components/textarea/textarea.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.js");exports.default={title:"Components/Textarea",tags:["autodocs"],args:{caption:"Caption text, description, error notification",cols:43,disabled:!1,error:!1,label:"Label Text",maxlength:void 0,name:"textarea",placeholder:"Placeholder",readOnly:!1,resize:"both",rows:5,value:"",wrap:"soft",fullWidth:!1},argTypes:{caption:{description:"Set the caption text of textarea.",table:{category:"ifx-textarea props"}},cols:{description:"Set the visible width of the textarea control.",control:{type:"number",min:0},table:{category:"ifx-textarea props",defaultValue:{summary:2}}},disabled:{description:"Disables the user interaction when set to true.",table:{category:"ifx-textarea props",defaultValue:{summary:!1}}},error:{description:"Set the component to error state.",table:{category:"ifx-textarea props",defaultValue:{summary:!1}}},label:{description:"Set the label of textarea component.",table:{category:"ifx-textarea props"}},maxlength:{description:"Set the maximum string length user can enter.",type:"number",table:{category:"ifx-textarea props"}},name:{description:"The name of the control. Useful for form handling.",table:{category:"ifx-textarea props",defaultValue:{summary:"ifx-textarea-[n]"}}},placeholder:{description:"Set the placeholder text of textarea.",table:{category:"ifx-textarea props"}},readOnly:{name:"read-only",description:"Text cannot be edited when set to true.\n \n*Note: It is different from disabled prop, control is focusable in readOnly mode unlike disabled.*",table:{category:"ifx-textarea props",defaultValue:{summary:"false"}}},resize:{description:"Sets whether the textarea is resizable, and if so, in which directions.",control:"radio",options:["both","vertical","horizontal","none"],table:{category:"ifx-textarea props",defaultValue:{summary:"none"}}},rows:{description:"Set the number of visible text lines for the textrarea control.",table:{category:"ifx-textarea props",defaultValue:{summary:2}}},value:{description:"Current value of the textarea.",table:{category:"ifx-textarea props"}},wrap:{description:"Indicates how the control should wrap the value for form submission.",control:"radio",options:["soft","hard","off"],table:{category:"ifx-textarea props",defaultValue:{summary:"soft"}}},fullWidth:{description:"When set to **true**, expands the textarea to take the full width of its container.",control:"boolean",table:{category:"ifx-textarea props",defaultValue:{summary:"false"}}},ifxInput:{description:"A custom event *ifxInput* is emitted immediately after the value of *<ifx-textarea>* changes.",table:{category:"custom events",type:{summary:"Framework integration",detail:'\nReact: onIfxInput={handleInput}\nVue: @ifxInput="handleInput"\nAngular: (ifxInput)="handleInput()"\nVanillaJs: .addEventListener("ifxInput", (event) => {/*handle input*/});'}}}}};exports.Default=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`\n<ifx-textarea \n\tcaption="${args.caption}"\n\tcols="${args.cols}"\n\tdisabled="${args.disabled}"\n\terror="${args.error}"\n\tlabel="${args.label}"\n\tmaxlength="${args.maxlength}"\n\tname="${args.name}"\n\tplaceholder="${args.placeholder}"\n\tread-only="${args.readOnly}"\n\tresize="${args.resize}"\n\trows="${args.rows}"\n\tvalue="${args.value}"\n\twrap="${args.wrap}"\n\tfull-width="${args.fullWidth}"\n/>\n`;const textarea=wrapper.querySelector("ifx-textarea");return textarea.addEventListener("ifxInput",(0,_addonActions.action)("ifxInput")),textarea}).bind({});module.exports.__namedExportsOrder=["Default"]}}]);