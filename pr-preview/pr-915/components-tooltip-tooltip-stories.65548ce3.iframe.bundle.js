"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2895],{"./src/components/tooltip/tooltip.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Tooltip",tags:["autodocs"],args:{header:"Tooltip headline",text:"Hi, I'm a tooltip",position:"auto",variant:"compact",icon:"c-info-24"},argTypes:{icon:{options:Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__.c).map((i=>i.name)),control:{type:"select"}},position:{options:["auto","bottom-start","top-start","left","bottom-end","top-end","right","bottom","top"],control:{type:"radio"}},variant:{options:["compact","dismissible","extended"],control:{type:"radio"}},header:{control:"text",if:{arg:"variant",neq:"compact"}}}},Default=(({header,text,variant,position,icon})=>{const element=document.createElement("ifx-tooltip");return"dismissible"!==variant&&"extended"!==variant||element.setAttribute("header",header),element.setAttribute("text",text),element.setAttribute("variant","extended"===variant?"extended":variant),element.setAttribute("position",position),element.setAttribute("icon",icon),element.textContent="I'm the tooltip reference element - Please hover me",element}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  header,\n  text,\n  variant,\n  position,\n  icon\n}) => {\n  const element = document.createElement('ifx-tooltip');\n  if (variant === 'dismissible' || variant === 'extended') {\n    element.setAttribute('header', header);\n  }\n  element.setAttribute('text', text);\n  element.setAttribute('variant', variant === 'extended' ? 'extended' : variant);\n  element.setAttribute('position', position);\n  element.setAttribute('icon', icon);\n  element.textContent = \"I'm the tooltip reference element - Please hover me\"; // Set content for the reference element\n\n  return element;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);