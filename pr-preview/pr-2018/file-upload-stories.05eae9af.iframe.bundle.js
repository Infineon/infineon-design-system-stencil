"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[9977],{"./src/components/file-upload/file-upload.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.UploadStatesDemo=exports.UploadRequiredError=exports.UploadAreaDragDrop=exports.Default=void 0;var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.js");const hideAllControlsExcept=allowedKeys=>{const allProps=["dragAndDrop","label","required","labelRequiredError","disabled","maxFiles","maxFileSizeMB","allowedFileTypes","additionalAllowedFileTypes","labelBrowseFiles","labelDragAndDrop","labelUploadedFilesHeading","labelFileTooLarge","labelUnsupportedFileType","labelUploaded","labelSupportedFormatsTemplate","labelFileSingular","labelFilePlural","labelMaxFilesInfo","labelMaxFilesExceeded","labelUploadFailed","ariaLabelBrowseFiles","ariaLabelDropzone","ariaLabelFileInput","ariaLabelRemoveFile","ariaLabelCancelUpload","ariaLabelRetryUpload","ariaLabelUploadingStatus","ariaLabelUploadedStatus","ariaLabelUploadFailedStatus"],argTypes={};for(const prop of allProps)allowedKeys.includes(prop)||(argTypes[prop]={table:{disable:!0}});return argTypes},disableCustomEventControls={ifxFileUploadAdd:{table:{disable:!0}},ifxFileUploadRemove:{table:{disable:!0}},ifxFileUploadChange:{table:{disable:!0}},ifxFileUploadError:{table:{disable:!0}},ifxFileUploadInvalid:{table:{disable:!0}},ifxFileUploadStart:{table:{disable:!0}},ifxFileUploadComplete:{table:{disable:!0}},ifxFileUploadAllComplete:{table:{disable:!0}},ifxFileUploadAbort:{table:{disable:!0}},ifxFileUploadDrop:{table:{disable:!0}},ifxFileUploadClick:{table:{disable:!0}},ifxFileUploadMaxFilesExceeded:{table:{disable:!0}},ifxFileUploadValidation:{table:{disable:!0}},ifxFileUploadRetry:{table:{disable:!0}}};exports.default={title:"Components/File Upload",tags:["autodocs"],parameters:{controls:{expanded:!0},docs:{description:{component:"Upload component with different interaction styles: button or drag-and-drop area."}}},argTypes:{dragAndDrop:{description:"Enables drag-and-drop upload area.",control:"boolean",table:{category:"Function",defaultValue:{summary:"false"}}},required:{description:"Marks the upload as required.",control:"boolean",table:{category:"Function",defaultValue:{summary:"false"}}},disabled:{description:"Disables the upload input.",control:"boolean",table:{category:"Function",defaultValue:{summary:"false"}}},maxFileSizeMB:{description:"Maximum file size in MB.",control:"number",table:{category:"Function",defaultValue:{summary:"7"}}},allowedFileTypes:{control:{type:"check"},options:["jpg","png","pdf","mov","mp3","mp4"],description:"Select one or more allowed file extensions. Internally mapped to MIME types.",table:{category:"Function"}},additionalAllowedFileTypes:{description:"Custom MIME types (comma-separated).",control:"text",table:{category:"Function"}},maxFiles:{description:"Maximum number of allowed files.",control:"number",table:{category:"Function"}},label:{control:"text",description:"Main label shown above input.",table:{category:"Label"}},labelRequiredError:{control:"text",description:"Shown when required and no file selected.",table:{category:"Label"}},labelBrowseFiles:{control:"text",table:{category:"Label"}},labelDragAndDrop:{control:"text",table:{category:"Label"}},labelUploadedFilesHeading:{control:"text",table:{category:"Label"}},labelFileTooLarge:{control:"text",table:{category:"Label"}},labelUnsupportedFileType:{control:"text",table:{category:"Label"}},labelUploaded:{control:"text",table:{category:"Label"}},labelSupportedFormatsTemplate:{control:"text",table:{category:"Label"}},labelFileSingular:{control:"text",table:{category:"Label"}},labelFilePlural:{control:"text",table:{category:"Label"}},labelMaxFilesInfo:{control:"text",table:{category:"Label"}},labelMaxFilesExceeded:{control:"text",table:{category:"Label"}},labelUploadFailed:{control:"text",table:{category:"Label"}},ariaLabelBrowseFiles:{control:"text",table:{category:"Aria Labels"}},ariaLabelDropzone:{control:"text",table:{category:"Aria Labels"}},ariaLabelFileInput:{control:"text",table:{category:"Aria Labels"}},ariaLabelRemoveFile:{control:"text",table:{category:"Aria Labels"}},ariaLabelCancelUpload:{control:"text",table:{category:"Aria Labels"}},ariaLabelRetryUpload:{control:"text",table:{category:"Aria Labels"}},ariaLabelUploadingStatus:{control:"text",table:{category:"Aria Labels"}},ariaLabelUploadedStatus:{control:"text",table:{category:"Aria Labels"}},ariaLabelUploadFailedStatus:{control:"text",table:{category:"Aria Labels"}},ifxFileUploadAdd:{action:"ifxFileUploadAdd",table:{category:"Custom Events"},description:"Triggered when valid files are added (via browse or drop)."},ifxFileUploadRemove:{action:"ifxFileUploadRemove",table:{category:"Custom Events"},description:"Fired when a user removes a file from the list."},ifxFileUploadChange:{action:"ifxFileUploadChange",table:{category:"Custom Events"},description:"Fired whenever the file list changes (add, remove, retry)."},ifxFileUploadError:{action:"ifxFileUploadError",table:{category:"Custom Events"},description:"Fired when a file is rejected or an upload fails."},ifxFileUploadInvalid:{action:"ifxFileUploadInvalid",table:{category:"Custom Events"},description:"Fired for invalid files (e.g., wrong type or size)."},ifxFileUploadStart:{action:"ifxFileUploadStart",table:{category:"Custom Events"},description:"Fired when an upload starts for a file."},ifxFileUploadComplete:{action:"ifxFileUploadComplete",table:{category:"Custom Events"},description:"Fired when a single file upload finishes successfully."},ifxFileUploadAllComplete:{action:"ifxFileUploadAllComplete",table:{category:"Custom Events"},description:"Fired when all current uploads have completed."},ifxFileUploadAbort:{action:"ifxFileUploadAbort",table:{category:"Custom Events"},description:"Fired when a user cancels an in-progress upload."},ifxFileUploadDrop:{action:"ifxFileUploadDrop",table:{category:"Custom Events"},description:"Fired when files are dropped via drag-and-drop."},ifxFileUploadClick:{action:"ifxFileUploadClick",table:{category:"Custom Events"},description:"Fired when the upload button or dropzone is clicked."},ifxFileUploadMaxFilesExceeded:{action:"ifxFileUploadMaxFilesExceeded",table:{category:"Custom Events"},description:"Fired when the selected files exceed the maxFiles limit."},ifxFileUploadValidation:{action:"ifxFileUploadValidation",table:{category:"Custom Events"},description:"Fired after required validation is checked."},ifxFileUploadRetry:{action:"ifxFileUploadRetry",table:{category:"Custom Events"},description:"Fired when the retry button is clicked for a failed upload."}}};const BaseTemplate=args=>{const el=document.createElement("ifx-file-upload");args.dragAndDrop&&el.setAttribute("drag-and-drop",""),el.setAttribute("max-file-size-m-b",args.maxFileSizeMB);const mappedTypes=(Array.isArray(args.allowedFileTypes)?args.allowedFileTypes:args.allowedFileTypes?.split(",")||[]).flatMap(type=>"jpg"===type?["jpg","jpeg"]:[type]),uniqueTypes=Array.from(new Set(mappedTypes));if(el.setAttribute("allowed-file-types",uniqueTypes.join(",")),args.additionalAllowedFileTypes){const value=Array.isArray(args.additionalAllowedFileTypes)?args.additionalAllowedFileTypes.join(","):args.additionalAllowedFileTypes;el.setAttribute("additional-allowed-file-types",value)}return void 0!==args.maxFiles&&null!==args.maxFiles&&el.setAttribute("max-files",String(args.maxFiles)),args.required?el.setAttribute("required",""):el.removeAttribute("required"),args.disabled?el.setAttribute("disabled",""):el.removeAttribute("disabled"),el.setAttribute("label",args.label),el.setAttribute("label-required-error",args.labelRequiredError),el.setAttribute("label-browse-files",args.labelBrowseFiles),el.setAttribute("label-drag-and-drop",args.labelDragAndDrop),el.setAttribute("label-uploaded-files-heading",args.labelUploadedFilesHeading),el.setAttribute("label-file-too-large",args.labelFileTooLarge),el.setAttribute("label-unsupported-file-type",args.labelUnsupportedFileType),el.setAttribute("label-uploaded",args.labelUploaded),el.setAttribute("label-supported-formats-template",args.labelSupportedFormatsTemplate),el.setAttribute("label-file-singular",args.labelFileSingular),el.setAttribute("label-file-plural",args.labelFilePlural),el.setAttribute("label-max-files-info",args.labelMaxFilesInfo),el.setAttribute("label-max-files-exceeded",args.labelMaxFilesExceeded),el.setAttribute("label-upload-failed",args.labelUploadFailed),el.setAttribute("aria-label-browse-files",args.ariaLabelBrowseFiles),el.setAttribute("aria-label-dropzone",args.ariaLabelDropzone),el.setAttribute("aria-label-file-input",args.ariaLabelFileInput),el.setAttribute("aria-label-remove-file",args.ariaLabelRemoveFile),el.setAttribute("aria-label-cancel-upload",args.ariaLabelCancelUpload),el.setAttribute("aria-label-retry-upload",args.ariaLabelRetryUpload),el.setAttribute("aria-label-uploading-status",args.ariaLabelUploadingStatus),el.setAttribute("aria-label-uploaded-status",args.ariaLabelUploadedStatus),el.setAttribute("aria-label-upload-failed-status",args.ariaLabelUploadFailedStatus),el.addEventListener("ifxFileUploadAdd",(0,_addonActions.action)("ifxFileUploadAdd")),el.addEventListener("ifxFileUploadRemove",(0,_addonActions.action)("ifxFileUploadRemove")),el.addEventListener("ifxFileUploadChange",(0,_addonActions.action)("ifxFileUploadChange")),el.addEventListener("ifxFileUploadError",(0,_addonActions.action)("ifxFileUploadError")),el.addEventListener("ifxFileUploadInvalid",(0,_addonActions.action)("ifxFileUploadInvalid")),el.addEventListener("ifxFileUploadStart",(0,_addonActions.action)("ifxFileUploadStart")),el.addEventListener("ifxFileUploadComplete",(0,_addonActions.action)("ifxFileUploadComplete")),el.addEventListener("ifxFileUploadAbort",(0,_addonActions.action)("ifxFileUploadAbort")),el.addEventListener("ifxFileUploadDrop",(0,_addonActions.action)("ifxFileUploadDrop")),el.addEventListener("ifxFileUploadClick",(0,_addonActions.action)("ifxFileUploadClick")),el.addEventListener("ifxFileUploadMaxFilesExceeded",(0,_addonActions.action)("ifxFileUploadMaxFilesExceeded")),el.addEventListener("ifxFileUploadValidation",(0,_addonActions.action)("ifxFileUploadValidation")),el.addEventListener("ifxFileUploadRetry",(0,_addonActions.action)("ifxFileUploadRetry")),el},Default=exports.Default=BaseTemplate.bind({});Default.args={dragAndDrop:!1,label:"Label",required:!1,labelRequiredError:"You must upload at least one file.",disabled:!1,maxFileSizeMB:7,allowedFileTypes:["jpg","png","pdf"],additionalAllowedFileTypes:"application/zip,text/csv",labelBrowseFiles:"Browse files",labelDragAndDrop:"Drag & Drop or browse files to upload",labelUploadedFilesHeading:"Uploaded files",labelFileTooLarge:"Upload failed. Max file size: {{size}}MB.",labelUnsupportedFileType:"Unsupported file type.",labelUploaded:"Successfully uploaded",labelSupportedFormatsTemplate:"Supported file formats: {{types}}. Max file size: {{size}}MB.",labelFileSingular:"file",labelFilePlural:"files",labelMaxFilesInfo:"You can upload up to {{count}} {{files}}.",labelMaxFilesExceeded:"You have exceeded the maximum of {{count}} {{files}}.",labelUploadFailed:"Upload failed. Please try again.",ariaLabelBrowseFiles:"Browse files",ariaLabelDropzone:"Upload area. Click to browse or drag and drop files.",ariaLabelFileInput:"Upload file",ariaLabelRemoveFile:"Remove file",ariaLabelCancelUpload:"Cancel upload",ariaLabelRetryUpload:"Retry upload",ariaLabelUploadingStatus:"Upload in progress",ariaLabelUploadedStatus:"Upload completed",ariaLabelUploadFailedStatus:"Upload failed"};(exports.UploadAreaDragDrop=BaseTemplate.bind({})).args={...Default.args,dragAndDrop:!0};const UploadStatesDemo=exports.UploadStatesDemo=BaseTemplate.bind({});UploadStatesDemo.args={...Default.args,dragAndDrop:!0},UploadStatesDemo.parameters={docs:{description:{story:"Visual preview of all file states (success, upload in progress, rejected)."}}},UploadStatesDemo.decorators=[storyFn=>{const el=storyFn();return setTimeout(()=>el?.injectDemoState?.(),0),el}],UploadStatesDemo.argTypes={...hideAllControlsExcept(["dragAndDrop"]),...disableCustomEventControls};const UploadRequiredError=exports.UploadRequiredError=BaseTemplate.bind({});UploadRequiredError.args={...Default.args,required:!0},UploadRequiredError.parameters={docs:{description:{story:"Demonstrates the error state when the upload is required but no files have been added."}}},UploadRequiredError.decorators=[storyFn=>{const el=storyFn();return setTimeout(()=>el?.triggerDemoValidation?.(),100),el}],UploadRequiredError.argTypes={...hideAllControlsExcept(["dragAndDrop"]),...disableCustomEventControls},module.exports.__namedExportsOrder=["UploadStatesDemo","UploadRequiredError","UploadAreaDragDrop","Default"]}}]);