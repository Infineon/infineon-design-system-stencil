"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2273],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/text-field/text-field.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/TextField",tags:["autodocs"],args:{error:!1,disabled:!1,success:!1,placeholder:"Placeholder",errorMessage:"",readonly:!1},argTypes:{onIfxInput:{action:"ifxInput"}}},Default=(({error,disabled,success,placeholder,errorMessage,readonly})=>{const element=document.createElement("ifx-text-field");element.setAttribute("error",error),element.setAttribute("disabled",disabled),element.setAttribute("success",success),element.setAttribute("placeholder",placeholder),element.setAttribute("error-message",errorMessage),element.setAttribute("readonly",readonly),element.addEventListener("ifxInput",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxInput"));const slotContent=document.createTextNode("Text field");return element.appendChild(slotContent),element}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  error,\n  disabled,\n  success,\n  placeholder,\n  errorMessage,\n  readonly\n}) => {\n  const element = document.createElement('ifx-text-field');\n  element.setAttribute('error', error);\n  element.setAttribute('disabled', disabled);\n  element.setAttribute('success', success);\n  element.setAttribute('placeholder', placeholder);\n  element.setAttribute('error-message', errorMessage);\n  element.setAttribute('readonly', readonly);\n  element.addEventListener('ifxInput', action('ifxInput'));\n  const slotContent = document.createTextNode('Text field');\n  element.appendChild(slotContent);\n  return element;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);