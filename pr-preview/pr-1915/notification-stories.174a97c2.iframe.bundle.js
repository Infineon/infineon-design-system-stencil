"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2490],{"./src/components/notification/notification.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@infineon/infineon-icons/dist/icons.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Notification",tags:["autodocs"],args:{label:"Sample Notification",variant:"success",icon:"c-check-16",linkText:"Link",linkHref:"https://www.example.com",linkTarget:"_blank"},argTypes:{label:{name:"Label of Notification",description:"Set the text label of the *<ifx-notification>*.",table:{category:"story controls",type:{summary:"string"}}},variant:{description:"Variant of the notification.",options:["success","locked","error","neutral"],control:{type:"radio"},table:{category:"ifx-notification props",defaultValue:{summary:"success"},type:{summary:"success | warning | error"}}},icon:{description:'The icon to be displayed in the notification. Choose "none" to display no icon.',options:["none",...Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__.Ptg).map(i=>i.name)],control:{type:"select"},table:{category:"ifx-notification props",type:{summary:"string"}}},linkText:{description:"Text for the link.",table:{category:"ifx-notification props",type:{summary:"string"}}},linkHref:{description:"URL for the link.",table:{category:"ifx-notification props",type:{summary:"string"}}},linkTarget:{options:["_blank","_self","_parent"],control:{type:"radio"},description:"Specifies where to open the linked document.",table:{category:"ifx-notification props",defaultValue:{summary:"_blank"},type:{summary:"_blank | _self | _parent"}}}}},Default=(args=>`<ifx-notification \n  icon = "${"none"===args.icon?"":args.icon}"\n  variant="${args.variant}" \n  link-text="${args.linkText}" \n  link-href="${args.linkHref}"\n  link-target="${args.linkTarget}">\n  ${args.label}\n</ifx-notification>`).bind({});Default.argTypes={};const __namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const icon = args.icon === \'none\' ? \'\' : args.icon;\n  return `<ifx-notification \n  icon = "${icon}"\n  variant="${args.variant}" \n  link-text="${args.linkText}" \n  link-href="${args.linkHref}"\n  link-target="${args.linkTarget}">\n  ${args.label}\n</ifx-notification>`;\n}',...Default.parameters?.docs?.source}}}}}]);