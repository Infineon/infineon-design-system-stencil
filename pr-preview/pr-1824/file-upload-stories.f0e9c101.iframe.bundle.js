"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2792,9977],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),__defProp=Object.defineProperty,ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!globalThis?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}var preview_exports={};((target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})})(preview_exports,{argsEnhancers:()=>argsEnhancers,loaders:()=>loaders});var isInInitialArgs=(name,initialArgs)=>typeof initialArgs[name]>"u"&&!(name in initialArgs),argsEnhancers=[context=>{let{initialArgs,argTypes,parameters:{actions:actions2}}=context;return actions2?.disable||!argTypes?{}:Object.entries(argTypes).filter((([name,argType])=>!!argType.action)).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action("string"==typeof argType.action?argType.action:name)),acc)),{})},context=>{let{initialArgs,argTypes,id,parameters:{actions:actions2}}=context;if(!actions2||actions2.disable||!actions2.argTypesRegex||!argTypes)return{};let argTypesRegex=new RegExp(actions2.argTypesRegex);return Object.entries(argTypes).filter((([name])=>!!argTypesRegex.test(name))).reduce(((acc,[name,argType])=>(isInInitialArgs(name,initialArgs)&&(acc[name]=action(name,{implicit:!0,id})),acc)),{})}],subscribed=!1,loaders=[context=>{let{parameters:{actions:actions2}}=context;if(!actions2?.disable&&!subscribed&&"__STORYBOOK_TEST_ON_MOCK_CALL__"in external_STORYBOOK_MODULE_GLOBAL_.global&&"function"==typeof external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__){(0,external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_TEST_ON_MOCK_CALL__)(((mock,args)=>{let name=mock.getMockName();"spy"!==name&&(!/^next\/.*::/.test(name)||["next/router::useRouter()","next/navigation::useRouter()","next/navigation::redirect","next/cache::","next/headers::cookies().set","next/headers::cookies().delete","next/headers::headers().set","next/headers::headers().delete"].some((prefix=>name.startsWith(prefix))))&&action(name)(args)})),subscribed=!0}}]},"./src/components/file-upload/file-upload.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UploadAreaDragDrop:()=>UploadAreaDragDrop,UploadFileButton:()=>UploadFileButton,UploadRequiredError:()=>UploadRequiredError,UploadStatesDemo:()=>UploadStatesDemo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/File Upload",tags:["autodocs"],parameters:{controls:{expanded:!0},docs:{description:{component:"Upload component with different interaction styles: button or drag-and-drop area."}}},argTypes:{dragAndDrop:{control:"boolean",description:"Enables drag-and-drop area. If false, a button-based upload is shown instead."},required:{control:"boolean",description:"If set to true, at least one file must be uploaded. Validation fails if empty."},disabled:{control:"boolean",description:"Disables the component and prevents all interaction (upload, drag-and-drop, removal, etc.)."},maxFileSizeMB:{control:"number",description:"Maximum file size allowed per file (in MB). Files larger than this will be rejected."},allowedFileTypes:{control:{type:"check"},options:["jpg","png","pdf","mov","mp3","mp4"],description:"Select one or more allowed file extensions. Internally mapped to MIME types."},additionalAllowedFileTypes:{control:"text",description:"Adds additional allowed file types using exact MIME types. Example: application/zip"},maxFiles:{control:{type:"number",min:1,step:1},description:"Maximum number of files that can be uploaded in total. Must be at least 1. If unset, unlimited."},label:{control:"text",description:"Label shown above the upload area.",table:{category:"LABELS"}},labelRequiredError:{control:"text",description:"Error message shown when no file is uploaded and `required` is true.",table:{category:"LABELS"}},labelBrowseFiles:{control:"text",description:"Text for the file selection button.",table:{category:"LABELS"}},labelDragAndDrop:{control:"text",description:"Text shown inside the drag-and-drop area.",table:{category:"LABELS"}},labelUploadedFilesHeading:{control:"text",description:"Heading above the uploaded files list.",table:{category:"LABELS"}},labelFileTooLarge:{control:"text",description:"Shown when a file exceeds the allowed size. Use {{size}}.",table:{category:"LABELS"}},labelUnsupportedFileType:{control:"text",description:"Shown when an unsupported file type is uploaded.",table:{category:"LABELS"}},labelUploaded:{control:"text",description:"Label shown after successful upload.",table:{category:"LABELS"}},labelUploadFailed:{control:"text",description:"Text shown when a file upload fails.",table:{category:"LABELS"}},labelSupportedFormatsTemplate:{control:"text",description:"Template showing supported file formats. Use {{types}} and {{size}}.",table:{category:"LABELS"}},labelFileSingular:{control:"text",description:"Singular word for file.",table:{category:"LABELS"}},labelFilePlural:{control:"text",description:"Plural word for file.",table:{category:"LABELS"}},labelMaxFilesInfo:{control:"text",description:"Message for max file info. Use {{count}}.",table:{category:"LABELS"}},labelMaxFilesExceeded:{control:"text",description:"Error when exceeding max files. Use {{count}}.",table:{category:"LABELS"}},ariaLabelBrowseFiles:{control:"text",description:"ARIA label for the file upload button.",table:{category:"ARIA LABELS"}},ariaLabelDropzone:{control:"text",description:"ARIA label for the dropzone.",table:{category:"ARIA LABELS"}},ariaLabelFileInput:{control:"text",description:"ARIA label for the file input.",table:{category:"ARIA LABELS"}},ariaLabelRemoveFile:{control:"text",description:"ARIA label for remove button.",table:{category:"ARIA LABELS"}},ariaLabelCancelUpload:{control:"text",description:"ARIA label for cancel button.",table:{category:"ARIA LABELS"}},ariaLabelRetryUpload:{control:"text",description:"ARIA label for retry button.",table:{category:"ARIA LABELS"}},ariaLabelUploadingStatus:{control:"text",description:"ARIA status for uploading.",table:{category:"ARIA LABELS"}},ariaLabelUploadedStatus:{control:"text",description:"ARIA status for success.",table:{category:"ARIA LABELS"}},ariaLabelUploadFailedStatus:{control:"text",description:"ARIA status for failed upload.",table:{category:"ARIA LABELS"}},ifxFileUploadAdd:{description:"Emitted when files are added.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadRemove:{description:"Emitted when a file is removed.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadChange:{description:"Emitted when file list changes.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadError:{description:"Emitted when an upload error occurs.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadInvalid:{description:"Emitted when file is invalid.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadStart:{description:"Emitted when upload starts.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadComplete:{description:"Emitted when upload completes.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadAllComplete:{description:"Emitted when all uploads are done.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadAbort:{description:"Emitted when an upload is cancelled.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadDrop:{description:"Emitted on file drop.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadClick:{description:"Emitted on click.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadMaxFilesExceeded:{description:"Emitted when too many files added.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadValidation:{description:"Emitted after required validation.",table:{category:"CUSTOM EVENTS"}},ifxFileUploadRetry:{description:"Emitted when retry is triggered.",table:{category:"CUSTOM EVENTS"}}}},renderFileUpload=args=>{const el=document.createElement("ifx-file-upload");args.dragAndDrop&&el.setAttribute("drag-and-drop",""),el.setAttribute("max-file-size-m-b",args.maxFileSizeMB);const mappedTypes=(Array.isArray(args.allowedFileTypes)?args.allowedFileTypes:args.allowedFileTypes.split(",")).flatMap((type=>"jpg"===type?["jpg","jpeg"]:[type]));if(args.additionalAllowedFileTypes){const value=Array.isArray(args.additionalAllowedFileTypes)?args.additionalAllowedFileTypes.join(","):args.additionalAllowedFileTypes;el.setAttribute("additional-allowed-file-types",value)}void 0!==args.maxFiles&&null!==args.maxFiles&&el.setAttribute("max-files",String(args.maxFiles)),args.required?el.setAttribute("required",""):el.removeAttribute("required"),args.disabled?el.setAttribute("disabled",""):el.removeAttribute("disabled");const uniqueTypes=Array.from(new Set(mappedTypes));return el.setAttribute("allowed-file-types",uniqueTypes.join(",")),el.setAttribute("label",args.label),el.setAttribute("label-required-error",args.labelRequiredError),el.setAttribute("label-browse-files",args.labelBrowseFiles),el.setAttribute("label-drag-and-drop",args.labelDragAndDrop),el.setAttribute("label-uploaded-files-heading",args.labelUploadedFilesHeading),el.setAttribute("label-file-too-large",args.labelFileTooLarge),el.setAttribute("label-unsupported-file-type",args.labelUnsupportedFileType),el.setAttribute("label-uploaded",args.labelUploaded),el.setAttribute("label-supported-formats-template",args.labelSupportedFormatsTemplate),el.setAttribute("label-file-singular",args.labelFileSingular),el.setAttribute("label-file-plural",args.labelFilePlural),el.setAttribute("label-max-files-info",args.labelMaxFilesInfo),el.setAttribute("label-max-files-exceeded",args.labelMaxFilesExceeded),el.setAttribute("label-upload-failed",args.labelUploadFailed),el.setAttribute("aria-label-browse-files",args.ariaLabelBrowseFiles),el.setAttribute("aria-label-dropzone",args.ariaLabelDropzone),el.setAttribute("aria-label-file-input",args.ariaLabelFileInput),el.setAttribute("aria-label-remove-file",args.ariaLabelRemoveFile),el.setAttribute("aria-label-cancel-upload",args.ariaLabelCancelUpload),el.setAttribute("aria-label-retry-upload",args.ariaLabelRetryUpload),el.setAttribute("aria-label-uploading-status",args.ariaLabelUploadingStatus),el.setAttribute("aria-label-uploaded-status",args.ariaLabelUploadedStatus),el.setAttribute("aria-label-upload-failed-status",args.ariaLabelUploadFailedStatus),el.addEventListener("ifxFileUploadAdd",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadAdd")),el.addEventListener("ifxFileUploadRemove",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadRemove")),el.addEventListener("ifxFileUploadChange",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadChange")),el.addEventListener("ifxFileUploadError",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadError")),el.addEventListener("ifxFileUploadInvalid",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadInvalid")),el.addEventListener("ifxFileUploadStart",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadStart")),el.addEventListener("ifxFileUploadComplete",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadComplete")),el.addEventListener("ifxFileUploadAbort",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadAbort")),el.addEventListener("ifxFileUploadDrop",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadDrop")),el.addEventListener("ifxFileUploadClick",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadClick")),el.addEventListener("ifxFileUploadMaxFilesExceeded",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadMaxFilesExceeded")),el.addEventListener("ifxFileUploadValidation",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadValidation")),el.addEventListener("ifxFileUploadRetry",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFileUploadRetry")),el},UploadFileButton={name:"Upload File (Button)",args:{dragAndDrop:!1,label:"Label",required:!1,labelRequiredError:"You must upload at least one file.",disabled:!1,maxFileSizeMB:7,allowedFileTypes:["jpg","png","pdf"],additionalAllowedFileTypes:"application/zip,text/csv",labelBrowseFiles:"Browse files",labelDragAndDrop:"Drag & Drop or browse files to upload",labelUploadedFilesHeading:"Uploaded files",labelFileTooLarge:"Upload failed. Max file size: {{size}}MB.",labelUnsupportedFileType:"Unsupported file type.",labelUploaded:"Successfully uploaded",labelSupportedFormatsTemplate:"Supported file formats: {{types}}. Max file size: {{size}}MB.",labelFileSingular:"file",labelFilePlural:"files",labelMaxFilesInfo:"You can upload up to {{count}} {{files}}.",labelMaxFilesExceeded:"You have exceeded the maximum of {{count}} {{files}}.",labelUploadFailed:"Upload failed. Please try again.",ariaLabelBrowseFiles:"Browse files",ariaLabelDropzone:"Upload area. Click to browse or drag and drop files.",ariaLabelFileInput:"Upload file",ariaLabelRemoveFile:"Remove file",ariaLabelCancelUpload:"Cancel upload",ariaLabelRetryUpload:"Retry upload",ariaLabelUploadingStatus:"Upload in progress",ariaLabelUploadedStatus:"Upload completed",ariaLabelUploadFailedStatus:"Upload failed"},render:renderFileUpload},UploadAreaDragDrop={name:"Upload Area (Drag&Drop)",args:{dragAndDrop:!0,label:"Label",required:!1,labelRequiredError:"You must upload at least one file.",disabled:!1,maxFileSizeMB:7,allowedFileTypes:["jpg","png","pdf"],additionalAllowedFileTypes:"application/zip,text/csv",labelBrowseFiles:"Browse files",labelDragAndDrop:"Drag & Drop or browse files to upload",labelUploadedFilesHeading:"Uploaded files",labelFileTooLarge:"Upload failed. Max file size: {{size}}MB.",labelUnsupportedFileType:"Unsupported file type.",labelUploaded:"Successfully uploaded",labelSupportedFormatsTemplate:"Supported file formats: {{types}}. Max file size: {{size}}MB.",labelFileSingular:"file",labelFilePlural:"files",labelMaxFilesInfo:"You can upload up to {{count}} {{files}}.",labelMaxFilesExceeded:"You have exceeded the maximum of {{count}} {{files}}.",labelUploadFailed:"Upload failed. Please try again.",ariaLabelBrowseFiles:"Browse files",ariaLabelDropzone:"Upload area. Click to browse or drag and drop files.",ariaLabelFileInput:"Upload file",ariaLabelRemoveFile:"Remove file",ariaLabelCancelUpload:"Cancel upload",ariaLabelRetryUpload:"Retry upload",ariaLabelUploadingStatus:"Upload in progress",ariaLabelUploadedStatus:"Upload completed",ariaLabelUploadFailedStatus:"Upload failed"},render:renderFileUpload},UploadStatesDemo={name:"Upload States (Demo)",args:{dragAndDrop:!1},parameters:{docs:{description:{story:"Visual preview of all file states (success, upload in progress, rejected). Only the `dragAndDrop` control is available."}},previewTabs:{canvas:{hidden:!1},"storybook/docs/panel":{hidden:!1},"storybook/actions/panel":{hidden:!0},"storybook/interactions/panel":{hidden:!0}}},argTypes:{dragAndDrop:{control:"boolean"},disabled:{table:{disable:!0}},labelUploadFailed:{table:{disable:!0}},required:{table:{disable:!0}},label:{table:{disable:!0}},labelRequiredError:{table:{disable:!0}},maxFileSizeMB:{table:{disable:!0}},allowedFileTypes:{table:{disable:!0}},additionalAllowedFileTypes:{table:{disable:!0}},labelBrowseFiles:{table:{disable:!0}},labelDragAndDrop:{table:{disable:!0}},labelFileSingular:{table:{disable:!0}},labelFilePlural:{table:{disable:!0}},maxFiles:{table:{disable:!0}},labelMaxFilesInfo:{table:{disable:!0}},labelMaxFilesExceeded:{table:{disable:!0}},labelUploadedFilesHeading:{table:{disable:!0}},labelFileTooLarge:{table:{disable:!0}},labelUnsupportedFileType:{table:{disable:!0}},labelUploaded:{table:{disable:!0}},labelSupportedFormatsTemplate:{table:{disable:!0}},ifxFileUploadAdd:{table:{disable:!0}},ifxFileUploadRemove:{table:{disable:!0}},ifxFileUploadChange:{table:{disable:!0}},ifxFileUploadError:{table:{disable:!0}},ifxFileUploadInvalid:{table:{disable:!0}},ifxFileUploadStart:{table:{disable:!0}},ifxFileUploadComplete:{table:{disable:!0}},ifxFileUploadAllComplete:{table:{disable:!0}},ifxFileUploadAbort:{table:{disable:!0}},ifxFileUploadDrop:{table:{disable:!0}},ifxFileUploadClick:{table:{disable:!0}},ifxFileUploadMaxFilesExceeded:{table:{disable:!0}},ifxFileUploadValidation:{table:{disable:!0}},ifxFileUploadRetry:{table:{disable:!0}},ariaLabelBrowseFiles:{table:{disable:!0}},ariaLabelDropzone:{table:{disable:!0}},ariaLabelFileInput:{table:{disable:!0}},ariaLabelRemoveFile:{table:{disable:!0}},ariaLabelCancelUpload:{table:{disable:!0}},ariaLabelRetryUpload:{table:{disable:!0}},ariaLabelUploadingStatus:{table:{disable:!0}},ariaLabelUploadedStatus:{table:{disable:!0}},ariaLabelUploadFailedStatus:{table:{disable:!0}}},render:args=>{const el=document.createElement("ifx-file-upload");return args.dragAndDrop&&el.setAttribute("drag-and-drop",""),setTimeout((()=>{el.injectDemoState?.()}),0),el}},UploadRequiredError={name:"Upload Required Error (Demo)",args:{dragAndDrop:!1},parameters:{docs:{description:{story:"Demonstrates the error state when the upload is required but no files have been added. Only `dragAndDrop` is controllable in this demo."}}},argTypes:{dragAndDrop:{control:"boolean"},disabled:{table:{disable:!0}},labelUploadFailed:{table:{disable:!0}},required:{table:{disable:!0}},label:{table:{disable:!0}},labelRequiredError:{table:{disable:!0}},maxFileSizeMB:{table:{disable:!0}},allowedFileTypes:{table:{disable:!0}},additionalAllowedFileTypes:{table:{disable:!0}},labelBrowseFiles:{table:{disable:!0}},labelDragAndDrop:{table:{disable:!0}},labelFileSingular:{table:{disable:!0}},labelFilePlural:{table:{disable:!0}},maxFiles:{table:{disable:!0}},labelMaxFilesInfo:{table:{disable:!0}},labelMaxFilesExceeded:{table:{disable:!0}},labelUploadedFilesHeading:{table:{disable:!0}},labelFileTooLarge:{table:{disable:!0}},labelUnsupportedFileType:{table:{disable:!0}},labelUploaded:{table:{disable:!0}},labelSupportedFormatsTemplate:{table:{disable:!0}},ifxFileUploadAdd:{table:{disable:!0}},ifxFileUploadRemove:{table:{disable:!0}},ifxFileUploadChange:{table:{disable:!0}},ifxFileUploadError:{table:{disable:!0}},ifxFileUploadInvalid:{table:{disable:!0}},ifxFileUploadStart:{table:{disable:!0}},ifxFileUploadComplete:{table:{disable:!0}},ifxFileUploadAllComplete:{table:{disable:!0}},ifxFileUploadAbort:{table:{disable:!0}},ifxFileUploadDrop:{table:{disable:!0}},ifxFileUploadClick:{table:{disable:!0}},ifxFileUploadMaxFilesExceeded:{table:{disable:!0}},ifxFileUploadValidation:{table:{disable:!0}},ifxFileUploadRetry:{table:{disable:!0}},ariaLabelBrowseFiles:{table:{disable:!0}},ariaLabelDropzone:{table:{disable:!0}},ariaLabelFileInput:{table:{disable:!0}},ariaLabelRemoveFile:{table:{disable:!0}},ariaLabelCancelUpload:{table:{disable:!0}},ariaLabelRetryUpload:{table:{disable:!0}},ariaLabelUploadingStatus:{table:{disable:!0}},ariaLabelUploadedStatus:{table:{disable:!0}},ariaLabelUploadFailedStatus:{table:{disable:!0}}},render:args=>{const el=document.createElement("ifx-file-upload");return args.dragAndDrop&&el.setAttribute("drag-and-drop",""),el.setAttribute("required",""),setTimeout((()=>{el.triggerDemoValidation?.()}),100),el}},__namedExportsOrder=["UploadFileButton","UploadAreaDragDrop","UploadStatesDemo","UploadRequiredError"];UploadFileButton.parameters={...UploadFileButton.parameters,docs:{...UploadFileButton.parameters?.docs,source:{originalSource:"{\n  name: 'Upload File (Button)',\n  args: {\n    dragAndDrop: false,\n    label: 'Label',\n    required: false,\n    labelRequiredError: 'You must upload at least one file.',\n    disabled: false,\n    maxFileSizeMB: 7,\n    allowedFileTypes: ['jpg', 'png', 'pdf'],\n    additionalAllowedFileTypes: 'application/zip,text/csv',\n    labelBrowseFiles: 'Browse files',\n    labelDragAndDrop: 'Drag & Drop or browse files to upload',\n    labelUploadedFilesHeading: 'Uploaded files',\n    labelFileTooLarge: 'Upload failed. Max file size: {{size}}MB.',\n    labelUnsupportedFileType: 'Unsupported file type.',\n    labelUploaded: 'Successfully uploaded',\n    labelSupportedFormatsTemplate: 'Supported file formats: {{types}}. Max file size: {{size}}MB.',\n    labelFileSingular: 'file',\n    labelFilePlural: 'files',\n    labelMaxFilesInfo: 'You can upload up to {{count}} {{files}}.',\n    labelMaxFilesExceeded: 'You have exceeded the maximum of {{count}} {{files}}.',\n    labelUploadFailed: 'Upload failed. Please try again.',\n    ariaLabelBrowseFiles: 'Browse files',\n    ariaLabelDropzone: 'Upload area. Click to browse or drag and drop files.',\n    ariaLabelFileInput: 'Upload file',\n    ariaLabelRemoveFile: 'Remove file',\n    ariaLabelCancelUpload: 'Cancel upload',\n    ariaLabelRetryUpload: 'Retry upload',\n    ariaLabelUploadingStatus: 'Upload in progress',\n    ariaLabelUploadedStatus: 'Upload completed',\n    ariaLabelUploadFailedStatus: 'Upload failed'\n  },\n  render: renderFileUpload\n}",...UploadFileButton.parameters?.docs?.source}}},UploadAreaDragDrop.parameters={...UploadAreaDragDrop.parameters,docs:{...UploadAreaDragDrop.parameters?.docs,source:{originalSource:"{\n  name: 'Upload Area (Drag&Drop)',\n  args: {\n    dragAndDrop: true,\n    label: 'Label',\n    required: false,\n    labelRequiredError: 'You must upload at least one file.',\n    disabled: false,\n    maxFileSizeMB: 7,\n    allowedFileTypes: ['jpg', 'png', 'pdf'],\n    additionalAllowedFileTypes: 'application/zip,text/csv',\n    labelBrowseFiles: 'Browse files',\n    labelDragAndDrop: 'Drag & Drop or browse files to upload',\n    labelUploadedFilesHeading: 'Uploaded files',\n    labelFileTooLarge: 'Upload failed. Max file size: {{size}}MB.',\n    labelUnsupportedFileType: 'Unsupported file type.',\n    labelUploaded: 'Successfully uploaded',\n    labelSupportedFormatsTemplate: 'Supported file formats: {{types}}. Max file size: {{size}}MB.',\n    labelFileSingular: 'file',\n    labelFilePlural: 'files',\n    labelMaxFilesInfo: 'You can upload up to {{count}} {{files}}.',\n    labelMaxFilesExceeded: 'You have exceeded the maximum of {{count}} {{files}}.',\n    labelUploadFailed: 'Upload failed. Please try again.',\n    ariaLabelBrowseFiles: 'Browse files',\n    ariaLabelDropzone: 'Upload area. Click to browse or drag and drop files.',\n    ariaLabelFileInput: 'Upload file',\n    ariaLabelRemoveFile: 'Remove file',\n    ariaLabelCancelUpload: 'Cancel upload',\n    ariaLabelRetryUpload: 'Retry upload',\n    ariaLabelUploadingStatus: 'Upload in progress',\n    ariaLabelUploadedStatus: 'Upload completed',\n    ariaLabelUploadFailedStatus: 'Upload failed'\n  },\n  render: renderFileUpload\n}",...UploadAreaDragDrop.parameters?.docs?.source}}},UploadStatesDemo.parameters={...UploadStatesDemo.parameters,docs:{...UploadStatesDemo.parameters?.docs,source:{originalSource:"{\n  name: 'Upload States (Demo)',\n  args: {\n    dragAndDrop: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Visual preview of all file states (success, upload in progress, rejected). Only the `dragAndDrop` control is available.'\n      }\n    },\n    previewTabs: {\n      'canvas': {\n        hidden: false\n      },\n      'storybook/docs/panel': {\n        hidden: false\n      },\n      'storybook/actions/panel': {\n        hidden: true\n      },\n      'storybook/interactions/panel': {\n        hidden: true\n      }\n    }\n  },\n  argTypes: {\n    dragAndDrop: {\n      control: 'boolean'\n    },\n    // Disable all other controls\n    disabled: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploadFailed: {\n      table: {\n        disable: true\n      }\n    },\n    required: {\n      table: {\n        disable: true\n      }\n    },\n    label: {\n      table: {\n        disable: true\n      }\n    },\n    labelRequiredError: {\n      table: {\n        disable: true\n      }\n    },\n    maxFileSizeMB: {\n      table: {\n        disable: true\n      }\n    },\n    allowedFileTypes: {\n      table: {\n        disable: true\n      }\n    },\n    additionalAllowedFileTypes: {\n      table: {\n        disable: true\n      }\n    },\n    labelBrowseFiles: {\n      table: {\n        disable: true\n      }\n    },\n    labelDragAndDrop: {\n      table: {\n        disable: true\n      }\n    },\n    labelFileSingular: {\n      table: {\n        disable: true\n      }\n    },\n    labelFilePlural: {\n      table: {\n        disable: true\n      }\n    },\n    maxFiles: {\n      table: {\n        disable: true\n      }\n    },\n    labelMaxFilesInfo: {\n      table: {\n        disable: true\n      }\n    },\n    labelMaxFilesExceeded: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploadedFilesHeading: {\n      table: {\n        disable: true\n      }\n    },\n    labelFileTooLarge: {\n      table: {\n        disable: true\n      }\n    },\n    labelUnsupportedFileType: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploaded: {\n      table: {\n        disable: true\n      }\n    },\n    labelSupportedFormatsTemplate: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAdd: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadRemove: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadChange: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadError: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadInvalid: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadStart: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadComplete: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAllComplete: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAbort: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadDrop: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadClick: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadMaxFilesExceeded: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadValidation: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadRetry: {\n      table: {\n        disable: true\n      }\n    },\n    // ARIA labels – disabled in demo\n    ariaLabelBrowseFiles: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelDropzone: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelFileInput: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelRemoveFile: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelCancelUpload: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelRetryUpload: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadingStatus: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadedStatus: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadFailedStatus: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  render: args => {\n    const el = document.createElement('ifx-file-upload');\n    if (args.dragAndDrop) {\n      el.setAttribute('drag-and-drop', '');\n    }\n    setTimeout(() => {\n      (el as any).injectDemoState?.();\n    }, 0);\n    return el;\n  }\n}",...UploadStatesDemo.parameters?.docs?.source}}},UploadRequiredError.parameters={...UploadRequiredError.parameters,docs:{...UploadRequiredError.parameters?.docs,source:{originalSource:"{\n  name: 'Upload Required Error (Demo)',\n  args: {\n    dragAndDrop: false\n  },\n  parameters: {\n    docs: {\n      description: {\n        story: 'Demonstrates the error state when the upload is required but no files have been added. Only `dragAndDrop` is controllable in this demo.'\n      }\n    }\n  },\n  argTypes: {\n    dragAndDrop: {\n      control: 'boolean'\n    },\n    // Disable all other controls\n    disabled: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploadFailed: {\n      table: {\n        disable: true\n      }\n    },\n    required: {\n      table: {\n        disable: true\n      }\n    },\n    label: {\n      table: {\n        disable: true\n      }\n    },\n    labelRequiredError: {\n      table: {\n        disable: true\n      }\n    },\n    maxFileSizeMB: {\n      table: {\n        disable: true\n      }\n    },\n    allowedFileTypes: {\n      table: {\n        disable: true\n      }\n    },\n    additionalAllowedFileTypes: {\n      table: {\n        disable: true\n      }\n    },\n    labelBrowseFiles: {\n      table: {\n        disable: true\n      }\n    },\n    labelDragAndDrop: {\n      table: {\n        disable: true\n      }\n    },\n    labelFileSingular: {\n      table: {\n        disable: true\n      }\n    },\n    labelFilePlural: {\n      table: {\n        disable: true\n      }\n    },\n    maxFiles: {\n      table: {\n        disable: true\n      }\n    },\n    labelMaxFilesInfo: {\n      table: {\n        disable: true\n      }\n    },\n    labelMaxFilesExceeded: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploadedFilesHeading: {\n      table: {\n        disable: true\n      }\n    },\n    labelFileTooLarge: {\n      table: {\n        disable: true\n      }\n    },\n    labelUnsupportedFileType: {\n      table: {\n        disable: true\n      }\n    },\n    labelUploaded: {\n      table: {\n        disable: true\n      }\n    },\n    labelSupportedFormatsTemplate: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAdd: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadRemove: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadChange: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadError: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadInvalid: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadStart: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadComplete: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAllComplete: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadAbort: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadDrop: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadClick: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadMaxFilesExceeded: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadValidation: {\n      table: {\n        disable: true\n      }\n    },\n    ifxFileUploadRetry: {\n      table: {\n        disable: true\n      }\n    },\n    // ARIA labels – disabled in demo\n    ariaLabelBrowseFiles: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelDropzone: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelFileInput: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelRemoveFile: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelCancelUpload: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelRetryUpload: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadingStatus: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadedStatus: {\n      table: {\n        disable: true\n      }\n    },\n    ariaLabelUploadFailedStatus: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  render: args => {\n    const el = document.createElement('ifx-file-upload');\n    if (args.dragAndDrop) el.setAttribute('drag-and-drop', '');\n    el.setAttribute('required', '');\n\n    // Fehlerzustand gezielt triggern\n    setTimeout(() => {\n      (el as any).triggerDemoValidation?.();\n    }, 100);\n    return el;\n  }\n}",...UploadRequiredError.parameters?.docs?.source}}}}}]);