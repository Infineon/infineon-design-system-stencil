"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[9877],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/components/list/list.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CheckboxList:()=>CheckboxList,RadioButtonList:()=>RadioButtonList,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/List",tags:["autodocs"],args:{name:"checkbox-list",maxVisibleItems:5,type:"checkbox"},argTypes:{type:{description:"Type options currently available: Checkbox and Radio button",options:["checkbox","radio-button"],control:{type:"radio"}},ifxListUpdate:{action:"ifxListUpdate",description:"Custom event emitted when the selected items in the list change",table:{type:{summary:"Framework integration",detail:'React: onIfxListUpdate={handleChange}\nVue:@ifxListUpdate="handleChange"\nAngular:(ifxListUpdate)="handleChange()"\nVanillaJs:.addEventListener("ifxListUpdate", (event) => {//handle change});'}}}}},CheckboxList=(args=>{const list=document.createElement("ifx-list");list.setAttribute("name",args.name),list.setAttribute("max-visible-items",args.maxVisibleItems),list.setAttribute("type",args.type);for(let i=1;i<=7;i++){const listEntry=document.createElement("ifx-list-entry");listEntry.setAttribute("type",args.type),listEntry.setAttribute("label",`Checkbox ${i}`),listEntry.setAttribute("value","false"),listEntry.setAttribute("slot",`slot${i}`),listEntry.textContent=`Checkbox ${i}`,list.appendChild(listEntry)}return list.addEventListener("ifxListUpdate",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxListUpdate")),setTimeout((()=>{const listEntry=document.createElement("ifx-list-entry");listEntry.setAttribute("type",args.type),listEntry.setAttribute("label","Checkbox 8"),listEntry.setAttribute("value","false"),listEntry.setAttribute("slot","slot8"),listEntry.textContent="Checkbox 8",list.appendChild(listEntry)}),3e3),list}).bind({});CheckboxList.args={name:"checkbox-list",type:"checkbox"};const RadioButtonList=(args=>{args.type="radio-button";const list=document.createElement("ifx-list");list.setAttribute("name",args.name),list.setAttribute("max-visible-items",args.maxVisibleItems),list.setAttribute("type",args.type);for(let i=1;i<=7;i++){const listEntry=document.createElement("ifx-list-entry");listEntry.setAttribute("type",args.type),listEntry.setAttribute("label",`Radio Button ${i}`),listEntry.setAttribute("value","false"),listEntry.setAttribute("slot",`slot${i}`),listEntry.textContent=`Radio Button ${i}`,list.appendChild(listEntry)}return list.addEventListener("ifxListUpdate",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxListUpdate")),list}).bind({});RadioButtonList.args={name:"radio-button-list",type:"radio-button"},CheckboxList.parameters={...CheckboxList.parameters,docs:{...CheckboxList.parameters?.docs,source:{originalSource:"args => {\n  const list = document.createElement('ifx-list');\n  list.setAttribute('name', args.name);\n  list.setAttribute('max-visible-items', args.maxVisibleItems);\n  list.setAttribute('type', args.type);\n  for (let i = 1; i <= 7; i++) {\n    const listEntry = document.createElement('ifx-list-entry');\n    listEntry.setAttribute('type', args.type);\n    listEntry.setAttribute('label', `Checkbox ${i}`);\n    listEntry.setAttribute('value', 'false');\n    listEntry.setAttribute('slot', `slot${i}`); // Assign a unique slot name to each entry\n    listEntry.textContent = `Checkbox ${i}`;\n    list.appendChild(listEntry);\n  }\n  list.addEventListener('ifxListUpdate', action('ifxListUpdate'));\n\n  // Add a new list entry after 3 seconds\n  setTimeout(() => {\n    const listEntry = document.createElement('ifx-list-entry');\n    listEntry.setAttribute('type', args.type);\n    listEntry.setAttribute('label', `Checkbox 8`);\n    listEntry.setAttribute('value', 'false');\n    listEntry.setAttribute('slot', `slot8`); // Assign a unique slot name to the new entry\n    listEntry.textContent = `Checkbox 8`;\n    list.appendChild(listEntry);\n  }, 3000);\n  return list;\n}",...CheckboxList.parameters?.docs?.source}}},RadioButtonList.parameters={...RadioButtonList.parameters,docs:{...RadioButtonList.parameters?.docs,source:{originalSource:"args => {\n  args.type = 'radio-button';\n  const list = document.createElement('ifx-list');\n  list.setAttribute('name', args.name);\n  list.setAttribute('max-visible-items', args.maxVisibleItems);\n  list.setAttribute('type', args.type);\n  for (let i = 1; i <= 7; i++) {\n    const listEntry = document.createElement('ifx-list-entry');\n    listEntry.setAttribute('type', args.type);\n    listEntry.setAttribute('label', `Radio Button ${i}`);\n    listEntry.setAttribute('value', 'false');\n    listEntry.setAttribute('slot', `slot${i}`); // Assign a unique slot name to each entry\n    listEntry.textContent = `Radio Button ${i}`;\n    list.appendChild(listEntry);\n  }\n  list.addEventListener('ifxListUpdate', action('ifxListUpdate'));\n  return list;\n}",...RadioButtonList.parameters?.docs?.source}}};const __namedExportsOrder=["CheckboxList","RadioButtonList"]}}]);