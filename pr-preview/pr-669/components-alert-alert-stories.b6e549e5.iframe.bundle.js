"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[9616],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/alert/alert.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Alert",tags:["autodocs"],args:{label:"Attention! This is an alert message â€” check it out!",color:"primary",showIcon:!0,iconName:"c-info-24"},argTypes:{color:{options:["primary","secondary","danger","warning"],control:{type:"radio"}},iconName:{options:Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__.c).map((i=>i.name)),control:{type:"select"}},ifxClose:{action:"ifxClose",description:"Custom event emitted when close button clicked",table:{type:{summary:"Framework integration",detail:'React: onIfxClose={handleChange}\nVue:@ifxClose="handleChange"\nAngular:(ifxClose)="handleChange()"\nVanillaJs:.addEventListener("ifxClose", (event) => {//handle change});'}}}}},Default=(({color,iconName,label,showIcon})=>{const alert=document.createElement("ifx-alert");return alert.setAttribute("color",color),alert.setAttribute("icon",showIcon?iconName:""),alert.addEventListener("ifxClose",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("ifxClose")),alert.innerHTML=label,alert}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  color,\n  iconName,\n  label,\n  showIcon\n}) => {\n  const alert = document.createElement('ifx-alert');\n  alert.setAttribute('color', color);\n  alert.setAttribute('icon', showIcon ? iconName : \"\");\n  alert.addEventListener('ifxClose', action('ifxClose'));\n  alert.innerHTML = label;\n  return alert;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);