"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[6521],{"./src/components/chip/chip.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Single=exports.ReadOnly=exports.Multi=exports.Default=void 0;var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.js");exports.default={title:"Components/Chip",tags:["autodocs"],parameters:{docs:{story:{height:"100px"}}},args:{amountOfChipItems:4,chipItemLabel:"Item Label",placeholder:"Label",size:"large",variant:"single",readOnly:!1,selected:!1,value:"Item Value",ariaLabel:"Chip"},argTypes:{amountOfChipItems:{name:"Amount of Chip Items",control:"number",description:"Control the number of *<ifx-chip-item>* in a Chip.",table:{category:"story controls",type:{summary:null}}},chipItemLabel:{name:"Label of Chip Item",description:"Set the label of *<ifx-chip-item>*.",table:{category:"story controls"}},placeholder:{description:"Set the placeholder string.",table:{category:"ifx-chip props"}},size:{description:"Switch the size of Chip.",control:"radio",options:["large","small"],table:{category:"ifx-chip props",defaultValue:{summary:"large"},type:{summary:"large | small"}}},variant:{description:"Switch the variant of Chip.",control:"radio",options:["single","multi"],table:{category:"ifx-chip props",defaultValue:{summary:"single"},type:{summary:"single | multi"}}},readOnly:{name:"read-only",description:"No dropdown menu. The chip component is read-only.",control:"boolean",table:{category:"ifx-chip props",defaultValue:{summary:!1}}},ariaLabel:{control:{type:"text"},description:"Set the aria label of the chip item. Enhances accessibility.",table:{category:"ifx-chip props"}},selected:{description:"Set the *selected* prop to pre-select the chip item.",table:{category:"ifx-chip-item props",defaultValue:{summary:"false"}}},value:{description:"Set the value of chip item.",table:{category:"ifx-chip-item props"}},ifxChange:{action:"ifxChange",description:"A custom event emitted when the selection in a *<ifx-chip>* is updated.",table:{category:"custom events",type:{summary:"Framework integration",detail:'\nReact: onIfxChange={handleChange}\nVue: @ifxChange="handleChange"\nAngular: (ifxChange)="handleChange()"\nVanillaJs: .addEventListener("ifxChange", (event) => {/*handle change*/});'}}}}};const Template=args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`\n<ifx-chip\nplaceholder="${args.placeholder}"\nsize="${args.size}"\nvariant="${args.variant}"\nread-only="${args.readOnly}"\naria-label="${args.ariaLabel}"\n>\n  ${Array.from({length:args.amountOfChipItems},(_,chipItemId)=>{const chipItem=document.createElement("ifx-chip-item");return chipItem.innerHTML=args.chipItemLabel+" "+(chipItemId+1),chipItem.setAttribute("value",args.value+" "+(chipItemId+1)),args.selected&&1===chipItemId&&chipItem.setAttribute("selected","true"),args.readOnly&&("multi"===args.variant||0===chipItemId)&&chipItem.setAttribute("selected","true"),chipItem.outerHTML}).join("\n    ")}\n</ifx-chip>`;const chip=wrapper.querySelector("ifx-chip");return chip.addEventListener("ifxChange",(0,_addonActions.action)("ifxChange")),chip};(exports.Default=Template.bind({})).tags=["!dev","!autodocs"];const Single=exports.Single=Template.bind({});Single.args={variant:"single"},Single.argTypes={variant:{table:{disable:!0}}};const Multi=exports.Multi=Template.bind({});Multi.args={variant:"multi"},Multi.argTypes={variant:{table:{disable:!0}}};const ReadOnly=exports.ReadOnly=Template.bind({});ReadOnly.args={readOnly:!0,variant:"multi"},ReadOnly.argTypes={readOnly:{table:{disable:!0}}},module.exports.__namedExportsOrder=["Single","ReadOnly","Multi","Default"]}}]);