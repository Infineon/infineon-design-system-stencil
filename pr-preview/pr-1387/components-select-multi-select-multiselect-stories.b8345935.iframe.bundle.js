"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[1981],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/components/select/multi-select/multiselect.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Select/Multi Select",args:{size:"m",batchSize:10,maxItemCount:10,searchEnabled:!0,selectAllEnabled:!0,error:!1,errorMessage:"Some error",label:"",disabled:!1,placeholder:"Placeholder"},argTypes:{size:{name:"Size",options:{"small (36px)":"s","medium (40px)":"m"},control:{type:"radio"}},batchSize:{name:"Batch size",description:"Batch size used during lazy loading options",control:{type:"number"}},maxItemCount:{name:"Maximum selectable items",control:{type:"number"},description:"Number of maximum selectable items"},disabled:{name:"Disabled",options:[!0,!1],control:{type:"radio"}},searchEnabled:{name:"Enable search",options:[!0,!1],control:{type:"radio"}},selectAllEnabled:{name:"Enable Select All",description:"Show a checkbox to select all options",options:[!0,!1],control:{type:"radio"}},error:{name:"Error",options:[!0,!1],control:{type:"radio"}},errorMessage:{name:"Error message",control:"text"},label:{name:"Label",control:"text"},placeholder:{name:"Placeholder",control:"text"},options:{name:"Options",description:"Takes an array of objects in the following format"},ifxSelect:{name:"Custom event: ifxSelect",action:"ifxSelect",description:"Custom event emitted when item is selected or unselected",table:{type:{summary:"Framework integration",detail:'React: onIfxSelect={handleInput}\nVue:@ifxSelect="handleInput"\nAngular:(ifxSelect)="handleInput()"\nVanillaJs:.addEventListener("ifxSelect", (event) => {//handle input});'}}}}},Default=(args=>{const template=`<ifx-multiselect \n  options='${JSON.stringify(args.options)}' \n  batch-size='${args.batchSize}'\n  size='${args.size}'\n  max-item-count='${args.maxItemCount}'\n  error='${args.error}'\n  error-message='${args.errorMessage}'\n  label='${args.label}'\n  placeholder='${args.placeholder}'\n  disabled='${args.disabled}'\n  search-enabled='${args.searchEnabled}'\n  select-all-enabled='${args.selectAllEnabled}'>\n</ifx-multiselect>`;return setTimeout((()=>{document.querySelector("ifx-multiselect").addEventListener("ifxSelect",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxSelect"))}),0),template}).bind({});Default.args={options:[{value:"a",label:"option a",selected:!1},{value:"b",label:"option b",selected:!1},{value:"z",label:"option z",selected:!1,children:[{value:"z1",label:"option z1",selected:!1},{value:"z2",label:"option z2",selected:!1}]}]},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const template = `<ifx-multiselect \n  options='${JSON.stringify(args.options)}' \n  batch-size='${args.batchSize}'\n  size='${args.size}'\n  max-item-count='${args.maxItemCount}'\n  error='${args.error}'\n  error-message='${args.errorMessage}'\n  label='${args.label}'\n  placeholder='${args.placeholder}'\n  disabled='${args.disabled}'\n  search-enabled='${args.searchEnabled}'\n  select-all-enabled='${args.selectAllEnabled}'>\n</ifx-multiselect>`;\n  setTimeout(() => {\n    document.querySelector('ifx-multiselect').addEventListener('ifxSelect', action('ifxSelect'));\n  }, 0);\n  return template;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);