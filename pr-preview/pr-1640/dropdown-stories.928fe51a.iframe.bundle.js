"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2792],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("../../node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/components/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LabelTrigger:()=>LabelTrigger,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Dropdown",tags:["autodocs"],args:{label:"Dropdown",disabled:!1,defaultOpen:!1,noCloseOnOutsideClick:!1,noCloseOnMenuClick:!1,noAppendToBody:!1,variant:"primary",placement:"bottom-start",size:"m",searchField:!1,header:!1,separator:!1,href:"",target:"_self",icon:"c-info-16"},argTypes:{placement:{description:"Specifies the position of the dropdown relative to its trigger element.",options:["auto","auto-start","auto-end","top","top-start","top-end","bottom","bottom-start","bottom-end","right","right-start","right-end","left","left-start","left-end"],control:"select",table:{category:"ifx-dropdown props",defaultValue:{summary:"bottom-start"}}},label:{name:"Label of Dropdown",description:"The visible name or label for the dropdown button.",table:{category:"story controls",defaultValue:{summary:"Dropdown"}}},size:{description:"Font Size options for menu items: s (14px) and m (16px) - default: m.",options:["s","m"],control:"radio",table:{category:"ifx-dropdown-menu props",defaultValue:{summary:"m"}}},disabled:{description:"Determines if the dropdown button should be disabled.",control:"boolean",table:{category:"ifx-dropdown props",defaultValue:{summary:!1}}},variant:{description:'The visual style of the dropdown button. Accepted values are "primary", "secondary", "tertiary".',options:["primary","secondary","tertiary"],control:"radio",table:{category:"ifx-dropdown-trigger-button props",defaultValue:{summary:"primary"}}},target:{description:"Determines where to open the linked document when the dropdown item is clicked.",options:["_self","_blank"],control:"radio",table:{category:"ifx-dropdown-item props",defaultValue:{summary:"_self"}}},href:{description:"href link to menu item.",table:{category:"ifx-dropdown-item props"}},icon:{description:"The icon to be displayed on the dropdown items.",options:["none",...Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_1__.P).map((i=>i.name))],control:"select",table:{category:"ifx-dropdown-item props",defaultValue:{summary:"c-info-16"}}},searchField:{description:"Show Search Bar.",table:{category:"ifx-dropdown-menu props",defaultValue:{summary:!1}}},header:{description:"Add Header Text.",table:{category:"ifx-dropdown-menu props",defaultValue:{summary:!1}}},separator:{description:"Use separator in dropdown.",table:{category:"ifx-dropdown-menu props",defaultValue:{summary:!1}}},defaultOpen:{description:"Determines if the dropdown should be open by default.",control:"boolean",table:{category:"ifx-dropdown props",defaultValue:{summary:!1}}},noCloseOnOutsideClick:{description:"Determines if the dropdown should not close when a click outside the dropdown happens.",control:"boolean",table:{category:"ifx-dropdown props",defaultValue:{summary:!1}}},noCloseOnMenuClick:{description:"Determines if the dropdown should not close when a click inside the dropdown menu happens.",control:"boolean",table:{category:"ifx-dropdown props",defaultValue:{summary:!1}}},noAppendToBody:{description:"Determines if the dropdown should not be appended to the body.",control:"boolean",table:{category:"ifx-dropdown props",defaultValue:{summary:!1}}},ifxOpen:{action:"ifxOpen",description:"Custom event that is emitted when the dropdown opens.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxOpen={handleChange}\nVue:@ifxOpen="handleChange"\nAngular:(ifxOpen)="handleChange()"\nVanillaJs:.addEventListener("ifxOpen", (event) => {//handle change});'}}},ifxClose:{action:"ifxClose",description:"Custom event emitted when dropdown closes.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxClose={handleChange}\nVue:@ifxClose="handleChange"\nAngular:(ifxClose)="handleChange()"\nVanillaJs:.addEventListener("ifxClose", (event) => {//handle change});'}}},ifxDropdownMenuItem:{action:"ifxDropdownMenuItem",description:"Custom event emitted when an item is selected.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxDropdownMenuItem={handleChange}\nVue:@ifxDropdownMenuItem="handleChange"\nAngular:(ifxDropdownMenuItem)="handleChange()"\nVanillaJs:.addEventListener("ifxDropdownMenuItem", (event) => {//handle change});'}}}}},Default=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`<ifx-dropdown placement="${args.placement}" \n  disabled="${args.disabled}" \n  default-open="${args.defaultOpen}"\n  no-close-on-outside-click="${args.noCloseOnOutsideClick}"\n  no-close-on-menu-click="${args.noCloseOnOutsideClick}"\n  no-append-to-body="${args.noAppendToBody}">\n\n    <ifx-dropdown-trigger-button variant="${args.variant}">\n      ${args.label}\n    </ifx-dropdown-trigger-button>\n\n  <ifx-dropdown-menu size="${args.size}">\n    ${args.header?"<ifx-dropdown-header>Header Text</ifx-dropdown-header>":""}\n    ${args.searchField?'<ifx-search-field show-delete-icon="false"></ifx-search-field>':""}\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    ${args.separator?"<ifx-dropdown-separator></ifx-dropdown-separator>":""}\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;const dropdown=wrapper.querySelector("ifx-dropdown"),dropdownMenu=dropdown.querySelector("ifx-dropdown-menu");return dropdown.addEventListener("ifxOpen",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxOpen")),dropdown.addEventListener("ifxClose",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxClose")),dropdownMenu.addEventListener("ifxDropdownMenuItem",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxDropdownMenuItem")),wrapper}).bind({}),LabelTrigger=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`<ifx-dropdown\n    placement="${args.placement}"\n    default-open="${args.defaultOpen}"\n    no-close-on-outside-click="${args.noCloseOnOutsideClick}"\n    no-close-on-menu-click="${args.noCloseOnOutsideClick}"\n    disabled="${args.disabled}"\n    no-append-to-body="${args.noAppendToBody}"\n  >\n    Hello World! Click on the text to open the dropdown\n    <ifx-dropdown-trigger>\n      <ifx-icon icon="c-check-16"></ifx-icon>\n    </ifx-dropdown-trigger>\n    Some more text\n  <ifx-dropdown-menu size="${args.size}">\n    ${args.header?"<ifx-dropdown-header>Header Text</ifx-dropdown-header>":""}\n    ${args.search?'<ifx-search-field show-delete-icon="false"></ifx-search-field>':""}\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n    ${args.separator?"<ifx-dropdown-separator></ifx-dropdown-separator>":""}\n    <ifx-dropdown-item icon="${"none"===args.icon?"":args.icon}" target="${args.target}" href="${""!==args.href?args.href:""}">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;const dropdown=wrapper.querySelector("ifx-dropdown"),dropdownMenu=dropdown.querySelector("ifx-dropdown-menu");return dropdown.addEventListener("ifxOpen",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxOpen")),dropdown.addEventListener("ifxClose",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxClose")),dropdownMenu.addEventListener("ifxDropdownMenuItem",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxDropdownMenuItem")),wrapper}).bind({});LabelTrigger.argTypes={label:{table:{disable:!0}},variant:{table:{disable:!0}}};const __namedExportsOrder=["Default","LabelTrigger"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = `<ifx-dropdown placement=\"${args.placement}\" \n  disabled=\"${args.disabled}\" \n  default-open=\"${args.defaultOpen}\"\n  no-close-on-outside-click=\"${args.noCloseOnOutsideClick}\"\n  no-close-on-menu-click=\"${args.noCloseOnOutsideClick}\"\n  no-append-to-body=\"${args.noAppendToBody}\">\n\n    <ifx-dropdown-trigger-button variant=\"${args.variant}\">\n      ${args.label}\n    </ifx-dropdown-trigger-button>\n\n  <ifx-dropdown-menu size=\"${args.size}\">\n    ${args.header ? `<ifx-dropdown-header>Header Text</ifx-dropdown-header>` : ''}\n    ${args.searchField ? `<ifx-search-field show-delete-icon=\"false\"></ifx-search-field>` : ''}\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    ${args.separator ? `<ifx-dropdown-separator></ifx-dropdown-separator>` : ''}\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;\n  const dropdown = wrapper.querySelector('ifx-dropdown') as HTMLElement;\n  const dropdownMenu = dropdown.querySelector('ifx-dropdown-menu');\n  dropdown.addEventListener('ifxOpen', action('ifxOpen'));\n  dropdown.addEventListener('ifxClose', action('ifxClose'));\n  dropdownMenu.addEventListener('ifxDropdownMenuItem', action('ifxDropdownMenuItem'));\n  return wrapper;\n}",...Default.parameters?.docs?.source}}},LabelTrigger.parameters={...LabelTrigger.parameters,docs:{...LabelTrigger.parameters?.docs,source:{originalSource:"args => {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = `<ifx-dropdown\n    placement=\"${args.placement}\"\n    default-open=\"${args.defaultOpen}\"\n    no-close-on-outside-click=\"${args.noCloseOnOutsideClick}\"\n    no-close-on-menu-click=\"${args.noCloseOnOutsideClick}\"\n    disabled=\"${args.disabled}\"\n    no-append-to-body=\"${args.noAppendToBody}\"\n  >\n    Hello World! Click on the text to open the dropdown\n    <ifx-dropdown-trigger>\n      <ifx-icon icon=\"${'c-check-16'}\"></ifx-icon>\n    </ifx-dropdown-trigger>\n    Some more text\n  <ifx-dropdown-menu size=\"${args.size}\">\n    ${args.header ? `<ifx-dropdown-header>Header Text</ifx-dropdown-header>` : ''}\n    ${args.search ? `<ifx-search-field show-delete-icon=\"false\"></ifx-search-field>` : ''}\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n    ${args.separator ? `<ifx-dropdown-separator></ifx-dropdown-separator>` : ''}\n    <ifx-dropdown-item icon=\"${args.icon === 'none' ? '' : args.icon}\" target=\"${args.target}\" href=\"${args.href !== '' ? args.href : ''}\">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;\n  const dropdown = wrapper.querySelector('ifx-dropdown') as HTMLElement;\n  const dropdownMenu = dropdown.querySelector('ifx-dropdown-menu');\n  dropdown.addEventListener('ifxOpen', action('ifxOpen'));\n  dropdown.addEventListener('ifxClose', action('ifxClose'));\n  dropdownMenu.addEventListener('ifxDropdownMenuItem', action('ifxDropdownMenuItem'));\n  return wrapper;\n}",...LabelTrigger.parameters?.docs?.source}}}}}]);