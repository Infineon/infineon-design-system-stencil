"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[5600],{"./src/components/search-field/search-field.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,SearchSuggestions:()=>SearchSuggestions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const genericMockSuggestions=[{id:"short1",text:"Lorem",type:"suggestion"},{id:"short2",text:"Ipsum",type:"suggestion"},{id:"short3",text:"Dolor",type:"suggestion"},{id:"short4",text:"Sit",type:"suggestion"},{id:"short5",text:"Amet",type:"suggestion"},{id:"medium1",text:"Lorem ipsum",type:"suggestion",scope:"Consectetur",resultCount:1247},{id:"medium2",text:"Dolor sit",type:"suggestion",scope:"Adipiscing",resultCount:892},{id:"medium3",text:"Consectetur adipiscing",type:"suggestion",scope:"Elite",resultCount:567},{id:"medium4",text:"Sed do eiusmod",type:"suggestion",scope:"Tempor",resultCount:2341},{id:"medium5",text:"Ut labore",type:"suggestion",scope:"Dolore",resultCount:1098},{id:"medium6",text:"Magna aliqua",type:"suggestion"},{id:"medium7",text:"Enim ad minim",type:"suggestion"},{id:"medium8",text:"Veniam quis",type:"suggestion"},{id:"medium9",text:"Nostrud exercitation",type:"suggestion"},{id:"medium10",text:"Ullamco laboris",type:"suggestion"},{id:"long1",text:"Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore",type:"suggestion",scope:"Fugiat nulla pariatur",resultCount:156},{id:"long2",text:"Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia",type:"suggestion",scope:"Deserunt mollit anim",resultCount:789},{id:"long3",text:"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium",type:"suggestion",scope:"Doloremque laudantium",resultCount:234},{id:"long4",text:"Totam rem aperiam eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt",type:"suggestion"},{id:"long5",text:"Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit sed quia consequuntur magni dolores",type:"suggestion"},{id:"scope1",text:"Neque porro quisquam",type:"suggestion",scope:"Adipisci velit"},{id:"scope2",text:"Ut enim ad minima",type:"suggestion",scope:"Veniam quis nostrum"},{id:"scope3",text:"Quis autem vel eum",type:"suggestion",scope:"Iure reprehenderit"},{id:"longscope1",text:"Temporibus autem",type:"suggestion",scope:"Quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet",resultCount:445},{id:"longscope2",text:"Et harum quidem",type:"suggestion",scope:"Rerum facilis est et expedita distinctio nam libero tempore",resultCount:1876},{id:"extreme1",text:"At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident",type:"suggestion",scope:"Similique sunt in culpa qui officia deserunt mollitia animi id est laborum et dolorum fuga",resultCount:999},{id:"misc1",text:"Itaque earum rerum",type:"suggestion",scope:"Hic tenetur",resultCount:1567},{id:"misc2",text:"Sapiente delectus",type:"suggestion"},{id:"misc3",text:"Aut reiciendis",type:"suggestion",scope:"Voluptatibus maiores",resultCount:823},{id:"misc4",text:"Alias consequatur",type:"suggestion"},{id:"misc5",text:"Aut perferendis",type:"suggestion",scope:"Doloribus asperiores",resultCount:1234}],genericMockHistory=["Lorem ipsum dolor sit amet","Consectetur adipiscing elit","Sed do eiusmod tempor","Ut labore et dolore magna","Enim ad minim veniam"],resetHistoryForStorybook=historyKey=>{"undefined"!=typeof localStorage&&localStorage.setItem(historyKey,JSON.stringify(genericMockHistory))},__WEBPACK_DEFAULT_EXPORT__={title:"Components/Search Field",args:{showDeleteIcon:!0,disabled:!1,size:"m",value:"",placeholder:"Search...",autocomplete:"on",showSuggestions:!1,enableHistory:!0,maxSuggestions:10,maxHistoryItems:5,historyKey:"ifx-search-history",historyHeaderText:"Recent Searches",ariaLabel:"Search field",deleteIconAriaLabel:"Clear search",historyDeleteAriaLabel:"Remove from history",dropdownAriaLabel:"Search suggestions and history",suggestionAriaLabel:"Search suggestion",historyItemAriaLabel:"Search history item"},argTypes:{showDeleteIcon:{description:"Determines whether a delete icon is shown in the search field.",control:"boolean",table:{category:"ifx-search-field props",defaultValue:{summary:!0}}},disabled:{description:"Disables the search field, preventing user interaction.",control:"boolean",table:{category:"ifx-search-field props",defaultValue:{summary:!1}}},size:{description:"Size options: s (36px) and m (40px) - default: m.",control:"radio",options:["s","m"],table:{category:"ifx-search-field props",defaultValue:{summary:"m"}}},placeholder:{description:"Placeholder text displayed in the search field when it is empty.",control:"text",table:{category:"ifx-search-field props",defaultValue:{summary:"Search..."}}},maxlength:{description:"Specifies the maximum number of characters that can be entered into the search field.",control:"number",table:{category:"ifx-search-field props"}},value:{description:"The value of the search field. It is used for the form submission.",control:"text",table:{category:"ifx-search-field props"}},autocomplete:{description:'Sets the autocomplete attribute. "on" by default.',control:"text",table:{category:"ifx-search-field props"}},ifxInput:{action:"ifxInput",description:"A custom event triggered whenever there is input in the search field.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxInput={handleInput}\nVue:@ifxInput="handleInput"\nAngular:(ifxInput)="handleInput()"\nVanillaJs:.addEventListener("ifxInput", (event) => {//handle input});'}}},showSuggestions:{description:"Enables the suggestions dropdown with external suggestions.",control:"boolean",table:{category:"Search Suggestions",defaultValue:{summary:!1}}},enableHistory:{description:"Enables search history functionality with localStorage persistence.",control:"boolean",table:{category:"Search Suggestions",defaultValue:{summary:!0}}},maxSuggestions:{description:"Maximum number of suggestions to display in the dropdown.",control:"number",table:{category:"Search Suggestions",defaultValue:{summary:10}}},maxHistoryItems:{description:"Maximum number of history items to store and display.",control:"number",table:{category:"Search Suggestions",defaultValue:{summary:5}}},historyKey:{description:"LocalStorage key for persisting search history.",control:"text",table:{category:"Search Suggestions",defaultValue:{summary:"ifx-search-history"}}},historyHeaderText:{description:"Header text displayed above history entries in the dropdown.",control:"text",table:{category:"Search Suggestions",defaultValue:{summary:"Recent Searches"}}},ariaLabel:{description:"ARIA label for the search field component.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Search field"}}},ariaLabelledBy:{description:"ID of element that labels the search field.",control:"text",table:{category:"Accessibility"}},ariaDescribedBy:{description:"ID of element that describes the search field.",control:"text",table:{category:"Accessibility"}},deleteIconAriaLabel:{description:"ARIA label for the delete/clear icon.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Clear search"}}},historyDeleteAriaLabel:{description:"ARIA label for history delete buttons.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Remove from history"}}},dropdownAriaLabel:{description:"ARIA label for the suggestions dropdown.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Search suggestions and history"}}},suggestionAriaLabel:{description:"ARIA label prefix for suggestion items.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Search suggestion"}}},historyItemAriaLabel:{description:"ARIA label prefix for history items.",control:"text",table:{category:"Accessibility",defaultValue:{summary:"Search history item"}}},ifxSuggestionRequested:{action:"ifxSuggestionRequested",description:"Event triggered when the component requests suggestions for a query.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxSuggestionRequested={handleSuggestionRequest}\nVue: @ifxSuggestionRequested="handleSuggestionRequest"\nAngular: (ifxSuggestionRequested)="handleSuggestionRequest()"\nVanillaJs: .addEventListener("ifxSuggestionRequested", (event) => {//handle request});'}}},ifxSuggestionSelected:{action:"ifxSuggestionSelected",description:"Event triggered when a suggestion is selected from the dropdown.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxSuggestionSelected={handleSuggestionSelection}\nVue: @ifxSuggestionSelected="handleSuggestionSelection"\nAngular: (ifxSuggestionSelected)="handleSuggestionSelection()"\nVanillaJs: .addEventListener("ifxSuggestionSelected", (event) => {//handle selection});'}}},ifxFocus:{action:"ifxFocus",description:"Event triggered when the search field receives focus.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxFocus={handleFocus}\nVue: @ifxFocus="handleFocus"\nAngular: (ifxFocus)="handleFocus()"\nVanillaJs: .addEventListener("ifxFocus", (event) => {//handle focus});'}}},ifxBlur:{action:"ifxBlur",description:"Event triggered when the search field loses focus.",table:{category:"custom events",type:{summary:"Framework integration",detail:'React: onIfxBlur={handleBlur}\nVue: @ifxBlur="handleBlur"\nAngular: (ifxBlur)="handleBlur()"\nVanillaJs: .addEventListener("ifxBlur", (event) => {//handle blur});'}}}}},Default=(({disabled,size,showDeleteIcon,placeholder,maxlength,value,autocomplete,showSuggestions,enableHistory,maxSuggestions,maxHistoryItems,historyKey,historyHeaderText,ariaLabel,ariaLabelledBy,ariaDescribedBy,deleteIconAriaLabel,historyDeleteAriaLabel,dropdownAriaLabel,suggestionAriaLabel,historyItemAriaLabel})=>{const element=document.createElement("ifx-search-field");return element.setAttribute("size",size),element.setAttribute("disabled",disabled),element.setAttribute("show-delete-icon",showDeleteIcon),element.setAttribute("show-suggestions",showSuggestions),element.setAttribute("enable-history",enableHistory),element.setAttribute("max-suggestions",maxSuggestions),element.setAttribute("max-history-items",maxHistoryItems),element.setAttribute("history-key",historyKey),element.setAttribute("history-header-text",historyHeaderText),element.setAttribute("value",value),element.setAttribute("autocomplete",autocomplete),null!=placeholder&&element.setAttribute("placeholder",placeholder),null!=maxlength&&element.setAttribute("maxlength",maxlength),null!=ariaLabel&&element.setAttribute("aria-label",ariaLabel),null!=ariaLabelledBy&&element.setAttribute("aria-labelledby",ariaLabelledBy),null!=ariaDescribedBy&&element.setAttribute("aria-describedby",ariaDescribedBy),null!=deleteIconAriaLabel&&element.setAttribute("delete-icon-aria-label",deleteIconAriaLabel),null!=historyDeleteAriaLabel&&element.setAttribute("history-delete-aria-label",historyDeleteAriaLabel),null!=dropdownAriaLabel&&element.setAttribute("dropdown-aria-label",dropdownAriaLabel),null!=suggestionAriaLabel&&element.setAttribute("suggestion-aria-label",suggestionAriaLabel),null!=historyItemAriaLabel&&element.setAttribute("history-item-aria-label",historyItemAriaLabel),setTimeout(()=>{showSuggestions&&(element.suggestions=genericMockSuggestions),enableHistory&&"undefined"!=typeof localStorage&&resetHistoryForStorybook(historyKey)},100),element.addEventListener("ifxInput",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxInput")),element.addEventListener("ifxSuggestionRequested",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxSuggestionRequested")),element.addEventListener("ifxSuggestionSelected",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxSuggestionSelected")),element.addEventListener("ifxFocus",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFocus")),element.addEventListener("ifxBlur",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxBlur")),element.addEventListener("ifxSuggestionRequested",event=>{const query=event.detail;if(query&&showSuggestions){const filteredSuggestions=genericMockSuggestions.filter(s=>s.text.toLowerCase().includes(query.toLowerCase()));element.suggestions=filteredSuggestions}}),element}).bind({}),SearchSuggestions=(({disabled,size,showDeleteIcon,placeholder,maxlength,value,autocomplete,showSuggestions,enableHistory,maxSuggestions,maxHistoryItems,historyKey,historyHeaderText,ariaLabel,ariaLabelledBy,ariaDescribedBy,deleteIconAriaLabel,historyDeleteAriaLabel,dropdownAriaLabel,suggestionAriaLabel,historyItemAriaLabel})=>{const element=document.createElement("ifx-search-field");return element.setAttribute("size",size),element.setAttribute("disabled",disabled),element.setAttribute("show-delete-icon",showDeleteIcon),element.setAttribute("show-suggestions",showSuggestions),element.setAttribute("enable-history",enableHistory),element.setAttribute("max-suggestions",maxSuggestions),element.setAttribute("max-history-items",maxHistoryItems),element.setAttribute("history-key",historyKey),element.setAttribute("history-header-text",historyHeaderText),element.setAttribute("value",value),element.setAttribute("autocomplete",autocomplete),null!=placeholder&&element.setAttribute("placeholder",placeholder),null!=maxlength&&element.setAttribute("maxlength",maxlength),null!=ariaLabel&&element.setAttribute("aria-label",ariaLabel),null!=ariaLabelledBy&&element.setAttribute("aria-labelledby",ariaLabelledBy),null!=ariaDescribedBy&&element.setAttribute("aria-describedby",ariaDescribedBy),null!=deleteIconAriaLabel&&element.setAttribute("delete-icon-aria-label",deleteIconAriaLabel),null!=historyDeleteAriaLabel&&element.setAttribute("history-delete-aria-label",historyDeleteAriaLabel),null!=dropdownAriaLabel&&element.setAttribute("dropdown-aria-label",dropdownAriaLabel),null!=suggestionAriaLabel&&element.setAttribute("suggestion-aria-label",suggestionAriaLabel),null!=historyItemAriaLabel&&element.setAttribute("history-item-aria-label",historyItemAriaLabel),setTimeout(()=>{element.suggestions=genericMockSuggestions,enableHistory&&"undefined"!=typeof localStorage&&resetHistoryForStorybook(historyKey)},100),element.addEventListener("ifxInput",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxInput")),element.addEventListener("ifxSuggestionRequested",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxSuggestionRequested")),element.addEventListener("ifxSuggestionSelected",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxSuggestionSelected")),element.addEventListener("ifxFocus",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxFocus")),element.addEventListener("ifxBlur",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("ifxBlur")),element.addEventListener("ifxSuggestionRequested",event=>{const query=event.detail;if(query){const filteredSuggestions=genericMockSuggestions.filter(s=>s.text.toLowerCase().includes(query.toLowerCase()));element.suggestions=filteredSuggestions}}),element}).bind({});SearchSuggestions.args={showDeleteIcon:!0,disabled:!1,size:"m",value:"",placeholder:"Search with suggestions...",autocomplete:"off",showSuggestions:!0,enableHistory:!0,maxSuggestions:10,maxHistoryItems:5,historyKey:"storybook-search-history",historyHeaderText:"Recent Searches",ariaLabel:"Search field",deleteIconAriaLabel:"Clear search",historyDeleteAriaLabel:"Remove from history",dropdownAriaLabel:"Search suggestions and history",suggestionAriaLabel:"Search suggestion",historyItemAriaLabel:"Search history item"};const __namedExportsOrder=["Default","SearchSuggestions"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  disabled,\n  size,\n  showDeleteIcon,\n  placeholder,\n  maxlength,\n  value,\n  autocomplete,\n  showSuggestions,\n  enableHistory,\n  maxSuggestions,\n  maxHistoryItems,\n  historyKey,\n  historyHeaderText,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaDescribedBy,\n  deleteIconAriaLabel,\n  historyDeleteAriaLabel,\n  dropdownAriaLabel,\n  suggestionAriaLabel,\n  historyItemAriaLabel\n}) => {\n  const element = document.createElement('ifx-search-field');\n  element.setAttribute('size', size);\n  element.setAttribute('disabled', disabled);\n  element.setAttribute('show-delete-icon', showDeleteIcon);\n  element.setAttribute('show-suggestions', showSuggestions);\n  element.setAttribute('enable-history', enableHistory);\n  element.setAttribute('max-suggestions', maxSuggestions);\n  element.setAttribute('max-history-items', maxHistoryItems);\n  element.setAttribute('history-key', historyKey);\n  element.setAttribute('history-header-text', historyHeaderText);\n  element.setAttribute('value', value);\n  element.setAttribute('autocomplete', autocomplete);\n  if (placeholder != undefined) element.setAttribute('placeholder', placeholder);\n  if (maxlength != undefined) element.setAttribute('maxlength', maxlength);\n  if (ariaLabel != undefined) element.setAttribute('aria-label', ariaLabel);\n  if (ariaLabelledBy != undefined) element.setAttribute('aria-labelledby', ariaLabelledBy);\n  if (ariaDescribedBy != undefined) element.setAttribute('aria-describedby', ariaDescribedBy);\n  if (deleteIconAriaLabel != undefined) element.setAttribute('delete-icon-aria-label', deleteIconAriaLabel);\n  if (historyDeleteAriaLabel != undefined) element.setAttribute('history-delete-aria-label', historyDeleteAriaLabel);\n  if (dropdownAriaLabel != undefined) element.setAttribute('dropdown-aria-label', dropdownAriaLabel);\n  if (suggestionAriaLabel != undefined) element.setAttribute('suggestion-aria-label', suggestionAriaLabel);\n  if (historyItemAriaLabel != undefined) element.setAttribute('history-item-aria-label', historyItemAriaLabel);\n\n  // Set initial suggestions if showSuggestions is enabled\n  setTimeout(() => {\n    if (showSuggestions) {\n      element.suggestions = genericMockSuggestions;\n    }\n\n    // Set up initial history if enabled - always reset for consistent demo\n    if (enableHistory && typeof localStorage !== 'undefined') {\n      resetHistoryForStorybook(historyKey);\n      // History will be loaded automatically when the component initializes\n    }\n  }, 100);\n\n  // Event listeners\n  element.addEventListener('ifxInput', action('ifxInput'));\n  element.addEventListener('ifxSuggestionRequested', action('ifxSuggestionRequested'));\n  element.addEventListener('ifxSuggestionSelected', action('ifxSuggestionSelected'));\n  element.addEventListener('ifxFocus', action('ifxFocus'));\n  element.addEventListener('ifxBlur', action('ifxBlur'));\n\n  // Handle suggestion requests for Default story\n  element.addEventListener('ifxSuggestionRequested', event => {\n    const query = event.detail;\n    if (query && showSuggestions) {\n      // Filter suggestions based on query\n      const filteredSuggestions = genericMockSuggestions.filter(s => s.text.toLowerCase().includes(query.toLowerCase()));\n      element.suggestions = filteredSuggestions;\n    }\n  });\n  return element;\n}",...Default.parameters?.docs?.source}}},SearchSuggestions.parameters={...SearchSuggestions.parameters,docs:{...SearchSuggestions.parameters?.docs,source:{originalSource:"({\n  disabled,\n  size,\n  showDeleteIcon,\n  placeholder,\n  maxlength,\n  value,\n  autocomplete,\n  showSuggestions,\n  enableHistory,\n  maxSuggestions,\n  maxHistoryItems,\n  historyKey,\n  historyHeaderText,\n  ariaLabel,\n  ariaLabelledBy,\n  ariaDescribedBy,\n  deleteIconAriaLabel,\n  historyDeleteAriaLabel,\n  dropdownAriaLabel,\n  suggestionAriaLabel,\n  historyItemAriaLabel\n}) => {\n  const element = document.createElement('ifx-search-field');\n  element.setAttribute('size', size);\n  element.setAttribute('disabled', disabled);\n  element.setAttribute('show-delete-icon', showDeleteIcon);\n  element.setAttribute('show-suggestions', showSuggestions);\n  element.setAttribute('enable-history', enableHistory);\n  element.setAttribute('max-suggestions', maxSuggestions);\n  element.setAttribute('max-history-items', maxHistoryItems);\n  element.setAttribute('history-key', historyKey);\n  element.setAttribute('history-header-text', historyHeaderText);\n  element.setAttribute('value', value);\n  element.setAttribute('autocomplete', autocomplete);\n  if (placeholder != undefined) element.setAttribute('placeholder', placeholder);\n  if (maxlength != undefined) element.setAttribute('maxlength', maxlength);\n  if (ariaLabel != undefined) element.setAttribute('aria-label', ariaLabel);\n  if (ariaLabelledBy != undefined) element.setAttribute('aria-labelledby', ariaLabelledBy);\n  if (ariaDescribedBy != undefined) element.setAttribute('aria-describedby', ariaDescribedBy);\n  if (deleteIconAriaLabel != undefined) element.setAttribute('delete-icon-aria-label', deleteIconAriaLabel);\n  if (historyDeleteAriaLabel != undefined) element.setAttribute('history-delete-aria-label', historyDeleteAriaLabel);\n  if (dropdownAriaLabel != undefined) element.setAttribute('dropdown-aria-label', dropdownAriaLabel);\n  if (suggestionAriaLabel != undefined) element.setAttribute('suggestion-aria-label', suggestionAriaLabel);\n  if (historyItemAriaLabel != undefined) element.setAttribute('history-item-aria-label', historyItemAriaLabel);\n\n  // Initialize with mock data\n  setTimeout(() => {\n    // Set suggestions - use the same generic mockup as Default story\n    element.suggestions = genericMockSuggestions;\n\n    // Set up initial history if enabled - always reset for consistent demo\n    if (enableHistory && typeof localStorage !== 'undefined') {\n      resetHistoryForStorybook(historyKey);\n      // History will be loaded automatically when the component initializes\n    }\n  }, 100);\n\n  // Event listeners\n  element.addEventListener('ifxInput', action('ifxInput'));\n  element.addEventListener('ifxSuggestionRequested', action('ifxSuggestionRequested'));\n  element.addEventListener('ifxSuggestionSelected', action('ifxSuggestionSelected'));\n  element.addEventListener('ifxFocus', action('ifxFocus'));\n  element.addEventListener('ifxBlur', action('ifxBlur'));\n\n  // Handle suggestion requests\n  element.addEventListener('ifxSuggestionRequested', event => {\n    const query = event.detail;\n    if (query) {\n      // Filter suggestions based on query - use the same generic mockup\n      const filteredSuggestions = genericMockSuggestions.filter(s => s.text.toLowerCase().includes(query.toLowerCase()));\n      element.suggestions = filteredSuggestions;\n    }\n  });\n  return element;\n}",...SearchSuggestions.parameters?.docs?.source}}}}}]);