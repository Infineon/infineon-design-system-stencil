"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[2370],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/dropdown/dropdown.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,LabelTrigger:()=>LabelTrigger,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs"),_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Dropdown",args:{label:"Dropdown",size:"m",disabled:!1,search:!1,header:!1,separator:!1,variant:"primary",url:"",target:"_self",icon:"c-check-16",dropdownMenuItemIcon:!1,defaultOpen:!1,noCloseOnOutsideClick:!1,noCloseOnMenuClick:!1,noAppendToBody:!1,placement:"bottom-start"},argTypes:{placement:{options:["auto","auto-start","auto-end","top","top-start","top-end","bottom","bottom-start","bottom-end","right","right-start","right-end","left","left-start","left-end"],control:{type:"select"}},label:{description:"The visible name or label for the dropdown button"},size:{description:'The size of the dropdown. Accepted values are "s" for small and "m" for medium',options:["s","m"],control:{type:"radio"}},disabled:{description:"Determines if the dropdown button should be disabled"},variant:{description:'The visual style of the dropdown button. Accepted values are "primary", "secondary", "tertiary"',options:["primary","secondary","tertiary"],control:{type:"radio"}},target:{options:["_self","_blank"],control:{type:"radio"}},icon:{description:"The icon to be displayed on the dropdown button",options:Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_1__.c).map((i=>i.name)),control:{type:"select"}},defaultOpen:{description:"Determines if the dropdown should be open by default"},noCloseOnOutsideClick:{description:"Determines if the dropdown should not close when a click outside the dropdown happens"},noCloseOnMenuClick:{description:"Determines if the dropdown should not close when a click inside the dropdown menu happens"},noAppendToBody:{description:"Determines if the dropdown should not be appended to the body"},ifxOpen:{action:"ifxOpen",description:"Custom event that is emitted when the dropdown opens"},ifxClose:{action:"ifxClose",description:"Custom event emitted when dropdown closes"},ifxDropdownMenuItem:{action:"ifxDropdownMenuItem",description:"Custom event emitted when an item is selected",table:{type:{summary:"Framework integration",detail:'React: onIfxDropdownMenuItem={handleChange}\nVue:@ifxDropdownMenuItem="handleChange"\nAngular:(ifxDropdownMenuItem)="handleChange()"\nVanillaJs:.addEventListener("ifxDropdownMenuItem", (event) => {//handle change});'}}}}},Default=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`<ifx-dropdown placement="${args.placement}" disabled="${args.disabled}" no-close-on-menu-click="${args.noCloseOnOutsideClick}">\n  <ifx-dropdown-trigger-button variant="${args.variant}">\n    dropdown\n  </ifx-dropdown-trigger-button>\n  <ifx-dropdown-menu size="${args.size}">\n    ${args.header?"<ifx-dropdown-header>Header Text</ifx-dropdown-header>":""}\n    ${args.search?'<ifx-search-field show-delete-icon="false"></ifx-search-field>':""}\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon?"c-info-16":""}" target="${args.target}" href="${""!==args.url?args.url:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon?"c-info-16":""}" target="${args.target}" href="${""!==args.url?args.url:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon?"c-info-16":""}" target="${args.target}" href="${""!==args.url?args.url:""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon?"c-info-16":""}" target="${args.target}" href="${""!==args.url?args.url:""}">Menu Item</ifx-dropdown-item>\n    ${args.separator?"<ifx-dropdown-separator></ifx-dropdown-separator>":""}\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon?"c-info-16":""}" target="${args.target}" href="${""!==args.url?args.url:""}">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;const dropdown=wrapper.querySelector("ifx-dropdown"),dropdownMenu=dropdown.querySelector("ifx-dropdown-menu");return dropdown.addEventListener("ifxOpen",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxOpen")),dropdown.addEventListener("ifxClose",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxClose")),dropdownMenu.addEventListener("ifxDropdownMenuItem",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxDropdownMenuItem")),wrapper}).bind({}),LabelTrigger=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`<ifx-dropdown\n    placement="${args.placement}"\n    default-open="${args.defaultOpen}"\n    no-close-on-outside-click="${args.noCloseOnOutsideClick}"\n    no-close-on-menu-click="${args.noCloseOnOutsideClick}"\n    disabled="${args.disabled}"\n    no-append-to-body="${args.noAppendToBody}"\n  >\n    Hello World! Click on the text to open the dropdown\n    <ifx-dropdown-trigger>\n      <ifx-icon icon="${args.icon}"></ifx-icon>\n    </ifx-dropdown-trigger>\n    Some more text\n    <ifx-dropdown-menu>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n    </ifx-dropdown-menu>\n  </ifx-dropdown>`;const dropdown=wrapper.querySelector("ifx-dropdown"),dropdownMenu=dropdown.querySelector("ifx-dropdown-menu");return dropdown.addEventListener("ifxOpen",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxOpen")),dropdown.addEventListener("ifxClose",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxClose")),dropdownMenu.addEventListener("ifxDropdownMenuItem",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxDropdownMenuItem")),wrapper}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => {\n  const wrapper = document.createElement(\'div\');\n  wrapper.innerHTML = `<ifx-dropdown placement="${args.placement}" disabled="${args.disabled}" no-close-on-menu-click="${args.noCloseOnOutsideClick}">\n  <ifx-dropdown-trigger-button variant="${args.variant}">\n    dropdown\n  </ifx-dropdown-trigger-button>\n  <ifx-dropdown-menu size="${args.size}">\n    ${args.header ? `<ifx-dropdown-header>Header Text</ifx-dropdown-header>` : ""}\n    ${args.search ? `<ifx-search-field show-delete-icon="false"></ifx-search-field>` : ""}\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon ? \'c-info-16\' : ""}" target="${args.target}" href="${args.url !== "" ? args.url : ""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon ? \'c-info-16\' : ""}" target="${args.target}" href="${args.url !== "" ? args.url : ""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon ? \'c-info-16\' : ""}" target="${args.target}" href="${args.url !== "" ? args.url : ""}">Menu Item</ifx-dropdown-item>\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon ? \'c-info-16\' : ""}" target="${args.target}" href="${args.url !== "" ? args.url : ""}">Menu Item</ifx-dropdown-item>\n    ${args.separator ? `<ifx-dropdown-separator></ifx-dropdown-separator>` : ""}\n    <ifx-dropdown-item icon="${args.dropdownMenuItemIcon ? \'c-info-16\' : ""}" target="${args.target}" href="${args.url !== "" ? args.url : ""}">Menu Item</ifx-dropdown-item>\n  </ifx-dropdown-menu>\n</ifx-dropdown>`;\n  const dropdown = (wrapper.querySelector(\'ifx-dropdown\') as HTMLElement);\n  const dropdownMenu = dropdown.querySelector(\'ifx-dropdown-menu\');\n  dropdown.addEventListener(\'ifxOpen\', action(\'ifxOpen\'));\n  dropdown.addEventListener(\'ifxClose\', action(\'ifxClose\'));\n  dropdownMenu.addEventListener(\'ifxDropdownMenuItem\', action(\'ifxDropdownMenuItem\'));\n  return wrapper;\n}',...Default.parameters?.docs?.source}}},LabelTrigger.parameters={...LabelTrigger.parameters,docs:{...LabelTrigger.parameters?.docs,source:{originalSource:"args => {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = `<ifx-dropdown\n    placement=\"${args.placement}\"\n    default-open=\"${args.defaultOpen}\"\n    no-close-on-outside-click=\"${args.noCloseOnOutsideClick}\"\n    no-close-on-menu-click=\"${args.noCloseOnOutsideClick}\"\n    disabled=\"${args.disabled}\"\n    no-append-to-body=\"${args.noAppendToBody}\"\n  >\n    Hello World! Click on the text to open the dropdown\n    <ifx-dropdown-trigger>\n      <ifx-icon icon=\"${args.icon}\"></ifx-icon>\n    </ifx-dropdown-trigger>\n    Some more text\n    <ifx-dropdown-menu>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n      <ifx-dropdown-item>Menu Item</ifx-dropdown-item>\n    </ifx-dropdown-menu>\n  </ifx-dropdown>`;\n  const dropdown = (wrapper.querySelector('ifx-dropdown') as HTMLElement);\n  const dropdownMenu = dropdown.querySelector('ifx-dropdown-menu');\n  dropdown.addEventListener('ifxOpen', action('ifxOpen'));\n  dropdown.addEventListener('ifxClose', action('ifxClose'));\n  dropdownMenu.addEventListener('ifxDropdownMenuItem', action('ifxDropdownMenuItem'));\n  return wrapper;\n}",...LabelTrigger.parameters?.docs?.source}}};const __namedExportsOrder=["Default","LabelTrigger"]}}]);