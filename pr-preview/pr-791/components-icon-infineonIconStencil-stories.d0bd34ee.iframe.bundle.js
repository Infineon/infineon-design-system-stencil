"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[3061],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/icon/infineonIconStencil.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Icon",tags:["autodocs"],args:{icon:"c-check-16"},argTypes:{icon:{options:Object.values(_infineon_infineon_icons__WEBPACK_IMPORTED_MODULE_0__.c).map((i=>i.name)),control:{type:"select"}},consoleError:{action:"consoleError",description:"Custom event emitted when icon is invalid",table:{type:{summary:"Framework integration",detail:'React: onConsoleError={handleChange}\nVue:@consoleError="handleChange"\nAngular:(consoleError)="handleChange()"\nVanillaJs:.addEventListener("consoleError", (event) => {//handle change});'}}}}},Default=(({icon})=>{const ifxIcon=document.createElement("ifx-icon");return ifxIcon.setAttribute("icon",icon),ifxIcon.addEventListener("consoleError",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.aD)("consoleError")),ifxIcon}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  icon\n}) => {\n  const ifxIcon = document.createElement('ifx-icon');\n  ifxIcon.setAttribute('icon', icon);\n  ifxIcon.addEventListener('consoleError', action('consoleError'));\n  return ifxIcon;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);