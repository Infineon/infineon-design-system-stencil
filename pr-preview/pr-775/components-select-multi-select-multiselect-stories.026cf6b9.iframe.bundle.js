"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[3115],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/select/multi-select/multiselect.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Select/Multi Select",args:{size:"m",batchSize:10,maxItemCount:10,error:!1,errorMessage:"Some error",label:"",disabled:!1,placeholder:"Placeholder"},argTypes:{size:{name:"Size",options:{"small (36px)":"s","medium (40px)":"m"},control:{type:"radio"}},batchSize:{name:"Batch size",description:"Batch size used during lazy loading options",control:{type:"number"}},maxItemCount:{name:"Maximum selectable items",control:{type:"number"},description:"Number of maximum selectable items"},disabled:{name:"Disabled",options:[!0,!1],control:{type:"radio"}},error:{name:"Error",options:[!0,!1],control:{type:"radio"}},errorMessage:{name:"Error message",control:"text"},label:{name:"Label",control:"text"},placeholder:{name:"Placeholder",control:"text"},options:{name:"Options",description:"Takes an array of objects in the following format"},ifxSelect:{name:"Custom event: ifxSelect",action:"ifxSelect",description:"Custom event emitted when item is selected or unselected",table:{type:{summary:"Framework integration",detail:'React: onIfxSelect={handleInput}\nVue:@ifxSelect="handleInput"\nAngular:(ifxSelect)="handleInput()"\nVanillaJs:.addEventListener("ifxSelect", (event) => {//handle input});'}}}}},Default=(args=>{const template=`<ifx-multiselect \n  options='${JSON.stringify(args.options)}' \n  batch-size='${args.batchSize}'\n  size='${args.size}'\n  max-item-count='${args.maxItemCount}'\n  error='${args.error}'\n  error-message='${args.errorMessage}'\n  label='${args.label}'\n  placeholder='${args.placeholder}'\n  disabled='${args.disabled}'>\n</ifx-multiselect>`;return setTimeout((()=>{document.querySelector("ifx-multiselect").addEventListener("ifxSelect",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxSelect"))}),0),template}).bind({});Default.args={options:[{value:"a",label:"option a",selected:!1},{value:"b",label:"option b",selected:!1},{value:"z",label:"option z",selected:!1,children:[{value:"z1",label:"option z1",selected:!1},{value:"z2",label:"option z2",selected:!1}]}]},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  const template = `<ifx-multiselect \n  options='${JSON.stringify(args.options)}' \n  batch-size='${args.batchSize}'\n  size='${args.size}'\n  max-item-count='${args.maxItemCount}'\n  error='${args.error}'\n  error-message='${args.errorMessage}'\n  label='${args.label}'\n  placeholder='${args.placeholder}'\n  disabled='${args.disabled}'>\n</ifx-multiselect>`;\n  setTimeout(() => {\n    document.querySelector('ifx-multiselect').addEventListener('ifxSelect', action('ifxSelect'));\n  }, 0);\n  return template;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);