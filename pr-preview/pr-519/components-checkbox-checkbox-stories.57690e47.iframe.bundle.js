"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[4125],{"../../node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{aD:()=>chunk_AY7I2SME.aD});var chunk_AY7I2SME=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs")},"./src/components/checkbox/checkbox.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Checkbox",tags:["autodocs"],args:{error:!1,disabled:!1,value:!1,label:"Text",size:"s",indeterminate:!1},argTypes:{size:{options:["s","m"],control:{type:"radio"}},onIfxChange:{action:"ifxChange"}}},Default=(({error,disabled,value,indeterminate,size,label})=>{const checkbox=document.createElement("ifx-checkbox");return checkbox.setAttribute("error",error),checkbox.setAttribute("disabled",disabled),checkbox.setAttribute("value",value),checkbox.setAttribute("size",size),checkbox.setAttribute("indeterminate",indeterminate),checkbox.addEventListener("ifxChange",(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("ifxChange")),checkbox.innerHTML=`\n    ${label}\n  `,checkbox}).bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"({\n  error,\n  disabled,\n  value,\n  indeterminate,\n  size,\n  label\n}) => {\n  const checkbox = document.createElement('ifx-checkbox');\n  checkbox.setAttribute('error', error);\n  checkbox.setAttribute('disabled', disabled);\n  checkbox.setAttribute('value', value);\n  checkbox.setAttribute('size', size);\n  checkbox.setAttribute('indeterminate', indeterminate);\n  checkbox.addEventListener('ifxChange', action('ifxChange'));\n  checkbox.innerHTML = `\n    ${label}\n  `;\n  return checkbox;\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);