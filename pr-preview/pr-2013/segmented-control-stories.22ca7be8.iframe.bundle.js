"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[5893],{"./src/components/segmented-control/segmented-control.stories.ts":(module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=exports.Default=void 0;var _addonActions=__webpack_require__("../../node_modules/@storybook/addon-actions/dist/index.js"),_infineonIcons=__webpack_require__("../../node_modules/@infineon/infineon-icons/dist/icons.js");exports.default={title:"Components/Segmented Control",tags:["autodocs"],args:{amountOfSegments:5,labelOfSegment:"Label",caption:"Caption text to describe the controls",label:"Group Label",size:"regular",icon:"star-16",selected:"false",value:"Value"},argTypes:{amountOfSegments:{name:"Amount of Segments",control:{type:"number",min:2},description:"Control the number of *<ifx-segment>* in component.",table:{category:"story controls",type:{summary:null}}},labelOfSegment:{name:"Label of Segment",description:"Set the label of *<ifx-segmented-control>*.",table:{category:"story controls"}},caption:{description:"Set the caption text of segmented control group.",table:{category:"ifx-segmented-control props"}},label:{name:"label",description:"Set the label of control group.",table:{category:"ifx-segmented-control props"}},size:{description:"Switch between the size of Segmented Control.",control:"radio",options:["regular","small"],table:{category:"ifx-segmented-control props",defaultValue:{summary:"regular"},type:{summary:"regular | small"}}},icon:{description:"Set icon of a segment.",options:Object.keys(_infineonIcons.icons),control:{type:"select"},table:{category:"ifx-segment props"}},selected:{description:"Selects the segment when set true.\n\nSee the 2nd *<ifx-segment>* for effects",control:"boolean",table:{category:"ifx-segment props",defaultValue:{summary:!1},type:{summary:"boolean"}}},value:{description:"Set the value of *<ifx-segment>*. Required.",table:{category:"ifx-segment props",type:{summary:"string"}},type:{required:!0}},ifxChange:{description:"Custom event emitted when the segment is changed.",table:{category:"custom events",type:{summary:"Framework integration",detail:'\nReact: onIfxChange={handleChange}\nVue: @ifxChange="handleChange"\nAngular: (ifxChange)="handleChange()"\nVanillaJs: .addEventListener("ifxChange", (event) => {/*handle change*/});'}}}}};exports.Default=(args=>{const wrapper=document.createElement("div");wrapper.innerHTML=`\n<ifx-segmented-control\ncaption = '${args.caption}'\nlabel = '${args.label}'\nsize = '${args.size}'>\n    ${Array.from({length:args.amountOfSegments},(_,segmentId)=>{const segment=document.createElement("ifx-segment");return segment.innerText=args.labelOfSegment,segment.setAttribute("value",`${args.value}${segmentId+1}`),segment.setAttribute("icon",`${args.icon}`),!0===args.selected&&1===segmentId&&segment.setAttribute("selected","true"),segment.outerHTML}).join("\n    ")}\n</ifx-segmented-control>  \n`;const segmentedControl=wrapper.querySelector("ifx-segmented-control");return segmentedControl.addEventListener("ifxChange",(0,_addonActions.action)("ifxChange")),segmentedControl}).bind({});module.exports.__namedExportsOrder=["Default"]}}]);