/*! For license information please see components-card-Usage-mdx.9aa5228b.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_infineon_infineon_design_system_stencil=self.webpackChunk_infineon_infineon_design_system_stencil||[]).push([[1071,1502],{"../../node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("../../node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./src/components/card/card.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Horizontal:()=>Horizontal,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Card",tags:["autodocs"],args:{direction:"vertical",overline:"Overline",headline:"Headline",description:"Some quick example text to build on the card title and make up the bulk of the card's content.",button:"button",href:"",target:"_blank",icon:"c-info-16",position:"right"},argTypes:{button:{options:["button","link","none"],control:{type:"radio"}},direction:{options:["horizontal","vertical"],control:{type:"radio"}},position:{options:["left","right"],control:{type:"radio"}},target:{options:["_blank","_self","_parent"],control:{type:"radio"}}}},Default=(args=>`<ifx-card direction="${args.direction}" href="${args.href}" target="${args.target}">\n    <ifx-card-image position="${args.position}" src="https://upload.wikimedia.org/wikipedia/commons/e/e4/Latte_and_dark_coffee.jpg" alt="" slot="img"></ifx-card-image>\n    ${args.overline?`<ifx-card-overline>\n        ${args.overline}\n        </ifx-card-overline>`:""}\n      ${args.headline?`<ifx-card-headline>\n        ${args.headline}\n        </ifx-card-headline>`:""}\n     ${args.description?`<ifx-card-text>\n        ${args.description}\n        </ifx-card-text>`:""}\n      ${"button"===args.button?'<ifx-card-links slot="buttons">\n          <ifx-button color="primary">Button</ifx-button>\n          <ifx-button color="secondary">Button</ifx-button>\n          <ifx-button color="primary">Button</ifx-button>\n          <ifx-button color="secondary">Button</ifx-button>\n          </ifx-card-links>':""}\n      ${"link"===args.button?'<ifx-card-links slot="buttons">\n            <ifx-link color="primary" href="https://google.com" target="_blank" underline="false">\n              <ifx-icon icon="calendar16"></ifx-icon>\n              Link\n            </ifx-link>\n            <ifx-link color="primary" href="https://yahoo.com" target="_blank" underline="false">\n              <ifx-icon icon="calendar16"></ifx-icon>\n              Link\n            </ifx-link>\n          </ifx-card-links>':""}\n  </ifx-card>`).bind({});Default.argTypes={position:{table:{disable:!0}}};const Horizontal=(args=>`<ifx-card direction="${args.direction}" href="${args.href}" target="${args.target}">\n    <ifx-card-image position="${args.position}" src="https://upload.wikimedia.org/wikipedia/commons/e/e4/Latte_and_dark_coffee.jpg" alt="" slot="img"></ifx-card-image>\n    ${args.overline?`<ifx-card-overline>\n        ${args.overline}\n        </ifx-card-overline>`:""}\n      ${args.headline?`<ifx-card-headline>\n          ${args.headline}\n          </ifx-card-headline>`:""}\n        ${args.description?`<ifx-card-text>\n            ${args.description}\n            </ifx-card-text>`:""}\n          ${"link"===args.button?'<ifx-card-links slot="buttons">\n          <ifx-link color="primary" href="https://google.com" target="_blank" underline="false">\n            <ifx-icon icon="calendar16"></ifx-icon>\n            Link\n          </ifx-link>\n          <ifx-link color="primary" href="https://yahoo.com" target="_blank" underline="false">\n            <ifx-icon icon="calendar16"></ifx-icon>\n            Link\n          </ifx-link>\n        </ifx-card-links>':""}\n  </ifx-card>`).bind({});Horizontal.argTypes={direction:"horizontal",image:{table:{disable:!0}},button:{options:["link","none"],control:{type:"radio"}}},Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'args => `<ifx-card direction="${args.direction}" href="${args.href}" target="${args.target}">\n    <ifx-card-image position="${args.position}" src="https://upload.wikimedia.org/wikipedia/commons/e/e4/Latte_and_dark_coffee.jpg" alt="" slot="img"></ifx-card-image>\n    ${args.overline ? `<ifx-card-overline>\n        ${args.overline}\n        </ifx-card-overline>` : ""}\n      ${args.headline ? `<ifx-card-headline>\n        ${args.headline}\n        </ifx-card-headline>` : ""}\n     ${args.description ? `<ifx-card-text>\n        ${args.description}\n        </ifx-card-text>` : ""}\n      ${args.button === \'button\' ? `<ifx-card-links slot="buttons">\n          <ifx-button color="primary">Button</ifx-button>\n          <ifx-button color="secondary">Button</ifx-button>\n          <ifx-button color="primary">Button</ifx-button>\n          <ifx-button color="secondary">Button</ifx-button>\n          </ifx-card-links>` : ""}\n      ${args.button === \'link\' ? `<ifx-card-links slot="buttons">\n            <ifx-link color="primary" href="https://google.com" target="_blank" underline="false">\n              <ifx-icon icon="calendar16"></ifx-icon>\n              Link\n            </ifx-link>\n            <ifx-link color="primary" href="https://yahoo.com" target="_blank" underline="false">\n              <ifx-icon icon="calendar16"></ifx-icon>\n              Link\n            </ifx-link>\n          </ifx-card-links>` : ""}\n  </ifx-card>`',...Default.parameters?.docs?.source}}},Horizontal.parameters={...Horizontal.parameters,docs:{...Horizontal.parameters?.docs,source:{originalSource:'args => `<ifx-card direction="${args.direction}" href="${args.href}" target="${args.target}">\n    <ifx-card-image position="${args.position}" src="https://upload.wikimedia.org/wikipedia/commons/e/e4/Latte_and_dark_coffee.jpg" alt="" slot="img"></ifx-card-image>\n    ${args.overline ? `<ifx-card-overline>\n        ${args.overline}\n        </ifx-card-overline>` : ""}\n      ${args.headline ? `<ifx-card-headline>\n          ${args.headline}\n          </ifx-card-headline>` : ""}\n        ${args.description ? `<ifx-card-text>\n            ${args.description}\n            </ifx-card-text>` : ""}\n          ${args.button === \'link\' ? `<ifx-card-links slot="buttons">\n          <ifx-link color="primary" href="https://google.com" target="_blank" underline="false">\n            <ifx-icon icon="calendar16"></ifx-icon>\n            Link\n          </ifx-link>\n          <ifx-link color="primary" href="https://yahoo.com" target="_blank" underline="false">\n            <ifx-icon icon="calendar16"></ifx-icon>\n            Link\n          </ifx-link>\n        </ifx-card-links>` : ""}\n  </ifx-card>`',...Horizontal.parameters?.docs?.source}}};const __namedExportsOrder=["Default","Horizontal"]},"./src/components/card/Usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>Usage});__webpack_require__("../../node_modules/react/index.js");var jsx_runtime=__webpack_require__("../../node_modules/react/jsx-runtime.js"),lib=__webpack_require__("../../node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("../../node_modules/@storybook/blocks/dist/index.mjs"),card_stories=__webpack_require__("./src/components/card/card.stories.ts");const card_anatomy_namespaceObject=__webpack_require__.p+"static/media/card-anatomy.8e9dbc48.png",card_first_action_area_namespaceObject=__webpack_require__.p+"static/media/card-first-action-area.a50c7d33.png",card_horizontal_alignment_namespaceObject=__webpack_require__.p+"static/media/card-horizontal-alignment.33a4f205.png",card_horizontal_first_action_area_namespaceObject=__webpack_require__.p+"static/media/card-horizontal-first-action-area.2c386e17.png",card_horizontal_mobile_namespaceObject=__webpack_require__.p+"static/media/card-horizontal-mobile.d5c14612.png",card_horizontal_second_action_area_namespaceObject=__webpack_require__.p+"static/media/card-horizontal-second-action-area.7b41b860.png",card_horizontal_states_namespaceObject=__webpack_require__.p+"static/media/card-horizontal-states.d26f5515.png",card_second_action_area_namespaceObject=__webpack_require__.p+"static/media/card-second-action-area.3c2d034f.png",card_simple_namespaceObject=__webpack_require__.p+"static/media/card-simple.b4de901c.png",card_states_namespaceObject=__webpack_require__.p+"static/media/card-states.d75fdf26.png",card_with_button_namespaceObject=__webpack_require__.p+"static/media/card-with-button.972353c8.png",card_with_link_namespaceObject=__webpack_require__.p+"static/media/card-with-link.5a72f301.png",card_with_text_link_namespaceObject=__webpack_require__.p+"static/media/card-with-text-link.cd0e7b88.png";function _createMdxContent(props){const _components=Object.assign({h1:"h1",p:"p",h2:"h2",h3:"h3",ul:"ul",li:"li",strong:"strong",br:"br",blockquote:"blockquote",hr:"hr",a:"a"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{of:card_stories}),"\n",(0,jsx_runtime.jsx)(_components.h1,{id:"card",children:"Card"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The card component provides users with a flexible layout for displaying various types of content. Cards can accommodate different functionalities, content types, and sizes, allowing designers to create visually appealing and informative card-based interfaces."}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-to-use",children:"When to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"To present information or content in a visually appealing and organized manner."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To showcase a combination of image, text, and a button for user interaction."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To incorporate various content elements instead of a button and allow for more flexibility."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To represent a hierarchical flow of information."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"To display content elements side by side, with equal importance like products or news."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"when-not-to-use",children:"When not to use"}),"\n",(0,jsx_runtime.jsxs)(_components.ul,{children:["\n",(0,jsx_runtime.jsx)(_components.li,{children:"If the content you need to display is minimal or doesn't require any specific visual organization."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"If the content doesn't align with the available card variants (default card, text card, or additional functions card)."}),"\n",(0,jsx_runtime.jsx)(_components.li,{children:"If the visual hierarchy of the content doesn't align with the vertical or horizontal layout."}),"\n"]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"anatomy",children:"Anatomy"}),"\n",(0,jsx_runtime.jsx)("img",{src:card_anatomy_namespaceObject,alt:"Card Anatomy"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Card Image (1)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","A linked image which corresponds to the cards' content."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Card Overline (2)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","An overline appears above the card title to provide additional context."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Card Title (3)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","A core text element that briefly summarises the theme of the card."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Card Body (4)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","The main content area of the card where the text copy is placed. The text should not be longer than ",(0,jsx_runtime.jsx)(_components.strong,{children:"three lines"}),"."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Additional interactive elements (5)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","Another optional elements that can contain additional actions like a button or links related to the card content."]}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:[(0,jsx_runtime.jsx)(_components.strong,{children:"Card Container (6)"}),(0,jsx_runtime.jsx)(_components.br,{}),"\n","The outermost container that wraps the entire card. It is surrounded with a border."]}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"layouts",children:"Layouts"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"vertical",children:"Vertical"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The vertical card Layout is the default and most commonly used layout. It consists of a single column of content and is ideal for presenting a compact summary of information."}),"\n",(0,jsx_runtime.jsx)("img",{src:card_simple_namespaceObject,alt:"Card Simple"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"horizontal",children:"Horizontal"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:'The horizontal layout is an alternative style of the card component, optimized for displaying content in a horizontal arrangement. It is particularly useful for showcasing images and brief descriptions. It is also possible to switch the image- and textual area. Note that some functionalities available in the vertical layout may not be applicable to the horizontal layout. For example, there is no "Button" and "Text Link" available.'}),"\n",(0,jsx_runtime.jsx)("img",{src:card_horizontal_alignment_namespaceObject,alt:"Card Horizontal Align"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"mouse-interactions",children:"Mouse interactions"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The card without buttons or links is completely clickable and leads the user to its corresponding detail page. It is also possible to add another action area to the card where you can insert buttons or links. The action area itself is not hoverable/clickable, so that the buttons and links have enough interactive space."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"no-buttonlink",children:"No Button/Link"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Simple card which is linked to a specific internal page."}),"\n",(0,jsx_runtime.jsx)("img",{src:card_simple_namespaceObject,alt:"Card Simple"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"bold-link",children:"Bold Link"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["A prominent link can be added to the vertical card, visually distinguished by being rendered in bold and accompanied by an arrow icon. This link style could be used to  redirect the user to a new page and not the corresponding one. A ",(0,jsx_runtime.jsx)(_components.strong,{children:"maximum of two"})," text links should be used."]}),"\n",(0,jsx_runtime.jsx)("img",{src:card_with_link_namespaceObject,alt:"Card with link"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"text-link",children:"Text Link"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:['The card may contain "text" links that offer additional actions to the user. For example, "Quick view" or "Data sheet" links provide quick access to specific actions related to the card content before clicking on the card itself. A ',(0,jsx_runtime.jsx)(_components.strong,{children:"maximum of three"})," text links should be used."]}),"\n",(0,jsx_runtime.jsxs)(_components.blockquote,{children:["\n",(0,jsx_runtime.jsx)(_components.p,{children:"Text Link is not available in the horizontal layout."}),"\n"]}),"\n",(0,jsx_runtime.jsx)("img",{src:card_with_text_link_namespaceObject,alt:"Card with text link"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"secondary-button",children:"Secondary Button"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["A secondary button can be included, which serves as a direct action to improve or modify the content presented in the card. ",(0,jsx_runtime.jsx)(_components.strong,{children:"Only one"})," button should be used."]}),"\n",(0,jsx_runtime.jsxs)(_components.blockquote,{children:["\n",(0,jsx_runtime.jsx)(_components.p,{children:"Secondary Button is not available in the horizontal layout."}),"\n"]}),"\n",(0,jsx_runtime.jsx)("img",{src:card_with_button_namespaceObject,alt:"Card with button"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"states",children:"States"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The card has two different states: default and hover. While hovering over a card the card-border and the card-title is colored in ocean-500."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"vertical-1",children:"Vertical"}),"\n",(0,jsx_runtime.jsx)("img",{src:card_states_namespaceObject,alt:"Card States"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"horizontal-1",children:"Horizontal"}),"\n",(0,jsx_runtime.jsx)("img",{src:card_horizontal_states_namespaceObject,alt:"Card Horizontal States"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"action-areas",children:"Action areas"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"first-action-area",children:"First action area"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The fist action area is fully hoverable/clickable."}),"\n",(0,jsx_runtime.jsx)("img",{src:card_first_action_area_namespaceObject,alt:"Card First Action Area",width:"50%"}),"\n",(0,jsx_runtime.jsx)("img",{src:card_horizontal_first_action_area_namespaceObject,alt:"Card HorizontalFirst Action Area"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"second-action-area",children:"Second action area"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"If the second action area with buttons or links is activated, only these bring their native interactivity."}),"\n",(0,jsx_runtime.jsx)("img",{src:card_second_action_area_namespaceObject,alt:"Card Second First Action Area",width:"50%"}),"\n",(0,jsx_runtime.jsx)("img",{src:card_horizontal_second_action_area_namespaceObject,alt:"Card Horizontal Second First Action Area"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"mobile",children:"Mobile"}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"vertical-2",children:"Vertical"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"The layout of the vertical card remains the same in all viewports. Only the font size of the title changes slightly."}),"\n",(0,jsx_runtime.jsx)(_components.h3,{id:"horizontal-2",children:"Horizontal"}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"While the title, description and interactive elements are retained in desktop viewports, the description is deactivated in mobile viewports."}),"\n",(0,jsx_runtime.jsx)("img",{src:card_horizontal_mobile_namespaceObject,alt:"Card Horizontal Mobile"}),"\n",(0,jsx_runtime.jsx)(_components.hr,{}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["Check out the Figma component: ",(0,jsx_runtime.jsx)(_components.strong,{children:(0,jsx_runtime.jsx)(_components.a,{href:"https://www.figma.com/file/zPvPwPgb4EsYFXKC2nhzSG/Infineon-DDS-%7C-Main?type=design&node-id=2420-2421&mode=design",target:"_blank",rel:"nofollow noopener noreferrer",children:"Card"})})]}),"\n",(0,jsx_runtime.jsx)(_components.hr,{})]})}const Usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"../../node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("../../node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"../../node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("../../node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);